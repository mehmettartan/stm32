
10_adc_continueus_conversion.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012f4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  08001494  08001494  00011494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001540  08001540  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001540  08001540  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001540  08001540  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001540  08001540  00011540  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001544  08001544  00011544  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001548  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000064  080015ac  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  080015ac  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000df3  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000449  00000000  00000000  00020e87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  000212d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00021410  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000f676  00000000  00000000  00021508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001714  00000000  00000000  00030b7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00055341  00000000  00000000  00032292  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000875d3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ba4  00000000  00000000  00087624  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800147c 	.word	0x0800147c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	0800147c 	.word	0x0800147c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <pa1_adc_init>:




void pa1_adc_init(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b14      	ldr	r3, [pc, #80]	; (80002d8 <pa1_adc_init+0x58>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a13      	ldr	r2, [pc, #76]	; (80002d8 <pa1_adc_init+0x58>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOA->MODER |= (1U<<2);
 8000290:	4b12      	ldr	r3, [pc, #72]	; (80002dc <pa1_adc_init+0x5c>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a11      	ldr	r2, [pc, #68]	; (80002dc <pa1_adc_init+0x5c>)
 8000296:	f043 0304 	orr.w	r3, r3, #4
 800029a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);
 800029c:	4b0f      	ldr	r3, [pc, #60]	; (80002dc <pa1_adc_init+0x5c>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a0e      	ldr	r2, [pc, #56]	; (80002dc <pa1_adc_init+0x5c>)
 80002a2:	f043 0308 	orr.w	r3, r3, #8
 80002a6:	6013      	str	r3, [r2, #0]

	RCC->APB2ENR |= ADC1EN;
 80002a8:	4b0b      	ldr	r3, [pc, #44]	; (80002d8 <pa1_adc_init+0x58>)
 80002aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002ac:	4a0a      	ldr	r2, [pc, #40]	; (80002d8 <pa1_adc_init+0x58>)
 80002ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002b2:	6453      	str	r3, [r2, #68]	; 0x44

	ADC1->SQR3 = ADC_CH1;
 80002b4:	4b0a      	ldr	r3, [pc, #40]	; (80002e0 <pa1_adc_init+0x60>)
 80002b6:	2201      	movs	r2, #1
 80002b8:	635a      	str	r2, [r3, #52]	; 0x34

	ADC1->SQR1 = ADC_SEQ_LEN_1;
 80002ba:	4b09      	ldr	r3, [pc, #36]	; (80002e0 <pa1_adc_init+0x60>)
 80002bc:	2200      	movs	r2, #0
 80002be:	62da      	str	r2, [r3, #44]	; 0x2c

	ADC1->CR2 |= CR2_ADON;
 80002c0:	4b07      	ldr	r3, [pc, #28]	; (80002e0 <pa1_adc_init+0x60>)
 80002c2:	689b      	ldr	r3, [r3, #8]
 80002c4:	4a06      	ldr	r2, [pc, #24]	; (80002e0 <pa1_adc_init+0x60>)
 80002c6:	f043 0301 	orr.w	r3, r3, #1
 80002ca:	6093      	str	r3, [r2, #8]

}
 80002cc:	bf00      	nop
 80002ce:	46bd      	mov	sp, r7
 80002d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d4:	4770      	bx	lr
 80002d6:	bf00      	nop
 80002d8:	40023800 	.word	0x40023800
 80002dc:	40020000 	.word	0x40020000
 80002e0:	40012000 	.word	0x40012000

080002e4 <start_conversion>:

void start_conversion(void)
{
 80002e4:	b480      	push	{r7}
 80002e6:	af00      	add	r7, sp, #0
	//continues
	ADC1->CR2 |= CR2_CONT;
 80002e8:	4b08      	ldr	r3, [pc, #32]	; (800030c <start_conversion+0x28>)
 80002ea:	689b      	ldr	r3, [r3, #8]
 80002ec:	4a07      	ldr	r2, [pc, #28]	; (800030c <start_conversion+0x28>)
 80002ee:	f043 0302 	orr.w	r3, r3, #2
 80002f2:	6093      	str	r3, [r2, #8]

	ADC1->CR2 |= CR2_SWSTART;
 80002f4:	4b05      	ldr	r3, [pc, #20]	; (800030c <start_conversion+0x28>)
 80002f6:	689b      	ldr	r3, [r3, #8]
 80002f8:	4a04      	ldr	r2, [pc, #16]	; (800030c <start_conversion+0x28>)
 80002fa:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80002fe:	6093      	str	r3, [r2, #8]
}
 8000300:	bf00      	nop
 8000302:	46bd      	mov	sp, r7
 8000304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000308:	4770      	bx	lr
 800030a:	bf00      	nop
 800030c:	40012000 	.word	0x40012000

08000310 <adc_read>:

uint32_t adc_read(void)
{
 8000310:	b480      	push	{r7}
 8000312:	af00      	add	r7, sp, #0
	//wait for conversion to be complate
	while(!(ADC1->SR & SR_EOC)) {}
 8000314:	bf00      	nop
 8000316:	4b06      	ldr	r3, [pc, #24]	; (8000330 <adc_read+0x20>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f003 0302 	and.w	r3, r3, #2
 800031e:	2b00      	cmp	r3, #0
 8000320:	d0f9      	beq.n	8000316 <adc_read+0x6>
	//read converted result
	return (ADC1->DR);
 8000322:	4b03      	ldr	r3, [pc, #12]	; (8000330 <adc_read+0x20>)
 8000324:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8000326:	4618      	mov	r0, r3
 8000328:	46bd      	mov	sp, r7
 800032a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032e:	4770      	bx	lr
 8000330:	40012000 	.word	0x40012000

08000334 <main>:
#include "adc.h"

uint32_t sensor_value;

int main(void)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	af00      	add	r7, sp, #0
	pa1_adc_init();
 8000338:	f7ff ffa2 	bl	8000280 <pa1_adc_init>
	start_conversion();
 800033c:	f7ff ffd2 	bl	80002e4 <start_conversion>

	while(1)
	{
		sensor_value = adc_read();
 8000340:	f7ff ffe6 	bl	8000310 <adc_read>
 8000344:	4603      	mov	r3, r0
 8000346:	4a04      	ldr	r2, [pc, #16]	; (8000358 <main+0x24>)
 8000348:	6013      	str	r3, [r2, #0]
		printf("Sensor value: %d \n\r", (int)sensor_value);
 800034a:	4b03      	ldr	r3, [pc, #12]	; (8000358 <main+0x24>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4619      	mov	r1, r3
 8000350:	4802      	ldr	r0, [pc, #8]	; (800035c <main+0x28>)
 8000352:	f000 f905 	bl	8000560 <iprintf>
	{
 8000356:	e7f3      	b.n	8000340 <main+0xc>
 8000358:	20000080 	.word	0x20000080
 800035c:	08001494 	.word	0x08001494

08000360 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b086      	sub	sp, #24
 8000364:	af00      	add	r7, sp, #0
 8000366:	60f8      	str	r0, [r7, #12]
 8000368:	60b9      	str	r1, [r7, #8]
 800036a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036c:	2300      	movs	r3, #0
 800036e:	617b      	str	r3, [r7, #20]
 8000370:	e00a      	b.n	8000388 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000372:	f3af 8000 	nop.w
 8000376:	4601      	mov	r1, r0
 8000378:	68bb      	ldr	r3, [r7, #8]
 800037a:	1c5a      	adds	r2, r3, #1
 800037c:	60ba      	str	r2, [r7, #8]
 800037e:	b2ca      	uxtb	r2, r1
 8000380:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	697b      	ldr	r3, [r7, #20]
 8000384:	3301      	adds	r3, #1
 8000386:	617b      	str	r3, [r7, #20]
 8000388:	697a      	ldr	r2, [r7, #20]
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	429a      	cmp	r2, r3
 800038e:	dbf0      	blt.n	8000372 <_read+0x12>
  }

  return len;
 8000390:	687b      	ldr	r3, [r7, #4]
}
 8000392:	4618      	mov	r0, r3
 8000394:	3718      	adds	r7, #24
 8000396:	46bd      	mov	sp, r7
 8000398:	bd80      	pop	{r7, pc}

0800039a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800039a:	b580      	push	{r7, lr}
 800039c:	b086      	sub	sp, #24
 800039e:	af00      	add	r7, sp, #0
 80003a0:	60f8      	str	r0, [r7, #12]
 80003a2:	60b9      	str	r1, [r7, #8]
 80003a4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	2300      	movs	r3, #0
 80003a8:	617b      	str	r3, [r7, #20]
 80003aa:	e009      	b.n	80003c0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	60ba      	str	r2, [r7, #8]
 80003b2:	781b      	ldrb	r3, [r3, #0]
 80003b4:	4618      	mov	r0, r3
 80003b6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ba:	697b      	ldr	r3, [r7, #20]
 80003bc:	3301      	adds	r3, #1
 80003be:	617b      	str	r3, [r7, #20]
 80003c0:	697a      	ldr	r2, [r7, #20]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	429a      	cmp	r2, r3
 80003c6:	dbf1      	blt.n	80003ac <_write+0x12>
  }
  return len;
 80003c8:	687b      	ldr	r3, [r7, #4]
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	3718      	adds	r7, #24
 80003ce:	46bd      	mov	sp, r7
 80003d0:	bd80      	pop	{r7, pc}

080003d2 <_close>:

int _close(int file)
{
 80003d2:	b480      	push	{r7}
 80003d4:	b083      	sub	sp, #12
 80003d6:	af00      	add	r7, sp, #0
 80003d8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003da:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80003de:	4618      	mov	r0, r3
 80003e0:	370c      	adds	r7, #12
 80003e2:	46bd      	mov	sp, r7
 80003e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e8:	4770      	bx	lr

080003ea <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003ea:	b480      	push	{r7}
 80003ec:	b083      	sub	sp, #12
 80003ee:	af00      	add	r7, sp, #0
 80003f0:	6078      	str	r0, [r7, #4]
 80003f2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003f4:	683b      	ldr	r3, [r7, #0]
 80003f6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003fa:	605a      	str	r2, [r3, #4]
  return 0;
 80003fc:	2300      	movs	r3, #0
}
 80003fe:	4618      	mov	r0, r3
 8000400:	370c      	adds	r7, #12
 8000402:	46bd      	mov	sp, r7
 8000404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000408:	4770      	bx	lr

0800040a <_isatty>:

int _isatty(int file)
{
 800040a:	b480      	push	{r7}
 800040c:	b083      	sub	sp, #12
 800040e:	af00      	add	r7, sp, #0
 8000410:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000412:	2301      	movs	r3, #1
}
 8000414:	4618      	mov	r0, r3
 8000416:	370c      	adds	r7, #12
 8000418:	46bd      	mov	sp, r7
 800041a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041e:	4770      	bx	lr

08000420 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000420:	b480      	push	{r7}
 8000422:	b085      	sub	sp, #20
 8000424:	af00      	add	r7, sp, #0
 8000426:	60f8      	str	r0, [r7, #12]
 8000428:	60b9      	str	r1, [r7, #8]
 800042a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800042c:	2300      	movs	r3, #0
}
 800042e:	4618      	mov	r0, r3
 8000430:	3714      	adds	r7, #20
 8000432:	46bd      	mov	sp, r7
 8000434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000438:	4770      	bx	lr
	...

0800043c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800043c:	b580      	push	{r7, lr}
 800043e:	b086      	sub	sp, #24
 8000440:	af00      	add	r7, sp, #0
 8000442:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000444:	4a14      	ldr	r2, [pc, #80]	; (8000498 <_sbrk+0x5c>)
 8000446:	4b15      	ldr	r3, [pc, #84]	; (800049c <_sbrk+0x60>)
 8000448:	1ad3      	subs	r3, r2, r3
 800044a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800044c:	697b      	ldr	r3, [r7, #20]
 800044e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000450:	4b13      	ldr	r3, [pc, #76]	; (80004a0 <_sbrk+0x64>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	2b00      	cmp	r3, #0
 8000456:	d102      	bne.n	800045e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000458:	4b11      	ldr	r3, [pc, #68]	; (80004a0 <_sbrk+0x64>)
 800045a:	4a12      	ldr	r2, [pc, #72]	; (80004a4 <_sbrk+0x68>)
 800045c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800045e:	4b10      	ldr	r3, [pc, #64]	; (80004a0 <_sbrk+0x64>)
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4413      	add	r3, r2
 8000466:	693a      	ldr	r2, [r7, #16]
 8000468:	429a      	cmp	r2, r3
 800046a:	d207      	bcs.n	800047c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800046c:	f000 f846 	bl	80004fc <__errno>
 8000470:	4603      	mov	r3, r0
 8000472:	220c      	movs	r2, #12
 8000474:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000476:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800047a:	e009      	b.n	8000490 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800047c:	4b08      	ldr	r3, [pc, #32]	; (80004a0 <_sbrk+0x64>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000482:	4b07      	ldr	r3, [pc, #28]	; (80004a0 <_sbrk+0x64>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4413      	add	r3, r2
 800048a:	4a05      	ldr	r2, [pc, #20]	; (80004a0 <_sbrk+0x64>)
 800048c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800048e:	68fb      	ldr	r3, [r7, #12]
}
 8000490:	4618      	mov	r0, r3
 8000492:	3718      	adds	r7, #24
 8000494:	46bd      	mov	sp, r7
 8000496:	bd80      	pop	{r7, pc}
 8000498:	20020000 	.word	0x20020000
 800049c:	00000400 	.word	0x00000400
 80004a0:	20000084 	.word	0x20000084
 80004a4:	20000098 	.word	0x20000098

080004a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a8:	480d      	ldr	r0, [pc, #52]	; (80004e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004b0:	480c      	ldr	r0, [pc, #48]	; (80004e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80004b2:	490d      	ldr	r1, [pc, #52]	; (80004e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b4:	4a0d      	ldr	r2, [pc, #52]	; (80004ec <LoopForever+0xe>)
  movs r3, #0
 80004b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b8:	e002      	b.n	80004c0 <LoopCopyDataInit>

080004ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004be:	3304      	adds	r3, #4

080004c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c4:	d3f9      	bcc.n	80004ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004c6:	4a0a      	ldr	r2, [pc, #40]	; (80004f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c8:	4c0a      	ldr	r4, [pc, #40]	; (80004f4 <LoopForever+0x16>)
  movs r3, #0
 80004ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004cc:	e001      	b.n	80004d2 <LoopFillZerobss>

080004ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004d0:	3204      	adds	r2, #4

080004d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d4:	d3fb      	bcc.n	80004ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004d6:	f000 f817 	bl	8000508 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004da:	f7ff ff2b 	bl	8000334 <main>

080004de <LoopForever>:

LoopForever:
  b LoopForever
 80004de:	e7fe      	b.n	80004de <LoopForever>
  ldr   r0, =_estack
 80004e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004ec:	08001548 	.word	0x08001548
  ldr r2, =_sbss
 80004f0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004f4:	20000098 	.word	0x20000098

080004f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f8:	e7fe      	b.n	80004f8 <ADC_IRQHandler>
	...

080004fc <__errno>:
 80004fc:	4b01      	ldr	r3, [pc, #4]	; (8000504 <__errno+0x8>)
 80004fe:	6818      	ldr	r0, [r3, #0]
 8000500:	4770      	bx	lr
 8000502:	bf00      	nop
 8000504:	20000000 	.word	0x20000000

08000508 <__libc_init_array>:
 8000508:	b570      	push	{r4, r5, r6, lr}
 800050a:	4d0d      	ldr	r5, [pc, #52]	; (8000540 <__libc_init_array+0x38>)
 800050c:	4c0d      	ldr	r4, [pc, #52]	; (8000544 <__libc_init_array+0x3c>)
 800050e:	1b64      	subs	r4, r4, r5
 8000510:	10a4      	asrs	r4, r4, #2
 8000512:	2600      	movs	r6, #0
 8000514:	42a6      	cmp	r6, r4
 8000516:	d109      	bne.n	800052c <__libc_init_array+0x24>
 8000518:	4d0b      	ldr	r5, [pc, #44]	; (8000548 <__libc_init_array+0x40>)
 800051a:	4c0c      	ldr	r4, [pc, #48]	; (800054c <__libc_init_array+0x44>)
 800051c:	f000 ffae 	bl	800147c <_init>
 8000520:	1b64      	subs	r4, r4, r5
 8000522:	10a4      	asrs	r4, r4, #2
 8000524:	2600      	movs	r6, #0
 8000526:	42a6      	cmp	r6, r4
 8000528:	d105      	bne.n	8000536 <__libc_init_array+0x2e>
 800052a:	bd70      	pop	{r4, r5, r6, pc}
 800052c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000530:	4798      	blx	r3
 8000532:	3601      	adds	r6, #1
 8000534:	e7ee      	b.n	8000514 <__libc_init_array+0xc>
 8000536:	f855 3b04 	ldr.w	r3, [r5], #4
 800053a:	4798      	blx	r3
 800053c:	3601      	adds	r6, #1
 800053e:	e7f2      	b.n	8000526 <__libc_init_array+0x1e>
 8000540:	08001540 	.word	0x08001540
 8000544:	08001540 	.word	0x08001540
 8000548:	08001540 	.word	0x08001540
 800054c:	08001544 	.word	0x08001544

08000550 <memset>:
 8000550:	4402      	add	r2, r0
 8000552:	4603      	mov	r3, r0
 8000554:	4293      	cmp	r3, r2
 8000556:	d100      	bne.n	800055a <memset+0xa>
 8000558:	4770      	bx	lr
 800055a:	f803 1b01 	strb.w	r1, [r3], #1
 800055e:	e7f9      	b.n	8000554 <memset+0x4>

08000560 <iprintf>:
 8000560:	b40f      	push	{r0, r1, r2, r3}
 8000562:	4b0a      	ldr	r3, [pc, #40]	; (800058c <iprintf+0x2c>)
 8000564:	b513      	push	{r0, r1, r4, lr}
 8000566:	681c      	ldr	r4, [r3, #0]
 8000568:	b124      	cbz	r4, 8000574 <iprintf+0x14>
 800056a:	69a3      	ldr	r3, [r4, #24]
 800056c:	b913      	cbnz	r3, 8000574 <iprintf+0x14>
 800056e:	4620      	mov	r0, r4
 8000570:	f000 f866 	bl	8000640 <__sinit>
 8000574:	ab05      	add	r3, sp, #20
 8000576:	9a04      	ldr	r2, [sp, #16]
 8000578:	68a1      	ldr	r1, [r4, #8]
 800057a:	9301      	str	r3, [sp, #4]
 800057c:	4620      	mov	r0, r4
 800057e:	f000 f9bd 	bl	80008fc <_vfiprintf_r>
 8000582:	b002      	add	sp, #8
 8000584:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000588:	b004      	add	sp, #16
 800058a:	4770      	bx	lr
 800058c:	20000000 	.word	0x20000000

08000590 <std>:
 8000590:	2300      	movs	r3, #0
 8000592:	b510      	push	{r4, lr}
 8000594:	4604      	mov	r4, r0
 8000596:	e9c0 3300 	strd	r3, r3, [r0]
 800059a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800059e:	6083      	str	r3, [r0, #8]
 80005a0:	8181      	strh	r1, [r0, #12]
 80005a2:	6643      	str	r3, [r0, #100]	; 0x64
 80005a4:	81c2      	strh	r2, [r0, #14]
 80005a6:	6183      	str	r3, [r0, #24]
 80005a8:	4619      	mov	r1, r3
 80005aa:	2208      	movs	r2, #8
 80005ac:	305c      	adds	r0, #92	; 0x5c
 80005ae:	f7ff ffcf 	bl	8000550 <memset>
 80005b2:	4b05      	ldr	r3, [pc, #20]	; (80005c8 <std+0x38>)
 80005b4:	6263      	str	r3, [r4, #36]	; 0x24
 80005b6:	4b05      	ldr	r3, [pc, #20]	; (80005cc <std+0x3c>)
 80005b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80005ba:	4b05      	ldr	r3, [pc, #20]	; (80005d0 <std+0x40>)
 80005bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005be:	4b05      	ldr	r3, [pc, #20]	; (80005d4 <std+0x44>)
 80005c0:	6224      	str	r4, [r4, #32]
 80005c2:	6323      	str	r3, [r4, #48]	; 0x30
 80005c4:	bd10      	pop	{r4, pc}
 80005c6:	bf00      	nop
 80005c8:	08000ea5 	.word	0x08000ea5
 80005cc:	08000ec7 	.word	0x08000ec7
 80005d0:	08000eff 	.word	0x08000eff
 80005d4:	08000f23 	.word	0x08000f23

080005d8 <_cleanup_r>:
 80005d8:	4901      	ldr	r1, [pc, #4]	; (80005e0 <_cleanup_r+0x8>)
 80005da:	f000 b8af 	b.w	800073c <_fwalk_reent>
 80005de:	bf00      	nop
 80005e0:	080011fd 	.word	0x080011fd

080005e4 <__sfmoreglue>:
 80005e4:	b570      	push	{r4, r5, r6, lr}
 80005e6:	2268      	movs	r2, #104	; 0x68
 80005e8:	1e4d      	subs	r5, r1, #1
 80005ea:	4355      	muls	r5, r2
 80005ec:	460e      	mov	r6, r1
 80005ee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80005f2:	f000 f8e5 	bl	80007c0 <_malloc_r>
 80005f6:	4604      	mov	r4, r0
 80005f8:	b140      	cbz	r0, 800060c <__sfmoreglue+0x28>
 80005fa:	2100      	movs	r1, #0
 80005fc:	e9c0 1600 	strd	r1, r6, [r0]
 8000600:	300c      	adds	r0, #12
 8000602:	60a0      	str	r0, [r4, #8]
 8000604:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000608:	f7ff ffa2 	bl	8000550 <memset>
 800060c:	4620      	mov	r0, r4
 800060e:	bd70      	pop	{r4, r5, r6, pc}

08000610 <__sfp_lock_acquire>:
 8000610:	4801      	ldr	r0, [pc, #4]	; (8000618 <__sfp_lock_acquire+0x8>)
 8000612:	f000 b8b3 	b.w	800077c <__retarget_lock_acquire_recursive>
 8000616:	bf00      	nop
 8000618:	20000089 	.word	0x20000089

0800061c <__sfp_lock_release>:
 800061c:	4801      	ldr	r0, [pc, #4]	; (8000624 <__sfp_lock_release+0x8>)
 800061e:	f000 b8ae 	b.w	800077e <__retarget_lock_release_recursive>
 8000622:	bf00      	nop
 8000624:	20000089 	.word	0x20000089

08000628 <__sinit_lock_acquire>:
 8000628:	4801      	ldr	r0, [pc, #4]	; (8000630 <__sinit_lock_acquire+0x8>)
 800062a:	f000 b8a7 	b.w	800077c <__retarget_lock_acquire_recursive>
 800062e:	bf00      	nop
 8000630:	2000008a 	.word	0x2000008a

08000634 <__sinit_lock_release>:
 8000634:	4801      	ldr	r0, [pc, #4]	; (800063c <__sinit_lock_release+0x8>)
 8000636:	f000 b8a2 	b.w	800077e <__retarget_lock_release_recursive>
 800063a:	bf00      	nop
 800063c:	2000008a 	.word	0x2000008a

08000640 <__sinit>:
 8000640:	b510      	push	{r4, lr}
 8000642:	4604      	mov	r4, r0
 8000644:	f7ff fff0 	bl	8000628 <__sinit_lock_acquire>
 8000648:	69a3      	ldr	r3, [r4, #24]
 800064a:	b11b      	cbz	r3, 8000654 <__sinit+0x14>
 800064c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000650:	f7ff bff0 	b.w	8000634 <__sinit_lock_release>
 8000654:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000658:	6523      	str	r3, [r4, #80]	; 0x50
 800065a:	4b13      	ldr	r3, [pc, #76]	; (80006a8 <__sinit+0x68>)
 800065c:	4a13      	ldr	r2, [pc, #76]	; (80006ac <__sinit+0x6c>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	62a2      	str	r2, [r4, #40]	; 0x28
 8000662:	42a3      	cmp	r3, r4
 8000664:	bf04      	itt	eq
 8000666:	2301      	moveq	r3, #1
 8000668:	61a3      	streq	r3, [r4, #24]
 800066a:	4620      	mov	r0, r4
 800066c:	f000 f820 	bl	80006b0 <__sfp>
 8000670:	6060      	str	r0, [r4, #4]
 8000672:	4620      	mov	r0, r4
 8000674:	f000 f81c 	bl	80006b0 <__sfp>
 8000678:	60a0      	str	r0, [r4, #8]
 800067a:	4620      	mov	r0, r4
 800067c:	f000 f818 	bl	80006b0 <__sfp>
 8000680:	2200      	movs	r2, #0
 8000682:	60e0      	str	r0, [r4, #12]
 8000684:	2104      	movs	r1, #4
 8000686:	6860      	ldr	r0, [r4, #4]
 8000688:	f7ff ff82 	bl	8000590 <std>
 800068c:	68a0      	ldr	r0, [r4, #8]
 800068e:	2201      	movs	r2, #1
 8000690:	2109      	movs	r1, #9
 8000692:	f7ff ff7d 	bl	8000590 <std>
 8000696:	68e0      	ldr	r0, [r4, #12]
 8000698:	2202      	movs	r2, #2
 800069a:	2112      	movs	r1, #18
 800069c:	f7ff ff78 	bl	8000590 <std>
 80006a0:	2301      	movs	r3, #1
 80006a2:	61a3      	str	r3, [r4, #24]
 80006a4:	e7d2      	b.n	800064c <__sinit+0xc>
 80006a6:	bf00      	nop
 80006a8:	080014a8 	.word	0x080014a8
 80006ac:	080005d9 	.word	0x080005d9

080006b0 <__sfp>:
 80006b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006b2:	4607      	mov	r7, r0
 80006b4:	f7ff ffac 	bl	8000610 <__sfp_lock_acquire>
 80006b8:	4b1e      	ldr	r3, [pc, #120]	; (8000734 <__sfp+0x84>)
 80006ba:	681e      	ldr	r6, [r3, #0]
 80006bc:	69b3      	ldr	r3, [r6, #24]
 80006be:	b913      	cbnz	r3, 80006c6 <__sfp+0x16>
 80006c0:	4630      	mov	r0, r6
 80006c2:	f7ff ffbd 	bl	8000640 <__sinit>
 80006c6:	3648      	adds	r6, #72	; 0x48
 80006c8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80006cc:	3b01      	subs	r3, #1
 80006ce:	d503      	bpl.n	80006d8 <__sfp+0x28>
 80006d0:	6833      	ldr	r3, [r6, #0]
 80006d2:	b30b      	cbz	r3, 8000718 <__sfp+0x68>
 80006d4:	6836      	ldr	r6, [r6, #0]
 80006d6:	e7f7      	b.n	80006c8 <__sfp+0x18>
 80006d8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80006dc:	b9d5      	cbnz	r5, 8000714 <__sfp+0x64>
 80006de:	4b16      	ldr	r3, [pc, #88]	; (8000738 <__sfp+0x88>)
 80006e0:	60e3      	str	r3, [r4, #12]
 80006e2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80006e6:	6665      	str	r5, [r4, #100]	; 0x64
 80006e8:	f000 f847 	bl	800077a <__retarget_lock_init_recursive>
 80006ec:	f7ff ff96 	bl	800061c <__sfp_lock_release>
 80006f0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80006f4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80006f8:	6025      	str	r5, [r4, #0]
 80006fa:	61a5      	str	r5, [r4, #24]
 80006fc:	2208      	movs	r2, #8
 80006fe:	4629      	mov	r1, r5
 8000700:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000704:	f7ff ff24 	bl	8000550 <memset>
 8000708:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800070c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000710:	4620      	mov	r0, r4
 8000712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000714:	3468      	adds	r4, #104	; 0x68
 8000716:	e7d9      	b.n	80006cc <__sfp+0x1c>
 8000718:	2104      	movs	r1, #4
 800071a:	4638      	mov	r0, r7
 800071c:	f7ff ff62 	bl	80005e4 <__sfmoreglue>
 8000720:	4604      	mov	r4, r0
 8000722:	6030      	str	r0, [r6, #0]
 8000724:	2800      	cmp	r0, #0
 8000726:	d1d5      	bne.n	80006d4 <__sfp+0x24>
 8000728:	f7ff ff78 	bl	800061c <__sfp_lock_release>
 800072c:	230c      	movs	r3, #12
 800072e:	603b      	str	r3, [r7, #0]
 8000730:	e7ee      	b.n	8000710 <__sfp+0x60>
 8000732:	bf00      	nop
 8000734:	080014a8 	.word	0x080014a8
 8000738:	ffff0001 	.word	0xffff0001

0800073c <_fwalk_reent>:
 800073c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000740:	4606      	mov	r6, r0
 8000742:	4688      	mov	r8, r1
 8000744:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000748:	2700      	movs	r7, #0
 800074a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800074e:	f1b9 0901 	subs.w	r9, r9, #1
 8000752:	d505      	bpl.n	8000760 <_fwalk_reent+0x24>
 8000754:	6824      	ldr	r4, [r4, #0]
 8000756:	2c00      	cmp	r4, #0
 8000758:	d1f7      	bne.n	800074a <_fwalk_reent+0xe>
 800075a:	4638      	mov	r0, r7
 800075c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000760:	89ab      	ldrh	r3, [r5, #12]
 8000762:	2b01      	cmp	r3, #1
 8000764:	d907      	bls.n	8000776 <_fwalk_reent+0x3a>
 8000766:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800076a:	3301      	adds	r3, #1
 800076c:	d003      	beq.n	8000776 <_fwalk_reent+0x3a>
 800076e:	4629      	mov	r1, r5
 8000770:	4630      	mov	r0, r6
 8000772:	47c0      	blx	r8
 8000774:	4307      	orrs	r7, r0
 8000776:	3568      	adds	r5, #104	; 0x68
 8000778:	e7e9      	b.n	800074e <_fwalk_reent+0x12>

0800077a <__retarget_lock_init_recursive>:
 800077a:	4770      	bx	lr

0800077c <__retarget_lock_acquire_recursive>:
 800077c:	4770      	bx	lr

0800077e <__retarget_lock_release_recursive>:
 800077e:	4770      	bx	lr

08000780 <sbrk_aligned>:
 8000780:	b570      	push	{r4, r5, r6, lr}
 8000782:	4e0e      	ldr	r6, [pc, #56]	; (80007bc <sbrk_aligned+0x3c>)
 8000784:	460c      	mov	r4, r1
 8000786:	6831      	ldr	r1, [r6, #0]
 8000788:	4605      	mov	r5, r0
 800078a:	b911      	cbnz	r1, 8000792 <sbrk_aligned+0x12>
 800078c:	f000 fb7a 	bl	8000e84 <_sbrk_r>
 8000790:	6030      	str	r0, [r6, #0]
 8000792:	4621      	mov	r1, r4
 8000794:	4628      	mov	r0, r5
 8000796:	f000 fb75 	bl	8000e84 <_sbrk_r>
 800079a:	1c43      	adds	r3, r0, #1
 800079c:	d00a      	beq.n	80007b4 <sbrk_aligned+0x34>
 800079e:	1cc4      	adds	r4, r0, #3
 80007a0:	f024 0403 	bic.w	r4, r4, #3
 80007a4:	42a0      	cmp	r0, r4
 80007a6:	d007      	beq.n	80007b8 <sbrk_aligned+0x38>
 80007a8:	1a21      	subs	r1, r4, r0
 80007aa:	4628      	mov	r0, r5
 80007ac:	f000 fb6a 	bl	8000e84 <_sbrk_r>
 80007b0:	3001      	adds	r0, #1
 80007b2:	d101      	bne.n	80007b8 <sbrk_aligned+0x38>
 80007b4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80007b8:	4620      	mov	r0, r4
 80007ba:	bd70      	pop	{r4, r5, r6, pc}
 80007bc:	20000090 	.word	0x20000090

080007c0 <_malloc_r>:
 80007c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007c4:	1ccd      	adds	r5, r1, #3
 80007c6:	f025 0503 	bic.w	r5, r5, #3
 80007ca:	3508      	adds	r5, #8
 80007cc:	2d0c      	cmp	r5, #12
 80007ce:	bf38      	it	cc
 80007d0:	250c      	movcc	r5, #12
 80007d2:	2d00      	cmp	r5, #0
 80007d4:	4607      	mov	r7, r0
 80007d6:	db01      	blt.n	80007dc <_malloc_r+0x1c>
 80007d8:	42a9      	cmp	r1, r5
 80007da:	d905      	bls.n	80007e8 <_malloc_r+0x28>
 80007dc:	230c      	movs	r3, #12
 80007de:	603b      	str	r3, [r7, #0]
 80007e0:	2600      	movs	r6, #0
 80007e2:	4630      	mov	r0, r6
 80007e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007e8:	4e2e      	ldr	r6, [pc, #184]	; (80008a4 <_malloc_r+0xe4>)
 80007ea:	f000 fdbb 	bl	8001364 <__malloc_lock>
 80007ee:	6833      	ldr	r3, [r6, #0]
 80007f0:	461c      	mov	r4, r3
 80007f2:	bb34      	cbnz	r4, 8000842 <_malloc_r+0x82>
 80007f4:	4629      	mov	r1, r5
 80007f6:	4638      	mov	r0, r7
 80007f8:	f7ff ffc2 	bl	8000780 <sbrk_aligned>
 80007fc:	1c43      	adds	r3, r0, #1
 80007fe:	4604      	mov	r4, r0
 8000800:	d14d      	bne.n	800089e <_malloc_r+0xde>
 8000802:	6834      	ldr	r4, [r6, #0]
 8000804:	4626      	mov	r6, r4
 8000806:	2e00      	cmp	r6, #0
 8000808:	d140      	bne.n	800088c <_malloc_r+0xcc>
 800080a:	6823      	ldr	r3, [r4, #0]
 800080c:	4631      	mov	r1, r6
 800080e:	4638      	mov	r0, r7
 8000810:	eb04 0803 	add.w	r8, r4, r3
 8000814:	f000 fb36 	bl	8000e84 <_sbrk_r>
 8000818:	4580      	cmp	r8, r0
 800081a:	d13a      	bne.n	8000892 <_malloc_r+0xd2>
 800081c:	6821      	ldr	r1, [r4, #0]
 800081e:	3503      	adds	r5, #3
 8000820:	1a6d      	subs	r5, r5, r1
 8000822:	f025 0503 	bic.w	r5, r5, #3
 8000826:	3508      	adds	r5, #8
 8000828:	2d0c      	cmp	r5, #12
 800082a:	bf38      	it	cc
 800082c:	250c      	movcc	r5, #12
 800082e:	4629      	mov	r1, r5
 8000830:	4638      	mov	r0, r7
 8000832:	f7ff ffa5 	bl	8000780 <sbrk_aligned>
 8000836:	3001      	adds	r0, #1
 8000838:	d02b      	beq.n	8000892 <_malloc_r+0xd2>
 800083a:	6823      	ldr	r3, [r4, #0]
 800083c:	442b      	add	r3, r5
 800083e:	6023      	str	r3, [r4, #0]
 8000840:	e00e      	b.n	8000860 <_malloc_r+0xa0>
 8000842:	6822      	ldr	r2, [r4, #0]
 8000844:	1b52      	subs	r2, r2, r5
 8000846:	d41e      	bmi.n	8000886 <_malloc_r+0xc6>
 8000848:	2a0b      	cmp	r2, #11
 800084a:	d916      	bls.n	800087a <_malloc_r+0xba>
 800084c:	1961      	adds	r1, r4, r5
 800084e:	42a3      	cmp	r3, r4
 8000850:	6025      	str	r5, [r4, #0]
 8000852:	bf18      	it	ne
 8000854:	6059      	strne	r1, [r3, #4]
 8000856:	6863      	ldr	r3, [r4, #4]
 8000858:	bf08      	it	eq
 800085a:	6031      	streq	r1, [r6, #0]
 800085c:	5162      	str	r2, [r4, r5]
 800085e:	604b      	str	r3, [r1, #4]
 8000860:	4638      	mov	r0, r7
 8000862:	f104 060b 	add.w	r6, r4, #11
 8000866:	f000 fd83 	bl	8001370 <__malloc_unlock>
 800086a:	f026 0607 	bic.w	r6, r6, #7
 800086e:	1d23      	adds	r3, r4, #4
 8000870:	1af2      	subs	r2, r6, r3
 8000872:	d0b6      	beq.n	80007e2 <_malloc_r+0x22>
 8000874:	1b9b      	subs	r3, r3, r6
 8000876:	50a3      	str	r3, [r4, r2]
 8000878:	e7b3      	b.n	80007e2 <_malloc_r+0x22>
 800087a:	6862      	ldr	r2, [r4, #4]
 800087c:	42a3      	cmp	r3, r4
 800087e:	bf0c      	ite	eq
 8000880:	6032      	streq	r2, [r6, #0]
 8000882:	605a      	strne	r2, [r3, #4]
 8000884:	e7ec      	b.n	8000860 <_malloc_r+0xa0>
 8000886:	4623      	mov	r3, r4
 8000888:	6864      	ldr	r4, [r4, #4]
 800088a:	e7b2      	b.n	80007f2 <_malloc_r+0x32>
 800088c:	4634      	mov	r4, r6
 800088e:	6876      	ldr	r6, [r6, #4]
 8000890:	e7b9      	b.n	8000806 <_malloc_r+0x46>
 8000892:	230c      	movs	r3, #12
 8000894:	603b      	str	r3, [r7, #0]
 8000896:	4638      	mov	r0, r7
 8000898:	f000 fd6a 	bl	8001370 <__malloc_unlock>
 800089c:	e7a1      	b.n	80007e2 <_malloc_r+0x22>
 800089e:	6025      	str	r5, [r4, #0]
 80008a0:	e7de      	b.n	8000860 <_malloc_r+0xa0>
 80008a2:	bf00      	nop
 80008a4:	2000008c 	.word	0x2000008c

080008a8 <__sfputc_r>:
 80008a8:	6893      	ldr	r3, [r2, #8]
 80008aa:	3b01      	subs	r3, #1
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	b410      	push	{r4}
 80008b0:	6093      	str	r3, [r2, #8]
 80008b2:	da08      	bge.n	80008c6 <__sfputc_r+0x1e>
 80008b4:	6994      	ldr	r4, [r2, #24]
 80008b6:	42a3      	cmp	r3, r4
 80008b8:	db01      	blt.n	80008be <__sfputc_r+0x16>
 80008ba:	290a      	cmp	r1, #10
 80008bc:	d103      	bne.n	80008c6 <__sfputc_r+0x1e>
 80008be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008c2:	f000 bb33 	b.w	8000f2c <__swbuf_r>
 80008c6:	6813      	ldr	r3, [r2, #0]
 80008c8:	1c58      	adds	r0, r3, #1
 80008ca:	6010      	str	r0, [r2, #0]
 80008cc:	7019      	strb	r1, [r3, #0]
 80008ce:	4608      	mov	r0, r1
 80008d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008d4:	4770      	bx	lr

080008d6 <__sfputs_r>:
 80008d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008d8:	4606      	mov	r6, r0
 80008da:	460f      	mov	r7, r1
 80008dc:	4614      	mov	r4, r2
 80008de:	18d5      	adds	r5, r2, r3
 80008e0:	42ac      	cmp	r4, r5
 80008e2:	d101      	bne.n	80008e8 <__sfputs_r+0x12>
 80008e4:	2000      	movs	r0, #0
 80008e6:	e007      	b.n	80008f8 <__sfputs_r+0x22>
 80008e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008ec:	463a      	mov	r2, r7
 80008ee:	4630      	mov	r0, r6
 80008f0:	f7ff ffda 	bl	80008a8 <__sfputc_r>
 80008f4:	1c43      	adds	r3, r0, #1
 80008f6:	d1f3      	bne.n	80008e0 <__sfputs_r+0xa>
 80008f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080008fc <_vfiprintf_r>:
 80008fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000900:	460d      	mov	r5, r1
 8000902:	b09d      	sub	sp, #116	; 0x74
 8000904:	4614      	mov	r4, r2
 8000906:	4698      	mov	r8, r3
 8000908:	4606      	mov	r6, r0
 800090a:	b118      	cbz	r0, 8000914 <_vfiprintf_r+0x18>
 800090c:	6983      	ldr	r3, [r0, #24]
 800090e:	b90b      	cbnz	r3, 8000914 <_vfiprintf_r+0x18>
 8000910:	f7ff fe96 	bl	8000640 <__sinit>
 8000914:	4b89      	ldr	r3, [pc, #548]	; (8000b3c <_vfiprintf_r+0x240>)
 8000916:	429d      	cmp	r5, r3
 8000918:	d11b      	bne.n	8000952 <_vfiprintf_r+0x56>
 800091a:	6875      	ldr	r5, [r6, #4]
 800091c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800091e:	07d9      	lsls	r1, r3, #31
 8000920:	d405      	bmi.n	800092e <_vfiprintf_r+0x32>
 8000922:	89ab      	ldrh	r3, [r5, #12]
 8000924:	059a      	lsls	r2, r3, #22
 8000926:	d402      	bmi.n	800092e <_vfiprintf_r+0x32>
 8000928:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800092a:	f7ff ff27 	bl	800077c <__retarget_lock_acquire_recursive>
 800092e:	89ab      	ldrh	r3, [r5, #12]
 8000930:	071b      	lsls	r3, r3, #28
 8000932:	d501      	bpl.n	8000938 <_vfiprintf_r+0x3c>
 8000934:	692b      	ldr	r3, [r5, #16]
 8000936:	b9eb      	cbnz	r3, 8000974 <_vfiprintf_r+0x78>
 8000938:	4629      	mov	r1, r5
 800093a:	4630      	mov	r0, r6
 800093c:	f000 fb5a 	bl	8000ff4 <__swsetup_r>
 8000940:	b1c0      	cbz	r0, 8000974 <_vfiprintf_r+0x78>
 8000942:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000944:	07dc      	lsls	r4, r3, #31
 8000946:	d50e      	bpl.n	8000966 <_vfiprintf_r+0x6a>
 8000948:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800094c:	b01d      	add	sp, #116	; 0x74
 800094e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000952:	4b7b      	ldr	r3, [pc, #492]	; (8000b40 <_vfiprintf_r+0x244>)
 8000954:	429d      	cmp	r5, r3
 8000956:	d101      	bne.n	800095c <_vfiprintf_r+0x60>
 8000958:	68b5      	ldr	r5, [r6, #8]
 800095a:	e7df      	b.n	800091c <_vfiprintf_r+0x20>
 800095c:	4b79      	ldr	r3, [pc, #484]	; (8000b44 <_vfiprintf_r+0x248>)
 800095e:	429d      	cmp	r5, r3
 8000960:	bf08      	it	eq
 8000962:	68f5      	ldreq	r5, [r6, #12]
 8000964:	e7da      	b.n	800091c <_vfiprintf_r+0x20>
 8000966:	89ab      	ldrh	r3, [r5, #12]
 8000968:	0598      	lsls	r0, r3, #22
 800096a:	d4ed      	bmi.n	8000948 <_vfiprintf_r+0x4c>
 800096c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800096e:	f7ff ff06 	bl	800077e <__retarget_lock_release_recursive>
 8000972:	e7e9      	b.n	8000948 <_vfiprintf_r+0x4c>
 8000974:	2300      	movs	r3, #0
 8000976:	9309      	str	r3, [sp, #36]	; 0x24
 8000978:	2320      	movs	r3, #32
 800097a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800097e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000982:	2330      	movs	r3, #48	; 0x30
 8000984:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b48 <_vfiprintf_r+0x24c>
 8000988:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800098c:	f04f 0901 	mov.w	r9, #1
 8000990:	4623      	mov	r3, r4
 8000992:	469a      	mov	sl, r3
 8000994:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000998:	b10a      	cbz	r2, 800099e <_vfiprintf_r+0xa2>
 800099a:	2a25      	cmp	r2, #37	; 0x25
 800099c:	d1f9      	bne.n	8000992 <_vfiprintf_r+0x96>
 800099e:	ebba 0b04 	subs.w	fp, sl, r4
 80009a2:	d00b      	beq.n	80009bc <_vfiprintf_r+0xc0>
 80009a4:	465b      	mov	r3, fp
 80009a6:	4622      	mov	r2, r4
 80009a8:	4629      	mov	r1, r5
 80009aa:	4630      	mov	r0, r6
 80009ac:	f7ff ff93 	bl	80008d6 <__sfputs_r>
 80009b0:	3001      	adds	r0, #1
 80009b2:	f000 80aa 	beq.w	8000b0a <_vfiprintf_r+0x20e>
 80009b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80009b8:	445a      	add	r2, fp
 80009ba:	9209      	str	r2, [sp, #36]	; 0x24
 80009bc:	f89a 3000 	ldrb.w	r3, [sl]
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	f000 80a2 	beq.w	8000b0a <_vfiprintf_r+0x20e>
 80009c6:	2300      	movs	r3, #0
 80009c8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80009cc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009d0:	f10a 0a01 	add.w	sl, sl, #1
 80009d4:	9304      	str	r3, [sp, #16]
 80009d6:	9307      	str	r3, [sp, #28]
 80009d8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80009dc:	931a      	str	r3, [sp, #104]	; 0x68
 80009de:	4654      	mov	r4, sl
 80009e0:	2205      	movs	r2, #5
 80009e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009e6:	4858      	ldr	r0, [pc, #352]	; (8000b48 <_vfiprintf_r+0x24c>)
 80009e8:	f7ff fbfa 	bl	80001e0 <memchr>
 80009ec:	9a04      	ldr	r2, [sp, #16]
 80009ee:	b9d8      	cbnz	r0, 8000a28 <_vfiprintf_r+0x12c>
 80009f0:	06d1      	lsls	r1, r2, #27
 80009f2:	bf44      	itt	mi
 80009f4:	2320      	movmi	r3, #32
 80009f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80009fa:	0713      	lsls	r3, r2, #28
 80009fc:	bf44      	itt	mi
 80009fe:	232b      	movmi	r3, #43	; 0x2b
 8000a00:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a04:	f89a 3000 	ldrb.w	r3, [sl]
 8000a08:	2b2a      	cmp	r3, #42	; 0x2a
 8000a0a:	d015      	beq.n	8000a38 <_vfiprintf_r+0x13c>
 8000a0c:	9a07      	ldr	r2, [sp, #28]
 8000a0e:	4654      	mov	r4, sl
 8000a10:	2000      	movs	r0, #0
 8000a12:	f04f 0c0a 	mov.w	ip, #10
 8000a16:	4621      	mov	r1, r4
 8000a18:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a1c:	3b30      	subs	r3, #48	; 0x30
 8000a1e:	2b09      	cmp	r3, #9
 8000a20:	d94e      	bls.n	8000ac0 <_vfiprintf_r+0x1c4>
 8000a22:	b1b0      	cbz	r0, 8000a52 <_vfiprintf_r+0x156>
 8000a24:	9207      	str	r2, [sp, #28]
 8000a26:	e014      	b.n	8000a52 <_vfiprintf_r+0x156>
 8000a28:	eba0 0308 	sub.w	r3, r0, r8
 8000a2c:	fa09 f303 	lsl.w	r3, r9, r3
 8000a30:	4313      	orrs	r3, r2
 8000a32:	9304      	str	r3, [sp, #16]
 8000a34:	46a2      	mov	sl, r4
 8000a36:	e7d2      	b.n	80009de <_vfiprintf_r+0xe2>
 8000a38:	9b03      	ldr	r3, [sp, #12]
 8000a3a:	1d19      	adds	r1, r3, #4
 8000a3c:	681b      	ldr	r3, [r3, #0]
 8000a3e:	9103      	str	r1, [sp, #12]
 8000a40:	2b00      	cmp	r3, #0
 8000a42:	bfbb      	ittet	lt
 8000a44:	425b      	neglt	r3, r3
 8000a46:	f042 0202 	orrlt.w	r2, r2, #2
 8000a4a:	9307      	strge	r3, [sp, #28]
 8000a4c:	9307      	strlt	r3, [sp, #28]
 8000a4e:	bfb8      	it	lt
 8000a50:	9204      	strlt	r2, [sp, #16]
 8000a52:	7823      	ldrb	r3, [r4, #0]
 8000a54:	2b2e      	cmp	r3, #46	; 0x2e
 8000a56:	d10c      	bne.n	8000a72 <_vfiprintf_r+0x176>
 8000a58:	7863      	ldrb	r3, [r4, #1]
 8000a5a:	2b2a      	cmp	r3, #42	; 0x2a
 8000a5c:	d135      	bne.n	8000aca <_vfiprintf_r+0x1ce>
 8000a5e:	9b03      	ldr	r3, [sp, #12]
 8000a60:	1d1a      	adds	r2, r3, #4
 8000a62:	681b      	ldr	r3, [r3, #0]
 8000a64:	9203      	str	r2, [sp, #12]
 8000a66:	2b00      	cmp	r3, #0
 8000a68:	bfb8      	it	lt
 8000a6a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000a6e:	3402      	adds	r4, #2
 8000a70:	9305      	str	r3, [sp, #20]
 8000a72:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000b58 <_vfiprintf_r+0x25c>
 8000a76:	7821      	ldrb	r1, [r4, #0]
 8000a78:	2203      	movs	r2, #3
 8000a7a:	4650      	mov	r0, sl
 8000a7c:	f7ff fbb0 	bl	80001e0 <memchr>
 8000a80:	b140      	cbz	r0, 8000a94 <_vfiprintf_r+0x198>
 8000a82:	2340      	movs	r3, #64	; 0x40
 8000a84:	eba0 000a 	sub.w	r0, r0, sl
 8000a88:	fa03 f000 	lsl.w	r0, r3, r0
 8000a8c:	9b04      	ldr	r3, [sp, #16]
 8000a8e:	4303      	orrs	r3, r0
 8000a90:	3401      	adds	r4, #1
 8000a92:	9304      	str	r3, [sp, #16]
 8000a94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a98:	482c      	ldr	r0, [pc, #176]	; (8000b4c <_vfiprintf_r+0x250>)
 8000a9a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a9e:	2206      	movs	r2, #6
 8000aa0:	f7ff fb9e 	bl	80001e0 <memchr>
 8000aa4:	2800      	cmp	r0, #0
 8000aa6:	d03f      	beq.n	8000b28 <_vfiprintf_r+0x22c>
 8000aa8:	4b29      	ldr	r3, [pc, #164]	; (8000b50 <_vfiprintf_r+0x254>)
 8000aaa:	bb1b      	cbnz	r3, 8000af4 <_vfiprintf_r+0x1f8>
 8000aac:	9b03      	ldr	r3, [sp, #12]
 8000aae:	3307      	adds	r3, #7
 8000ab0:	f023 0307 	bic.w	r3, r3, #7
 8000ab4:	3308      	adds	r3, #8
 8000ab6:	9303      	str	r3, [sp, #12]
 8000ab8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000aba:	443b      	add	r3, r7
 8000abc:	9309      	str	r3, [sp, #36]	; 0x24
 8000abe:	e767      	b.n	8000990 <_vfiprintf_r+0x94>
 8000ac0:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ac4:	460c      	mov	r4, r1
 8000ac6:	2001      	movs	r0, #1
 8000ac8:	e7a5      	b.n	8000a16 <_vfiprintf_r+0x11a>
 8000aca:	2300      	movs	r3, #0
 8000acc:	3401      	adds	r4, #1
 8000ace:	9305      	str	r3, [sp, #20]
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	f04f 0c0a 	mov.w	ip, #10
 8000ad6:	4620      	mov	r0, r4
 8000ad8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000adc:	3a30      	subs	r2, #48	; 0x30
 8000ade:	2a09      	cmp	r2, #9
 8000ae0:	d903      	bls.n	8000aea <_vfiprintf_r+0x1ee>
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d0c5      	beq.n	8000a72 <_vfiprintf_r+0x176>
 8000ae6:	9105      	str	r1, [sp, #20]
 8000ae8:	e7c3      	b.n	8000a72 <_vfiprintf_r+0x176>
 8000aea:	fb0c 2101 	mla	r1, ip, r1, r2
 8000aee:	4604      	mov	r4, r0
 8000af0:	2301      	movs	r3, #1
 8000af2:	e7f0      	b.n	8000ad6 <_vfiprintf_r+0x1da>
 8000af4:	ab03      	add	r3, sp, #12
 8000af6:	9300      	str	r3, [sp, #0]
 8000af8:	462a      	mov	r2, r5
 8000afa:	4b16      	ldr	r3, [pc, #88]	; (8000b54 <_vfiprintf_r+0x258>)
 8000afc:	a904      	add	r1, sp, #16
 8000afe:	4630      	mov	r0, r6
 8000b00:	f3af 8000 	nop.w
 8000b04:	4607      	mov	r7, r0
 8000b06:	1c78      	adds	r0, r7, #1
 8000b08:	d1d6      	bne.n	8000ab8 <_vfiprintf_r+0x1bc>
 8000b0a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b0c:	07d9      	lsls	r1, r3, #31
 8000b0e:	d405      	bmi.n	8000b1c <_vfiprintf_r+0x220>
 8000b10:	89ab      	ldrh	r3, [r5, #12]
 8000b12:	059a      	lsls	r2, r3, #22
 8000b14:	d402      	bmi.n	8000b1c <_vfiprintf_r+0x220>
 8000b16:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b18:	f7ff fe31 	bl	800077e <__retarget_lock_release_recursive>
 8000b1c:	89ab      	ldrh	r3, [r5, #12]
 8000b1e:	065b      	lsls	r3, r3, #25
 8000b20:	f53f af12 	bmi.w	8000948 <_vfiprintf_r+0x4c>
 8000b24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b26:	e711      	b.n	800094c <_vfiprintf_r+0x50>
 8000b28:	ab03      	add	r3, sp, #12
 8000b2a:	9300      	str	r3, [sp, #0]
 8000b2c:	462a      	mov	r2, r5
 8000b2e:	4b09      	ldr	r3, [pc, #36]	; (8000b54 <_vfiprintf_r+0x258>)
 8000b30:	a904      	add	r1, sp, #16
 8000b32:	4630      	mov	r0, r6
 8000b34:	f000 f880 	bl	8000c38 <_printf_i>
 8000b38:	e7e4      	b.n	8000b04 <_vfiprintf_r+0x208>
 8000b3a:	bf00      	nop
 8000b3c:	080014cc 	.word	0x080014cc
 8000b40:	080014ec 	.word	0x080014ec
 8000b44:	080014ac 	.word	0x080014ac
 8000b48:	0800150c 	.word	0x0800150c
 8000b4c:	08001516 	.word	0x08001516
 8000b50:	00000000 	.word	0x00000000
 8000b54:	080008d7 	.word	0x080008d7
 8000b58:	08001512 	.word	0x08001512

08000b5c <_printf_common>:
 8000b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b60:	4616      	mov	r6, r2
 8000b62:	4699      	mov	r9, r3
 8000b64:	688a      	ldr	r2, [r1, #8]
 8000b66:	690b      	ldr	r3, [r1, #16]
 8000b68:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b6c:	4293      	cmp	r3, r2
 8000b6e:	bfb8      	it	lt
 8000b70:	4613      	movlt	r3, r2
 8000b72:	6033      	str	r3, [r6, #0]
 8000b74:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b78:	4607      	mov	r7, r0
 8000b7a:	460c      	mov	r4, r1
 8000b7c:	b10a      	cbz	r2, 8000b82 <_printf_common+0x26>
 8000b7e:	3301      	adds	r3, #1
 8000b80:	6033      	str	r3, [r6, #0]
 8000b82:	6823      	ldr	r3, [r4, #0]
 8000b84:	0699      	lsls	r1, r3, #26
 8000b86:	bf42      	ittt	mi
 8000b88:	6833      	ldrmi	r3, [r6, #0]
 8000b8a:	3302      	addmi	r3, #2
 8000b8c:	6033      	strmi	r3, [r6, #0]
 8000b8e:	6825      	ldr	r5, [r4, #0]
 8000b90:	f015 0506 	ands.w	r5, r5, #6
 8000b94:	d106      	bne.n	8000ba4 <_printf_common+0x48>
 8000b96:	f104 0a19 	add.w	sl, r4, #25
 8000b9a:	68e3      	ldr	r3, [r4, #12]
 8000b9c:	6832      	ldr	r2, [r6, #0]
 8000b9e:	1a9b      	subs	r3, r3, r2
 8000ba0:	42ab      	cmp	r3, r5
 8000ba2:	dc26      	bgt.n	8000bf2 <_printf_common+0x96>
 8000ba4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ba8:	1e13      	subs	r3, r2, #0
 8000baa:	6822      	ldr	r2, [r4, #0]
 8000bac:	bf18      	it	ne
 8000bae:	2301      	movne	r3, #1
 8000bb0:	0692      	lsls	r2, r2, #26
 8000bb2:	d42b      	bmi.n	8000c0c <_printf_common+0xb0>
 8000bb4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bb8:	4649      	mov	r1, r9
 8000bba:	4638      	mov	r0, r7
 8000bbc:	47c0      	blx	r8
 8000bbe:	3001      	adds	r0, #1
 8000bc0:	d01e      	beq.n	8000c00 <_printf_common+0xa4>
 8000bc2:	6823      	ldr	r3, [r4, #0]
 8000bc4:	68e5      	ldr	r5, [r4, #12]
 8000bc6:	6832      	ldr	r2, [r6, #0]
 8000bc8:	f003 0306 	and.w	r3, r3, #6
 8000bcc:	2b04      	cmp	r3, #4
 8000bce:	bf08      	it	eq
 8000bd0:	1aad      	subeq	r5, r5, r2
 8000bd2:	68a3      	ldr	r3, [r4, #8]
 8000bd4:	6922      	ldr	r2, [r4, #16]
 8000bd6:	bf0c      	ite	eq
 8000bd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bdc:	2500      	movne	r5, #0
 8000bde:	4293      	cmp	r3, r2
 8000be0:	bfc4      	itt	gt
 8000be2:	1a9b      	subgt	r3, r3, r2
 8000be4:	18ed      	addgt	r5, r5, r3
 8000be6:	2600      	movs	r6, #0
 8000be8:	341a      	adds	r4, #26
 8000bea:	42b5      	cmp	r5, r6
 8000bec:	d11a      	bne.n	8000c24 <_printf_common+0xc8>
 8000bee:	2000      	movs	r0, #0
 8000bf0:	e008      	b.n	8000c04 <_printf_common+0xa8>
 8000bf2:	2301      	movs	r3, #1
 8000bf4:	4652      	mov	r2, sl
 8000bf6:	4649      	mov	r1, r9
 8000bf8:	4638      	mov	r0, r7
 8000bfa:	47c0      	blx	r8
 8000bfc:	3001      	adds	r0, #1
 8000bfe:	d103      	bne.n	8000c08 <_printf_common+0xac>
 8000c00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c08:	3501      	adds	r5, #1
 8000c0a:	e7c6      	b.n	8000b9a <_printf_common+0x3e>
 8000c0c:	18e1      	adds	r1, r4, r3
 8000c0e:	1c5a      	adds	r2, r3, #1
 8000c10:	2030      	movs	r0, #48	; 0x30
 8000c12:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c16:	4422      	add	r2, r4
 8000c18:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c1c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c20:	3302      	adds	r3, #2
 8000c22:	e7c7      	b.n	8000bb4 <_printf_common+0x58>
 8000c24:	2301      	movs	r3, #1
 8000c26:	4622      	mov	r2, r4
 8000c28:	4649      	mov	r1, r9
 8000c2a:	4638      	mov	r0, r7
 8000c2c:	47c0      	blx	r8
 8000c2e:	3001      	adds	r0, #1
 8000c30:	d0e6      	beq.n	8000c00 <_printf_common+0xa4>
 8000c32:	3601      	adds	r6, #1
 8000c34:	e7d9      	b.n	8000bea <_printf_common+0x8e>
	...

08000c38 <_printf_i>:
 8000c38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c3c:	7e0f      	ldrb	r7, [r1, #24]
 8000c3e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c40:	2f78      	cmp	r7, #120	; 0x78
 8000c42:	4691      	mov	r9, r2
 8000c44:	4680      	mov	r8, r0
 8000c46:	460c      	mov	r4, r1
 8000c48:	469a      	mov	sl, r3
 8000c4a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c4e:	d807      	bhi.n	8000c60 <_printf_i+0x28>
 8000c50:	2f62      	cmp	r7, #98	; 0x62
 8000c52:	d80a      	bhi.n	8000c6a <_printf_i+0x32>
 8000c54:	2f00      	cmp	r7, #0
 8000c56:	f000 80d8 	beq.w	8000e0a <_printf_i+0x1d2>
 8000c5a:	2f58      	cmp	r7, #88	; 0x58
 8000c5c:	f000 80a3 	beq.w	8000da6 <_printf_i+0x16e>
 8000c60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c64:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c68:	e03a      	b.n	8000ce0 <_printf_i+0xa8>
 8000c6a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c6e:	2b15      	cmp	r3, #21
 8000c70:	d8f6      	bhi.n	8000c60 <_printf_i+0x28>
 8000c72:	a101      	add	r1, pc, #4	; (adr r1, 8000c78 <_printf_i+0x40>)
 8000c74:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c78:	08000cd1 	.word	0x08000cd1
 8000c7c:	08000ce5 	.word	0x08000ce5
 8000c80:	08000c61 	.word	0x08000c61
 8000c84:	08000c61 	.word	0x08000c61
 8000c88:	08000c61 	.word	0x08000c61
 8000c8c:	08000c61 	.word	0x08000c61
 8000c90:	08000ce5 	.word	0x08000ce5
 8000c94:	08000c61 	.word	0x08000c61
 8000c98:	08000c61 	.word	0x08000c61
 8000c9c:	08000c61 	.word	0x08000c61
 8000ca0:	08000c61 	.word	0x08000c61
 8000ca4:	08000df1 	.word	0x08000df1
 8000ca8:	08000d15 	.word	0x08000d15
 8000cac:	08000dd3 	.word	0x08000dd3
 8000cb0:	08000c61 	.word	0x08000c61
 8000cb4:	08000c61 	.word	0x08000c61
 8000cb8:	08000e13 	.word	0x08000e13
 8000cbc:	08000c61 	.word	0x08000c61
 8000cc0:	08000d15 	.word	0x08000d15
 8000cc4:	08000c61 	.word	0x08000c61
 8000cc8:	08000c61 	.word	0x08000c61
 8000ccc:	08000ddb 	.word	0x08000ddb
 8000cd0:	682b      	ldr	r3, [r5, #0]
 8000cd2:	1d1a      	adds	r2, r3, #4
 8000cd4:	681b      	ldr	r3, [r3, #0]
 8000cd6:	602a      	str	r2, [r5, #0]
 8000cd8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cdc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ce0:	2301      	movs	r3, #1
 8000ce2:	e0a3      	b.n	8000e2c <_printf_i+0x1f4>
 8000ce4:	6820      	ldr	r0, [r4, #0]
 8000ce6:	6829      	ldr	r1, [r5, #0]
 8000ce8:	0606      	lsls	r6, r0, #24
 8000cea:	f101 0304 	add.w	r3, r1, #4
 8000cee:	d50a      	bpl.n	8000d06 <_printf_i+0xce>
 8000cf0:	680e      	ldr	r6, [r1, #0]
 8000cf2:	602b      	str	r3, [r5, #0]
 8000cf4:	2e00      	cmp	r6, #0
 8000cf6:	da03      	bge.n	8000d00 <_printf_i+0xc8>
 8000cf8:	232d      	movs	r3, #45	; 0x2d
 8000cfa:	4276      	negs	r6, r6
 8000cfc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d00:	485e      	ldr	r0, [pc, #376]	; (8000e7c <_printf_i+0x244>)
 8000d02:	230a      	movs	r3, #10
 8000d04:	e019      	b.n	8000d3a <_printf_i+0x102>
 8000d06:	680e      	ldr	r6, [r1, #0]
 8000d08:	602b      	str	r3, [r5, #0]
 8000d0a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d0e:	bf18      	it	ne
 8000d10:	b236      	sxthne	r6, r6
 8000d12:	e7ef      	b.n	8000cf4 <_printf_i+0xbc>
 8000d14:	682b      	ldr	r3, [r5, #0]
 8000d16:	6820      	ldr	r0, [r4, #0]
 8000d18:	1d19      	adds	r1, r3, #4
 8000d1a:	6029      	str	r1, [r5, #0]
 8000d1c:	0601      	lsls	r1, r0, #24
 8000d1e:	d501      	bpl.n	8000d24 <_printf_i+0xec>
 8000d20:	681e      	ldr	r6, [r3, #0]
 8000d22:	e002      	b.n	8000d2a <_printf_i+0xf2>
 8000d24:	0646      	lsls	r6, r0, #25
 8000d26:	d5fb      	bpl.n	8000d20 <_printf_i+0xe8>
 8000d28:	881e      	ldrh	r6, [r3, #0]
 8000d2a:	4854      	ldr	r0, [pc, #336]	; (8000e7c <_printf_i+0x244>)
 8000d2c:	2f6f      	cmp	r7, #111	; 0x6f
 8000d2e:	bf0c      	ite	eq
 8000d30:	2308      	moveq	r3, #8
 8000d32:	230a      	movne	r3, #10
 8000d34:	2100      	movs	r1, #0
 8000d36:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d3a:	6865      	ldr	r5, [r4, #4]
 8000d3c:	60a5      	str	r5, [r4, #8]
 8000d3e:	2d00      	cmp	r5, #0
 8000d40:	bfa2      	ittt	ge
 8000d42:	6821      	ldrge	r1, [r4, #0]
 8000d44:	f021 0104 	bicge.w	r1, r1, #4
 8000d48:	6021      	strge	r1, [r4, #0]
 8000d4a:	b90e      	cbnz	r6, 8000d50 <_printf_i+0x118>
 8000d4c:	2d00      	cmp	r5, #0
 8000d4e:	d04d      	beq.n	8000dec <_printf_i+0x1b4>
 8000d50:	4615      	mov	r5, r2
 8000d52:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d56:	fb03 6711 	mls	r7, r3, r1, r6
 8000d5a:	5dc7      	ldrb	r7, [r0, r7]
 8000d5c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d60:	4637      	mov	r7, r6
 8000d62:	42bb      	cmp	r3, r7
 8000d64:	460e      	mov	r6, r1
 8000d66:	d9f4      	bls.n	8000d52 <_printf_i+0x11a>
 8000d68:	2b08      	cmp	r3, #8
 8000d6a:	d10b      	bne.n	8000d84 <_printf_i+0x14c>
 8000d6c:	6823      	ldr	r3, [r4, #0]
 8000d6e:	07de      	lsls	r6, r3, #31
 8000d70:	d508      	bpl.n	8000d84 <_printf_i+0x14c>
 8000d72:	6923      	ldr	r3, [r4, #16]
 8000d74:	6861      	ldr	r1, [r4, #4]
 8000d76:	4299      	cmp	r1, r3
 8000d78:	bfde      	ittt	le
 8000d7a:	2330      	movle	r3, #48	; 0x30
 8000d7c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d80:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000d84:	1b52      	subs	r2, r2, r5
 8000d86:	6122      	str	r2, [r4, #16]
 8000d88:	f8cd a000 	str.w	sl, [sp]
 8000d8c:	464b      	mov	r3, r9
 8000d8e:	aa03      	add	r2, sp, #12
 8000d90:	4621      	mov	r1, r4
 8000d92:	4640      	mov	r0, r8
 8000d94:	f7ff fee2 	bl	8000b5c <_printf_common>
 8000d98:	3001      	adds	r0, #1
 8000d9a:	d14c      	bne.n	8000e36 <_printf_i+0x1fe>
 8000d9c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000da0:	b004      	add	sp, #16
 8000da2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000da6:	4835      	ldr	r0, [pc, #212]	; (8000e7c <_printf_i+0x244>)
 8000da8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000dac:	6829      	ldr	r1, [r5, #0]
 8000dae:	6823      	ldr	r3, [r4, #0]
 8000db0:	f851 6b04 	ldr.w	r6, [r1], #4
 8000db4:	6029      	str	r1, [r5, #0]
 8000db6:	061d      	lsls	r5, r3, #24
 8000db8:	d514      	bpl.n	8000de4 <_printf_i+0x1ac>
 8000dba:	07df      	lsls	r7, r3, #31
 8000dbc:	bf44      	itt	mi
 8000dbe:	f043 0320 	orrmi.w	r3, r3, #32
 8000dc2:	6023      	strmi	r3, [r4, #0]
 8000dc4:	b91e      	cbnz	r6, 8000dce <_printf_i+0x196>
 8000dc6:	6823      	ldr	r3, [r4, #0]
 8000dc8:	f023 0320 	bic.w	r3, r3, #32
 8000dcc:	6023      	str	r3, [r4, #0]
 8000dce:	2310      	movs	r3, #16
 8000dd0:	e7b0      	b.n	8000d34 <_printf_i+0xfc>
 8000dd2:	6823      	ldr	r3, [r4, #0]
 8000dd4:	f043 0320 	orr.w	r3, r3, #32
 8000dd8:	6023      	str	r3, [r4, #0]
 8000dda:	2378      	movs	r3, #120	; 0x78
 8000ddc:	4828      	ldr	r0, [pc, #160]	; (8000e80 <_printf_i+0x248>)
 8000dde:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000de2:	e7e3      	b.n	8000dac <_printf_i+0x174>
 8000de4:	0659      	lsls	r1, r3, #25
 8000de6:	bf48      	it	mi
 8000de8:	b2b6      	uxthmi	r6, r6
 8000dea:	e7e6      	b.n	8000dba <_printf_i+0x182>
 8000dec:	4615      	mov	r5, r2
 8000dee:	e7bb      	b.n	8000d68 <_printf_i+0x130>
 8000df0:	682b      	ldr	r3, [r5, #0]
 8000df2:	6826      	ldr	r6, [r4, #0]
 8000df4:	6961      	ldr	r1, [r4, #20]
 8000df6:	1d18      	adds	r0, r3, #4
 8000df8:	6028      	str	r0, [r5, #0]
 8000dfa:	0635      	lsls	r5, r6, #24
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	d501      	bpl.n	8000e04 <_printf_i+0x1cc>
 8000e00:	6019      	str	r1, [r3, #0]
 8000e02:	e002      	b.n	8000e0a <_printf_i+0x1d2>
 8000e04:	0670      	lsls	r0, r6, #25
 8000e06:	d5fb      	bpl.n	8000e00 <_printf_i+0x1c8>
 8000e08:	8019      	strh	r1, [r3, #0]
 8000e0a:	2300      	movs	r3, #0
 8000e0c:	6123      	str	r3, [r4, #16]
 8000e0e:	4615      	mov	r5, r2
 8000e10:	e7ba      	b.n	8000d88 <_printf_i+0x150>
 8000e12:	682b      	ldr	r3, [r5, #0]
 8000e14:	1d1a      	adds	r2, r3, #4
 8000e16:	602a      	str	r2, [r5, #0]
 8000e18:	681d      	ldr	r5, [r3, #0]
 8000e1a:	6862      	ldr	r2, [r4, #4]
 8000e1c:	2100      	movs	r1, #0
 8000e1e:	4628      	mov	r0, r5
 8000e20:	f7ff f9de 	bl	80001e0 <memchr>
 8000e24:	b108      	cbz	r0, 8000e2a <_printf_i+0x1f2>
 8000e26:	1b40      	subs	r0, r0, r5
 8000e28:	6060      	str	r0, [r4, #4]
 8000e2a:	6863      	ldr	r3, [r4, #4]
 8000e2c:	6123      	str	r3, [r4, #16]
 8000e2e:	2300      	movs	r3, #0
 8000e30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e34:	e7a8      	b.n	8000d88 <_printf_i+0x150>
 8000e36:	6923      	ldr	r3, [r4, #16]
 8000e38:	462a      	mov	r2, r5
 8000e3a:	4649      	mov	r1, r9
 8000e3c:	4640      	mov	r0, r8
 8000e3e:	47d0      	blx	sl
 8000e40:	3001      	adds	r0, #1
 8000e42:	d0ab      	beq.n	8000d9c <_printf_i+0x164>
 8000e44:	6823      	ldr	r3, [r4, #0]
 8000e46:	079b      	lsls	r3, r3, #30
 8000e48:	d413      	bmi.n	8000e72 <_printf_i+0x23a>
 8000e4a:	68e0      	ldr	r0, [r4, #12]
 8000e4c:	9b03      	ldr	r3, [sp, #12]
 8000e4e:	4298      	cmp	r0, r3
 8000e50:	bfb8      	it	lt
 8000e52:	4618      	movlt	r0, r3
 8000e54:	e7a4      	b.n	8000da0 <_printf_i+0x168>
 8000e56:	2301      	movs	r3, #1
 8000e58:	4632      	mov	r2, r6
 8000e5a:	4649      	mov	r1, r9
 8000e5c:	4640      	mov	r0, r8
 8000e5e:	47d0      	blx	sl
 8000e60:	3001      	adds	r0, #1
 8000e62:	d09b      	beq.n	8000d9c <_printf_i+0x164>
 8000e64:	3501      	adds	r5, #1
 8000e66:	68e3      	ldr	r3, [r4, #12]
 8000e68:	9903      	ldr	r1, [sp, #12]
 8000e6a:	1a5b      	subs	r3, r3, r1
 8000e6c:	42ab      	cmp	r3, r5
 8000e6e:	dcf2      	bgt.n	8000e56 <_printf_i+0x21e>
 8000e70:	e7eb      	b.n	8000e4a <_printf_i+0x212>
 8000e72:	2500      	movs	r5, #0
 8000e74:	f104 0619 	add.w	r6, r4, #25
 8000e78:	e7f5      	b.n	8000e66 <_printf_i+0x22e>
 8000e7a:	bf00      	nop
 8000e7c:	0800151d 	.word	0x0800151d
 8000e80:	0800152e 	.word	0x0800152e

08000e84 <_sbrk_r>:
 8000e84:	b538      	push	{r3, r4, r5, lr}
 8000e86:	4d06      	ldr	r5, [pc, #24]	; (8000ea0 <_sbrk_r+0x1c>)
 8000e88:	2300      	movs	r3, #0
 8000e8a:	4604      	mov	r4, r0
 8000e8c:	4608      	mov	r0, r1
 8000e8e:	602b      	str	r3, [r5, #0]
 8000e90:	f7ff fad4 	bl	800043c <_sbrk>
 8000e94:	1c43      	adds	r3, r0, #1
 8000e96:	d102      	bne.n	8000e9e <_sbrk_r+0x1a>
 8000e98:	682b      	ldr	r3, [r5, #0]
 8000e9a:	b103      	cbz	r3, 8000e9e <_sbrk_r+0x1a>
 8000e9c:	6023      	str	r3, [r4, #0]
 8000e9e:	bd38      	pop	{r3, r4, r5, pc}
 8000ea0:	20000094 	.word	0x20000094

08000ea4 <__sread>:
 8000ea4:	b510      	push	{r4, lr}
 8000ea6:	460c      	mov	r4, r1
 8000ea8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eac:	f000 fab2 	bl	8001414 <_read_r>
 8000eb0:	2800      	cmp	r0, #0
 8000eb2:	bfab      	itete	ge
 8000eb4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000eb6:	89a3      	ldrhlt	r3, [r4, #12]
 8000eb8:	181b      	addge	r3, r3, r0
 8000eba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ebe:	bfac      	ite	ge
 8000ec0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ec2:	81a3      	strhlt	r3, [r4, #12]
 8000ec4:	bd10      	pop	{r4, pc}

08000ec6 <__swrite>:
 8000ec6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000eca:	461f      	mov	r7, r3
 8000ecc:	898b      	ldrh	r3, [r1, #12]
 8000ece:	05db      	lsls	r3, r3, #23
 8000ed0:	4605      	mov	r5, r0
 8000ed2:	460c      	mov	r4, r1
 8000ed4:	4616      	mov	r6, r2
 8000ed6:	d505      	bpl.n	8000ee4 <__swrite+0x1e>
 8000ed8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000edc:	2302      	movs	r3, #2
 8000ede:	2200      	movs	r2, #0
 8000ee0:	f000 f9c8 	bl	8001274 <_lseek_r>
 8000ee4:	89a3      	ldrh	r3, [r4, #12]
 8000ee6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000eea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000eee:	81a3      	strh	r3, [r4, #12]
 8000ef0:	4632      	mov	r2, r6
 8000ef2:	463b      	mov	r3, r7
 8000ef4:	4628      	mov	r0, r5
 8000ef6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000efa:	f000 b869 	b.w	8000fd0 <_write_r>

08000efe <__sseek>:
 8000efe:	b510      	push	{r4, lr}
 8000f00:	460c      	mov	r4, r1
 8000f02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f06:	f000 f9b5 	bl	8001274 <_lseek_r>
 8000f0a:	1c43      	adds	r3, r0, #1
 8000f0c:	89a3      	ldrh	r3, [r4, #12]
 8000f0e:	bf15      	itete	ne
 8000f10:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f12:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f16:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f1a:	81a3      	strheq	r3, [r4, #12]
 8000f1c:	bf18      	it	ne
 8000f1e:	81a3      	strhne	r3, [r4, #12]
 8000f20:	bd10      	pop	{r4, pc}

08000f22 <__sclose>:
 8000f22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f26:	f000 b8d3 	b.w	80010d0 <_close_r>
	...

08000f2c <__swbuf_r>:
 8000f2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f2e:	460e      	mov	r6, r1
 8000f30:	4614      	mov	r4, r2
 8000f32:	4605      	mov	r5, r0
 8000f34:	b118      	cbz	r0, 8000f3e <__swbuf_r+0x12>
 8000f36:	6983      	ldr	r3, [r0, #24]
 8000f38:	b90b      	cbnz	r3, 8000f3e <__swbuf_r+0x12>
 8000f3a:	f7ff fb81 	bl	8000640 <__sinit>
 8000f3e:	4b21      	ldr	r3, [pc, #132]	; (8000fc4 <__swbuf_r+0x98>)
 8000f40:	429c      	cmp	r4, r3
 8000f42:	d12b      	bne.n	8000f9c <__swbuf_r+0x70>
 8000f44:	686c      	ldr	r4, [r5, #4]
 8000f46:	69a3      	ldr	r3, [r4, #24]
 8000f48:	60a3      	str	r3, [r4, #8]
 8000f4a:	89a3      	ldrh	r3, [r4, #12]
 8000f4c:	071a      	lsls	r2, r3, #28
 8000f4e:	d52f      	bpl.n	8000fb0 <__swbuf_r+0x84>
 8000f50:	6923      	ldr	r3, [r4, #16]
 8000f52:	b36b      	cbz	r3, 8000fb0 <__swbuf_r+0x84>
 8000f54:	6923      	ldr	r3, [r4, #16]
 8000f56:	6820      	ldr	r0, [r4, #0]
 8000f58:	1ac0      	subs	r0, r0, r3
 8000f5a:	6963      	ldr	r3, [r4, #20]
 8000f5c:	b2f6      	uxtb	r6, r6
 8000f5e:	4283      	cmp	r3, r0
 8000f60:	4637      	mov	r7, r6
 8000f62:	dc04      	bgt.n	8000f6e <__swbuf_r+0x42>
 8000f64:	4621      	mov	r1, r4
 8000f66:	4628      	mov	r0, r5
 8000f68:	f000 f948 	bl	80011fc <_fflush_r>
 8000f6c:	bb30      	cbnz	r0, 8000fbc <__swbuf_r+0x90>
 8000f6e:	68a3      	ldr	r3, [r4, #8]
 8000f70:	3b01      	subs	r3, #1
 8000f72:	60a3      	str	r3, [r4, #8]
 8000f74:	6823      	ldr	r3, [r4, #0]
 8000f76:	1c5a      	adds	r2, r3, #1
 8000f78:	6022      	str	r2, [r4, #0]
 8000f7a:	701e      	strb	r6, [r3, #0]
 8000f7c:	6963      	ldr	r3, [r4, #20]
 8000f7e:	3001      	adds	r0, #1
 8000f80:	4283      	cmp	r3, r0
 8000f82:	d004      	beq.n	8000f8e <__swbuf_r+0x62>
 8000f84:	89a3      	ldrh	r3, [r4, #12]
 8000f86:	07db      	lsls	r3, r3, #31
 8000f88:	d506      	bpl.n	8000f98 <__swbuf_r+0x6c>
 8000f8a:	2e0a      	cmp	r6, #10
 8000f8c:	d104      	bne.n	8000f98 <__swbuf_r+0x6c>
 8000f8e:	4621      	mov	r1, r4
 8000f90:	4628      	mov	r0, r5
 8000f92:	f000 f933 	bl	80011fc <_fflush_r>
 8000f96:	b988      	cbnz	r0, 8000fbc <__swbuf_r+0x90>
 8000f98:	4638      	mov	r0, r7
 8000f9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f9c:	4b0a      	ldr	r3, [pc, #40]	; (8000fc8 <__swbuf_r+0x9c>)
 8000f9e:	429c      	cmp	r4, r3
 8000fa0:	d101      	bne.n	8000fa6 <__swbuf_r+0x7a>
 8000fa2:	68ac      	ldr	r4, [r5, #8]
 8000fa4:	e7cf      	b.n	8000f46 <__swbuf_r+0x1a>
 8000fa6:	4b09      	ldr	r3, [pc, #36]	; (8000fcc <__swbuf_r+0xa0>)
 8000fa8:	429c      	cmp	r4, r3
 8000faa:	bf08      	it	eq
 8000fac:	68ec      	ldreq	r4, [r5, #12]
 8000fae:	e7ca      	b.n	8000f46 <__swbuf_r+0x1a>
 8000fb0:	4621      	mov	r1, r4
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	f000 f81e 	bl	8000ff4 <__swsetup_r>
 8000fb8:	2800      	cmp	r0, #0
 8000fba:	d0cb      	beq.n	8000f54 <__swbuf_r+0x28>
 8000fbc:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000fc0:	e7ea      	b.n	8000f98 <__swbuf_r+0x6c>
 8000fc2:	bf00      	nop
 8000fc4:	080014cc 	.word	0x080014cc
 8000fc8:	080014ec 	.word	0x080014ec
 8000fcc:	080014ac 	.word	0x080014ac

08000fd0 <_write_r>:
 8000fd0:	b538      	push	{r3, r4, r5, lr}
 8000fd2:	4d07      	ldr	r5, [pc, #28]	; (8000ff0 <_write_r+0x20>)
 8000fd4:	4604      	mov	r4, r0
 8000fd6:	4608      	mov	r0, r1
 8000fd8:	4611      	mov	r1, r2
 8000fda:	2200      	movs	r2, #0
 8000fdc:	602a      	str	r2, [r5, #0]
 8000fde:	461a      	mov	r2, r3
 8000fe0:	f7ff f9db 	bl	800039a <_write>
 8000fe4:	1c43      	adds	r3, r0, #1
 8000fe6:	d102      	bne.n	8000fee <_write_r+0x1e>
 8000fe8:	682b      	ldr	r3, [r5, #0]
 8000fea:	b103      	cbz	r3, 8000fee <_write_r+0x1e>
 8000fec:	6023      	str	r3, [r4, #0]
 8000fee:	bd38      	pop	{r3, r4, r5, pc}
 8000ff0:	20000094 	.word	0x20000094

08000ff4 <__swsetup_r>:
 8000ff4:	4b32      	ldr	r3, [pc, #200]	; (80010c0 <__swsetup_r+0xcc>)
 8000ff6:	b570      	push	{r4, r5, r6, lr}
 8000ff8:	681d      	ldr	r5, [r3, #0]
 8000ffa:	4606      	mov	r6, r0
 8000ffc:	460c      	mov	r4, r1
 8000ffe:	b125      	cbz	r5, 800100a <__swsetup_r+0x16>
 8001000:	69ab      	ldr	r3, [r5, #24]
 8001002:	b913      	cbnz	r3, 800100a <__swsetup_r+0x16>
 8001004:	4628      	mov	r0, r5
 8001006:	f7ff fb1b 	bl	8000640 <__sinit>
 800100a:	4b2e      	ldr	r3, [pc, #184]	; (80010c4 <__swsetup_r+0xd0>)
 800100c:	429c      	cmp	r4, r3
 800100e:	d10f      	bne.n	8001030 <__swsetup_r+0x3c>
 8001010:	686c      	ldr	r4, [r5, #4]
 8001012:	89a3      	ldrh	r3, [r4, #12]
 8001014:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001018:	0719      	lsls	r1, r3, #28
 800101a:	d42c      	bmi.n	8001076 <__swsetup_r+0x82>
 800101c:	06dd      	lsls	r5, r3, #27
 800101e:	d411      	bmi.n	8001044 <__swsetup_r+0x50>
 8001020:	2309      	movs	r3, #9
 8001022:	6033      	str	r3, [r6, #0]
 8001024:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001028:	81a3      	strh	r3, [r4, #12]
 800102a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800102e:	e03e      	b.n	80010ae <__swsetup_r+0xba>
 8001030:	4b25      	ldr	r3, [pc, #148]	; (80010c8 <__swsetup_r+0xd4>)
 8001032:	429c      	cmp	r4, r3
 8001034:	d101      	bne.n	800103a <__swsetup_r+0x46>
 8001036:	68ac      	ldr	r4, [r5, #8]
 8001038:	e7eb      	b.n	8001012 <__swsetup_r+0x1e>
 800103a:	4b24      	ldr	r3, [pc, #144]	; (80010cc <__swsetup_r+0xd8>)
 800103c:	429c      	cmp	r4, r3
 800103e:	bf08      	it	eq
 8001040:	68ec      	ldreq	r4, [r5, #12]
 8001042:	e7e6      	b.n	8001012 <__swsetup_r+0x1e>
 8001044:	0758      	lsls	r0, r3, #29
 8001046:	d512      	bpl.n	800106e <__swsetup_r+0x7a>
 8001048:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800104a:	b141      	cbz	r1, 800105e <__swsetup_r+0x6a>
 800104c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001050:	4299      	cmp	r1, r3
 8001052:	d002      	beq.n	800105a <__swsetup_r+0x66>
 8001054:	4630      	mov	r0, r6
 8001056:	f000 f991 	bl	800137c <_free_r>
 800105a:	2300      	movs	r3, #0
 800105c:	6363      	str	r3, [r4, #52]	; 0x34
 800105e:	89a3      	ldrh	r3, [r4, #12]
 8001060:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001064:	81a3      	strh	r3, [r4, #12]
 8001066:	2300      	movs	r3, #0
 8001068:	6063      	str	r3, [r4, #4]
 800106a:	6923      	ldr	r3, [r4, #16]
 800106c:	6023      	str	r3, [r4, #0]
 800106e:	89a3      	ldrh	r3, [r4, #12]
 8001070:	f043 0308 	orr.w	r3, r3, #8
 8001074:	81a3      	strh	r3, [r4, #12]
 8001076:	6923      	ldr	r3, [r4, #16]
 8001078:	b94b      	cbnz	r3, 800108e <__swsetup_r+0x9a>
 800107a:	89a3      	ldrh	r3, [r4, #12]
 800107c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001080:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001084:	d003      	beq.n	800108e <__swsetup_r+0x9a>
 8001086:	4621      	mov	r1, r4
 8001088:	4630      	mov	r0, r6
 800108a:	f000 f92b 	bl	80012e4 <__smakebuf_r>
 800108e:	89a0      	ldrh	r0, [r4, #12]
 8001090:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001094:	f010 0301 	ands.w	r3, r0, #1
 8001098:	d00a      	beq.n	80010b0 <__swsetup_r+0xbc>
 800109a:	2300      	movs	r3, #0
 800109c:	60a3      	str	r3, [r4, #8]
 800109e:	6963      	ldr	r3, [r4, #20]
 80010a0:	425b      	negs	r3, r3
 80010a2:	61a3      	str	r3, [r4, #24]
 80010a4:	6923      	ldr	r3, [r4, #16]
 80010a6:	b943      	cbnz	r3, 80010ba <__swsetup_r+0xc6>
 80010a8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80010ac:	d1ba      	bne.n	8001024 <__swsetup_r+0x30>
 80010ae:	bd70      	pop	{r4, r5, r6, pc}
 80010b0:	0781      	lsls	r1, r0, #30
 80010b2:	bf58      	it	pl
 80010b4:	6963      	ldrpl	r3, [r4, #20]
 80010b6:	60a3      	str	r3, [r4, #8]
 80010b8:	e7f4      	b.n	80010a4 <__swsetup_r+0xb0>
 80010ba:	2000      	movs	r0, #0
 80010bc:	e7f7      	b.n	80010ae <__swsetup_r+0xba>
 80010be:	bf00      	nop
 80010c0:	20000000 	.word	0x20000000
 80010c4:	080014cc 	.word	0x080014cc
 80010c8:	080014ec 	.word	0x080014ec
 80010cc:	080014ac 	.word	0x080014ac

080010d0 <_close_r>:
 80010d0:	b538      	push	{r3, r4, r5, lr}
 80010d2:	4d06      	ldr	r5, [pc, #24]	; (80010ec <_close_r+0x1c>)
 80010d4:	2300      	movs	r3, #0
 80010d6:	4604      	mov	r4, r0
 80010d8:	4608      	mov	r0, r1
 80010da:	602b      	str	r3, [r5, #0]
 80010dc:	f7ff f979 	bl	80003d2 <_close>
 80010e0:	1c43      	adds	r3, r0, #1
 80010e2:	d102      	bne.n	80010ea <_close_r+0x1a>
 80010e4:	682b      	ldr	r3, [r5, #0]
 80010e6:	b103      	cbz	r3, 80010ea <_close_r+0x1a>
 80010e8:	6023      	str	r3, [r4, #0]
 80010ea:	bd38      	pop	{r3, r4, r5, pc}
 80010ec:	20000094 	.word	0x20000094

080010f0 <__sflush_r>:
 80010f0:	898a      	ldrh	r2, [r1, #12]
 80010f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010f6:	4605      	mov	r5, r0
 80010f8:	0710      	lsls	r0, r2, #28
 80010fa:	460c      	mov	r4, r1
 80010fc:	d458      	bmi.n	80011b0 <__sflush_r+0xc0>
 80010fe:	684b      	ldr	r3, [r1, #4]
 8001100:	2b00      	cmp	r3, #0
 8001102:	dc05      	bgt.n	8001110 <__sflush_r+0x20>
 8001104:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001106:	2b00      	cmp	r3, #0
 8001108:	dc02      	bgt.n	8001110 <__sflush_r+0x20>
 800110a:	2000      	movs	r0, #0
 800110c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001110:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001112:	2e00      	cmp	r6, #0
 8001114:	d0f9      	beq.n	800110a <__sflush_r+0x1a>
 8001116:	2300      	movs	r3, #0
 8001118:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800111c:	682f      	ldr	r7, [r5, #0]
 800111e:	602b      	str	r3, [r5, #0]
 8001120:	d032      	beq.n	8001188 <__sflush_r+0x98>
 8001122:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001124:	89a3      	ldrh	r3, [r4, #12]
 8001126:	075a      	lsls	r2, r3, #29
 8001128:	d505      	bpl.n	8001136 <__sflush_r+0x46>
 800112a:	6863      	ldr	r3, [r4, #4]
 800112c:	1ac0      	subs	r0, r0, r3
 800112e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001130:	b10b      	cbz	r3, 8001136 <__sflush_r+0x46>
 8001132:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001134:	1ac0      	subs	r0, r0, r3
 8001136:	2300      	movs	r3, #0
 8001138:	4602      	mov	r2, r0
 800113a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800113c:	6a21      	ldr	r1, [r4, #32]
 800113e:	4628      	mov	r0, r5
 8001140:	47b0      	blx	r6
 8001142:	1c43      	adds	r3, r0, #1
 8001144:	89a3      	ldrh	r3, [r4, #12]
 8001146:	d106      	bne.n	8001156 <__sflush_r+0x66>
 8001148:	6829      	ldr	r1, [r5, #0]
 800114a:	291d      	cmp	r1, #29
 800114c:	d82c      	bhi.n	80011a8 <__sflush_r+0xb8>
 800114e:	4a2a      	ldr	r2, [pc, #168]	; (80011f8 <__sflush_r+0x108>)
 8001150:	40ca      	lsrs	r2, r1
 8001152:	07d6      	lsls	r6, r2, #31
 8001154:	d528      	bpl.n	80011a8 <__sflush_r+0xb8>
 8001156:	2200      	movs	r2, #0
 8001158:	6062      	str	r2, [r4, #4]
 800115a:	04d9      	lsls	r1, r3, #19
 800115c:	6922      	ldr	r2, [r4, #16]
 800115e:	6022      	str	r2, [r4, #0]
 8001160:	d504      	bpl.n	800116c <__sflush_r+0x7c>
 8001162:	1c42      	adds	r2, r0, #1
 8001164:	d101      	bne.n	800116a <__sflush_r+0x7a>
 8001166:	682b      	ldr	r3, [r5, #0]
 8001168:	b903      	cbnz	r3, 800116c <__sflush_r+0x7c>
 800116a:	6560      	str	r0, [r4, #84]	; 0x54
 800116c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800116e:	602f      	str	r7, [r5, #0]
 8001170:	2900      	cmp	r1, #0
 8001172:	d0ca      	beq.n	800110a <__sflush_r+0x1a>
 8001174:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001178:	4299      	cmp	r1, r3
 800117a:	d002      	beq.n	8001182 <__sflush_r+0x92>
 800117c:	4628      	mov	r0, r5
 800117e:	f000 f8fd 	bl	800137c <_free_r>
 8001182:	2000      	movs	r0, #0
 8001184:	6360      	str	r0, [r4, #52]	; 0x34
 8001186:	e7c1      	b.n	800110c <__sflush_r+0x1c>
 8001188:	6a21      	ldr	r1, [r4, #32]
 800118a:	2301      	movs	r3, #1
 800118c:	4628      	mov	r0, r5
 800118e:	47b0      	blx	r6
 8001190:	1c41      	adds	r1, r0, #1
 8001192:	d1c7      	bne.n	8001124 <__sflush_r+0x34>
 8001194:	682b      	ldr	r3, [r5, #0]
 8001196:	2b00      	cmp	r3, #0
 8001198:	d0c4      	beq.n	8001124 <__sflush_r+0x34>
 800119a:	2b1d      	cmp	r3, #29
 800119c:	d001      	beq.n	80011a2 <__sflush_r+0xb2>
 800119e:	2b16      	cmp	r3, #22
 80011a0:	d101      	bne.n	80011a6 <__sflush_r+0xb6>
 80011a2:	602f      	str	r7, [r5, #0]
 80011a4:	e7b1      	b.n	800110a <__sflush_r+0x1a>
 80011a6:	89a3      	ldrh	r3, [r4, #12]
 80011a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011ac:	81a3      	strh	r3, [r4, #12]
 80011ae:	e7ad      	b.n	800110c <__sflush_r+0x1c>
 80011b0:	690f      	ldr	r7, [r1, #16]
 80011b2:	2f00      	cmp	r7, #0
 80011b4:	d0a9      	beq.n	800110a <__sflush_r+0x1a>
 80011b6:	0793      	lsls	r3, r2, #30
 80011b8:	680e      	ldr	r6, [r1, #0]
 80011ba:	bf08      	it	eq
 80011bc:	694b      	ldreq	r3, [r1, #20]
 80011be:	600f      	str	r7, [r1, #0]
 80011c0:	bf18      	it	ne
 80011c2:	2300      	movne	r3, #0
 80011c4:	eba6 0807 	sub.w	r8, r6, r7
 80011c8:	608b      	str	r3, [r1, #8]
 80011ca:	f1b8 0f00 	cmp.w	r8, #0
 80011ce:	dd9c      	ble.n	800110a <__sflush_r+0x1a>
 80011d0:	6a21      	ldr	r1, [r4, #32]
 80011d2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011d4:	4643      	mov	r3, r8
 80011d6:	463a      	mov	r2, r7
 80011d8:	4628      	mov	r0, r5
 80011da:	47b0      	blx	r6
 80011dc:	2800      	cmp	r0, #0
 80011de:	dc06      	bgt.n	80011ee <__sflush_r+0xfe>
 80011e0:	89a3      	ldrh	r3, [r4, #12]
 80011e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011e6:	81a3      	strh	r3, [r4, #12]
 80011e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011ec:	e78e      	b.n	800110c <__sflush_r+0x1c>
 80011ee:	4407      	add	r7, r0
 80011f0:	eba8 0800 	sub.w	r8, r8, r0
 80011f4:	e7e9      	b.n	80011ca <__sflush_r+0xda>
 80011f6:	bf00      	nop
 80011f8:	20400001 	.word	0x20400001

080011fc <_fflush_r>:
 80011fc:	b538      	push	{r3, r4, r5, lr}
 80011fe:	690b      	ldr	r3, [r1, #16]
 8001200:	4605      	mov	r5, r0
 8001202:	460c      	mov	r4, r1
 8001204:	b913      	cbnz	r3, 800120c <_fflush_r+0x10>
 8001206:	2500      	movs	r5, #0
 8001208:	4628      	mov	r0, r5
 800120a:	bd38      	pop	{r3, r4, r5, pc}
 800120c:	b118      	cbz	r0, 8001216 <_fflush_r+0x1a>
 800120e:	6983      	ldr	r3, [r0, #24]
 8001210:	b90b      	cbnz	r3, 8001216 <_fflush_r+0x1a>
 8001212:	f7ff fa15 	bl	8000640 <__sinit>
 8001216:	4b14      	ldr	r3, [pc, #80]	; (8001268 <_fflush_r+0x6c>)
 8001218:	429c      	cmp	r4, r3
 800121a:	d11b      	bne.n	8001254 <_fflush_r+0x58>
 800121c:	686c      	ldr	r4, [r5, #4]
 800121e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001222:	2b00      	cmp	r3, #0
 8001224:	d0ef      	beq.n	8001206 <_fflush_r+0xa>
 8001226:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001228:	07d0      	lsls	r0, r2, #31
 800122a:	d404      	bmi.n	8001236 <_fflush_r+0x3a>
 800122c:	0599      	lsls	r1, r3, #22
 800122e:	d402      	bmi.n	8001236 <_fflush_r+0x3a>
 8001230:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001232:	f7ff faa3 	bl	800077c <__retarget_lock_acquire_recursive>
 8001236:	4628      	mov	r0, r5
 8001238:	4621      	mov	r1, r4
 800123a:	f7ff ff59 	bl	80010f0 <__sflush_r>
 800123e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001240:	07da      	lsls	r2, r3, #31
 8001242:	4605      	mov	r5, r0
 8001244:	d4e0      	bmi.n	8001208 <_fflush_r+0xc>
 8001246:	89a3      	ldrh	r3, [r4, #12]
 8001248:	059b      	lsls	r3, r3, #22
 800124a:	d4dd      	bmi.n	8001208 <_fflush_r+0xc>
 800124c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800124e:	f7ff fa96 	bl	800077e <__retarget_lock_release_recursive>
 8001252:	e7d9      	b.n	8001208 <_fflush_r+0xc>
 8001254:	4b05      	ldr	r3, [pc, #20]	; (800126c <_fflush_r+0x70>)
 8001256:	429c      	cmp	r4, r3
 8001258:	d101      	bne.n	800125e <_fflush_r+0x62>
 800125a:	68ac      	ldr	r4, [r5, #8]
 800125c:	e7df      	b.n	800121e <_fflush_r+0x22>
 800125e:	4b04      	ldr	r3, [pc, #16]	; (8001270 <_fflush_r+0x74>)
 8001260:	429c      	cmp	r4, r3
 8001262:	bf08      	it	eq
 8001264:	68ec      	ldreq	r4, [r5, #12]
 8001266:	e7da      	b.n	800121e <_fflush_r+0x22>
 8001268:	080014cc 	.word	0x080014cc
 800126c:	080014ec 	.word	0x080014ec
 8001270:	080014ac 	.word	0x080014ac

08001274 <_lseek_r>:
 8001274:	b538      	push	{r3, r4, r5, lr}
 8001276:	4d07      	ldr	r5, [pc, #28]	; (8001294 <_lseek_r+0x20>)
 8001278:	4604      	mov	r4, r0
 800127a:	4608      	mov	r0, r1
 800127c:	4611      	mov	r1, r2
 800127e:	2200      	movs	r2, #0
 8001280:	602a      	str	r2, [r5, #0]
 8001282:	461a      	mov	r2, r3
 8001284:	f7ff f8cc 	bl	8000420 <_lseek>
 8001288:	1c43      	adds	r3, r0, #1
 800128a:	d102      	bne.n	8001292 <_lseek_r+0x1e>
 800128c:	682b      	ldr	r3, [r5, #0]
 800128e:	b103      	cbz	r3, 8001292 <_lseek_r+0x1e>
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	bd38      	pop	{r3, r4, r5, pc}
 8001294:	20000094 	.word	0x20000094

08001298 <__swhatbuf_r>:
 8001298:	b570      	push	{r4, r5, r6, lr}
 800129a:	460e      	mov	r6, r1
 800129c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012a0:	2900      	cmp	r1, #0
 80012a2:	b096      	sub	sp, #88	; 0x58
 80012a4:	4614      	mov	r4, r2
 80012a6:	461d      	mov	r5, r3
 80012a8:	da08      	bge.n	80012bc <__swhatbuf_r+0x24>
 80012aa:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80012ae:	2200      	movs	r2, #0
 80012b0:	602a      	str	r2, [r5, #0]
 80012b2:	061a      	lsls	r2, r3, #24
 80012b4:	d410      	bmi.n	80012d8 <__swhatbuf_r+0x40>
 80012b6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012ba:	e00e      	b.n	80012da <__swhatbuf_r+0x42>
 80012bc:	466a      	mov	r2, sp
 80012be:	f000 f8bb 	bl	8001438 <_fstat_r>
 80012c2:	2800      	cmp	r0, #0
 80012c4:	dbf1      	blt.n	80012aa <__swhatbuf_r+0x12>
 80012c6:	9a01      	ldr	r2, [sp, #4]
 80012c8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012cc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012d0:	425a      	negs	r2, r3
 80012d2:	415a      	adcs	r2, r3
 80012d4:	602a      	str	r2, [r5, #0]
 80012d6:	e7ee      	b.n	80012b6 <__swhatbuf_r+0x1e>
 80012d8:	2340      	movs	r3, #64	; 0x40
 80012da:	2000      	movs	r0, #0
 80012dc:	6023      	str	r3, [r4, #0]
 80012de:	b016      	add	sp, #88	; 0x58
 80012e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080012e4 <__smakebuf_r>:
 80012e4:	898b      	ldrh	r3, [r1, #12]
 80012e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012e8:	079d      	lsls	r5, r3, #30
 80012ea:	4606      	mov	r6, r0
 80012ec:	460c      	mov	r4, r1
 80012ee:	d507      	bpl.n	8001300 <__smakebuf_r+0x1c>
 80012f0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	6123      	str	r3, [r4, #16]
 80012f8:	2301      	movs	r3, #1
 80012fa:	6163      	str	r3, [r4, #20]
 80012fc:	b002      	add	sp, #8
 80012fe:	bd70      	pop	{r4, r5, r6, pc}
 8001300:	ab01      	add	r3, sp, #4
 8001302:	466a      	mov	r2, sp
 8001304:	f7ff ffc8 	bl	8001298 <__swhatbuf_r>
 8001308:	9900      	ldr	r1, [sp, #0]
 800130a:	4605      	mov	r5, r0
 800130c:	4630      	mov	r0, r6
 800130e:	f7ff fa57 	bl	80007c0 <_malloc_r>
 8001312:	b948      	cbnz	r0, 8001328 <__smakebuf_r+0x44>
 8001314:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001318:	059a      	lsls	r2, r3, #22
 800131a:	d4ef      	bmi.n	80012fc <__smakebuf_r+0x18>
 800131c:	f023 0303 	bic.w	r3, r3, #3
 8001320:	f043 0302 	orr.w	r3, r3, #2
 8001324:	81a3      	strh	r3, [r4, #12]
 8001326:	e7e3      	b.n	80012f0 <__smakebuf_r+0xc>
 8001328:	4b0d      	ldr	r3, [pc, #52]	; (8001360 <__smakebuf_r+0x7c>)
 800132a:	62b3      	str	r3, [r6, #40]	; 0x28
 800132c:	89a3      	ldrh	r3, [r4, #12]
 800132e:	6020      	str	r0, [r4, #0]
 8001330:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001334:	81a3      	strh	r3, [r4, #12]
 8001336:	9b00      	ldr	r3, [sp, #0]
 8001338:	6163      	str	r3, [r4, #20]
 800133a:	9b01      	ldr	r3, [sp, #4]
 800133c:	6120      	str	r0, [r4, #16]
 800133e:	b15b      	cbz	r3, 8001358 <__smakebuf_r+0x74>
 8001340:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001344:	4630      	mov	r0, r6
 8001346:	f000 f889 	bl	800145c <_isatty_r>
 800134a:	b128      	cbz	r0, 8001358 <__smakebuf_r+0x74>
 800134c:	89a3      	ldrh	r3, [r4, #12]
 800134e:	f023 0303 	bic.w	r3, r3, #3
 8001352:	f043 0301 	orr.w	r3, r3, #1
 8001356:	81a3      	strh	r3, [r4, #12]
 8001358:	89a0      	ldrh	r0, [r4, #12]
 800135a:	4305      	orrs	r5, r0
 800135c:	81a5      	strh	r5, [r4, #12]
 800135e:	e7cd      	b.n	80012fc <__smakebuf_r+0x18>
 8001360:	080005d9 	.word	0x080005d9

08001364 <__malloc_lock>:
 8001364:	4801      	ldr	r0, [pc, #4]	; (800136c <__malloc_lock+0x8>)
 8001366:	f7ff ba09 	b.w	800077c <__retarget_lock_acquire_recursive>
 800136a:	bf00      	nop
 800136c:	20000088 	.word	0x20000088

08001370 <__malloc_unlock>:
 8001370:	4801      	ldr	r0, [pc, #4]	; (8001378 <__malloc_unlock+0x8>)
 8001372:	f7ff ba04 	b.w	800077e <__retarget_lock_release_recursive>
 8001376:	bf00      	nop
 8001378:	20000088 	.word	0x20000088

0800137c <_free_r>:
 800137c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800137e:	2900      	cmp	r1, #0
 8001380:	d044      	beq.n	800140c <_free_r+0x90>
 8001382:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001386:	9001      	str	r0, [sp, #4]
 8001388:	2b00      	cmp	r3, #0
 800138a:	f1a1 0404 	sub.w	r4, r1, #4
 800138e:	bfb8      	it	lt
 8001390:	18e4      	addlt	r4, r4, r3
 8001392:	f7ff ffe7 	bl	8001364 <__malloc_lock>
 8001396:	4a1e      	ldr	r2, [pc, #120]	; (8001410 <_free_r+0x94>)
 8001398:	9801      	ldr	r0, [sp, #4]
 800139a:	6813      	ldr	r3, [r2, #0]
 800139c:	b933      	cbnz	r3, 80013ac <_free_r+0x30>
 800139e:	6063      	str	r3, [r4, #4]
 80013a0:	6014      	str	r4, [r2, #0]
 80013a2:	b003      	add	sp, #12
 80013a4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013a8:	f7ff bfe2 	b.w	8001370 <__malloc_unlock>
 80013ac:	42a3      	cmp	r3, r4
 80013ae:	d908      	bls.n	80013c2 <_free_r+0x46>
 80013b0:	6825      	ldr	r5, [r4, #0]
 80013b2:	1961      	adds	r1, r4, r5
 80013b4:	428b      	cmp	r3, r1
 80013b6:	bf01      	itttt	eq
 80013b8:	6819      	ldreq	r1, [r3, #0]
 80013ba:	685b      	ldreq	r3, [r3, #4]
 80013bc:	1949      	addeq	r1, r1, r5
 80013be:	6021      	streq	r1, [r4, #0]
 80013c0:	e7ed      	b.n	800139e <_free_r+0x22>
 80013c2:	461a      	mov	r2, r3
 80013c4:	685b      	ldr	r3, [r3, #4]
 80013c6:	b10b      	cbz	r3, 80013cc <_free_r+0x50>
 80013c8:	42a3      	cmp	r3, r4
 80013ca:	d9fa      	bls.n	80013c2 <_free_r+0x46>
 80013cc:	6811      	ldr	r1, [r2, #0]
 80013ce:	1855      	adds	r5, r2, r1
 80013d0:	42a5      	cmp	r5, r4
 80013d2:	d10b      	bne.n	80013ec <_free_r+0x70>
 80013d4:	6824      	ldr	r4, [r4, #0]
 80013d6:	4421      	add	r1, r4
 80013d8:	1854      	adds	r4, r2, r1
 80013da:	42a3      	cmp	r3, r4
 80013dc:	6011      	str	r1, [r2, #0]
 80013de:	d1e0      	bne.n	80013a2 <_free_r+0x26>
 80013e0:	681c      	ldr	r4, [r3, #0]
 80013e2:	685b      	ldr	r3, [r3, #4]
 80013e4:	6053      	str	r3, [r2, #4]
 80013e6:	4421      	add	r1, r4
 80013e8:	6011      	str	r1, [r2, #0]
 80013ea:	e7da      	b.n	80013a2 <_free_r+0x26>
 80013ec:	d902      	bls.n	80013f4 <_free_r+0x78>
 80013ee:	230c      	movs	r3, #12
 80013f0:	6003      	str	r3, [r0, #0]
 80013f2:	e7d6      	b.n	80013a2 <_free_r+0x26>
 80013f4:	6825      	ldr	r5, [r4, #0]
 80013f6:	1961      	adds	r1, r4, r5
 80013f8:	428b      	cmp	r3, r1
 80013fa:	bf04      	itt	eq
 80013fc:	6819      	ldreq	r1, [r3, #0]
 80013fe:	685b      	ldreq	r3, [r3, #4]
 8001400:	6063      	str	r3, [r4, #4]
 8001402:	bf04      	itt	eq
 8001404:	1949      	addeq	r1, r1, r5
 8001406:	6021      	streq	r1, [r4, #0]
 8001408:	6054      	str	r4, [r2, #4]
 800140a:	e7ca      	b.n	80013a2 <_free_r+0x26>
 800140c:	b003      	add	sp, #12
 800140e:	bd30      	pop	{r4, r5, pc}
 8001410:	2000008c 	.word	0x2000008c

08001414 <_read_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4d07      	ldr	r5, [pc, #28]	; (8001434 <_read_r+0x20>)
 8001418:	4604      	mov	r4, r0
 800141a:	4608      	mov	r0, r1
 800141c:	4611      	mov	r1, r2
 800141e:	2200      	movs	r2, #0
 8001420:	602a      	str	r2, [r5, #0]
 8001422:	461a      	mov	r2, r3
 8001424:	f7fe ff9c 	bl	8000360 <_read>
 8001428:	1c43      	adds	r3, r0, #1
 800142a:	d102      	bne.n	8001432 <_read_r+0x1e>
 800142c:	682b      	ldr	r3, [r5, #0]
 800142e:	b103      	cbz	r3, 8001432 <_read_r+0x1e>
 8001430:	6023      	str	r3, [r4, #0]
 8001432:	bd38      	pop	{r3, r4, r5, pc}
 8001434:	20000094 	.word	0x20000094

08001438 <_fstat_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4d07      	ldr	r5, [pc, #28]	; (8001458 <_fstat_r+0x20>)
 800143c:	2300      	movs	r3, #0
 800143e:	4604      	mov	r4, r0
 8001440:	4608      	mov	r0, r1
 8001442:	4611      	mov	r1, r2
 8001444:	602b      	str	r3, [r5, #0]
 8001446:	f7fe ffd0 	bl	80003ea <_fstat>
 800144a:	1c43      	adds	r3, r0, #1
 800144c:	d102      	bne.n	8001454 <_fstat_r+0x1c>
 800144e:	682b      	ldr	r3, [r5, #0]
 8001450:	b103      	cbz	r3, 8001454 <_fstat_r+0x1c>
 8001452:	6023      	str	r3, [r4, #0]
 8001454:	bd38      	pop	{r3, r4, r5, pc}
 8001456:	bf00      	nop
 8001458:	20000094 	.word	0x20000094

0800145c <_isatty_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d06      	ldr	r5, [pc, #24]	; (8001478 <_isatty_r+0x1c>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	602b      	str	r3, [r5, #0]
 8001468:	f7fe ffcf 	bl	800040a <_isatty>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_isatty_r+0x1a>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	b103      	cbz	r3, 8001476 <_isatty_r+0x1a>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	20000094 	.word	0x20000094

0800147c <_init>:
 800147c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800147e:	bf00      	nop
 8001480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001482:	bc08      	pop	{r3}
 8001484:	469e      	mov	lr, r3
 8001486:	4770      	bx	lr

08001488 <_fini>:
 8001488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148a:	bf00      	nop
 800148c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800148e:	bc08      	pop	{r3}
 8001490:	469e      	mov	lr, r3
 8001492:	4770      	bx	lr
