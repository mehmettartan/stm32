
12_Timers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000130c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  080014ac  080014ac  000114ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800155c  0800155c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800155c  0800155c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800155c  0800155c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800155c  0800155c  0001155c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001560  08001560  00011560  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001564  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080015c8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080015c8  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000159c  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000056e  00000000  00000000  00021630  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000170  00000000  00000000  00021ba0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000118  00000000  00000000  00021d10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001f43  00000000  00000000  00021e28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001e1f  00000000  00000000  00023d6b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000553d7  00000000  00000000  00025b8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0007af61  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c28  00000000  00000000  0007afb4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001494 	.word	0x08001494

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001494 	.word	0x08001494

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:

#define LED				   		PIN5


int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	/*1.Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b16      	ldr	r3, [pc, #88]	; (80002e0 <main+0x60>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a15      	ldr	r2, [pc, #84]	; (80002e0 <main+0x60>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30

	/*2.Set PA5 as output pin*/
	GPIOA->MODER |= (1U<<10);
 8000290:	4b14      	ldr	r3, [pc, #80]	; (80002e4 <main+0x64>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a13      	ldr	r2, [pc, #76]	; (80002e4 <main+0x64>)
 8000296:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800029a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 800029c:	4b11      	ldr	r3, [pc, #68]	; (80002e4 <main+0x64>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a10      	ldr	r2, [pc, #64]	; (80002e4 <main+0x64>)
 80002a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80002a6:	6013      	str	r3, [r2, #0]

	tim2_1hz_init();
 80002a8:	f000 f8c4 	bl	8000434 <tim2_1hz_init>

	while(1)
	{
		/*wait for UIF */
		while(TIM2->SR & SR_UIF) { }
 80002ac:	bf00      	nop
 80002ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002b2:	691b      	ldr	r3, [r3, #16]
 80002b4:	f003 0301 	and.w	r3, r3, #1
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d1f8      	bne.n	80002ae <main+0x2e>

		/*Clear UIF*/
		TIM2->SR &=~SR_UIF;
 80002bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002c0:	691b      	ldr	r3, [r3, #16]
 80002c2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80002c6:	f023 0301 	bic.w	r3, r3, #1
 80002ca:	6113      	str	r3, [r2, #16]

		printf("A second passed !! \n\r");
 80002cc:	4806      	ldr	r0, [pc, #24]	; (80002e8 <main+0x68>)
 80002ce:	f000 f953 	bl	8000578 <iprintf>

		GPIOA->ODR ^= LED;
 80002d2:	4b04      	ldr	r3, [pc, #16]	; (80002e4 <main+0x64>)
 80002d4:	695b      	ldr	r3, [r3, #20]
 80002d6:	4a03      	ldr	r2, [pc, #12]	; (80002e4 <main+0x64>)
 80002d8:	f083 0320 	eor.w	r3, r3, #32
 80002dc:	6153      	str	r3, [r2, #20]
		while(TIM2->SR & SR_UIF) { }
 80002de:	e7e5      	b.n	80002ac <main+0x2c>
 80002e0:	40023800 	.word	0x40023800
 80002e4:	40020000 	.word	0x40020000
 80002e8:	080014ac 	.word	0x080014ac

080002ec <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	60f8      	str	r0, [r7, #12]
 80002f4:	60b9      	str	r1, [r7, #8]
 80002f6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00a      	b.n	8000314 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002fe:	f3af 8000 	nop.w
 8000302:	4601      	mov	r1, r0
 8000304:	68bb      	ldr	r3, [r7, #8]
 8000306:	1c5a      	adds	r2, r3, #1
 8000308:	60ba      	str	r2, [r7, #8]
 800030a:	b2ca      	uxtb	r2, r1
 800030c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	3301      	adds	r3, #1
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf0      	blt.n	80002fe <_read+0x12>
  }

  return len;
 800031c:	687b      	ldr	r3, [r7, #4]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}

08000326 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b086      	sub	sp, #24
 800032a:	af00      	add	r7, sp, #0
 800032c:	60f8      	str	r0, [r7, #12]
 800032e:	60b9      	str	r1, [r7, #8]
 8000330:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	2300      	movs	r3, #0
 8000334:	617b      	str	r3, [r7, #20]
 8000336:	e009      	b.n	800034c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	60ba      	str	r2, [r7, #8]
 800033e:	781b      	ldrb	r3, [r3, #0]
 8000340:	4618      	mov	r0, r3
 8000342:	f000 f899 	bl	8000478 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697a      	ldr	r2, [r7, #20]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	dbf1      	blt.n	8000338 <_write+0x12>
  }
  return len;
 8000354:	687b      	ldr	r3, [r7, #4]
}
 8000356:	4618      	mov	r0, r3
 8000358:	3718      	adds	r7, #24
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}

0800035e <_close>:

int _close(int file)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000366:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800036a:	4618      	mov	r0, r3
 800036c:	370c      	adds	r7, #12
 800036e:	46bd      	mov	sp, r7
 8000370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000374:	4770      	bx	lr

08000376 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000376:	b480      	push	{r7}
 8000378:	b083      	sub	sp, #12
 800037a:	af00      	add	r7, sp, #0
 800037c:	6078      	str	r0, [r7, #4]
 800037e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000380:	683b      	ldr	r3, [r7, #0]
 8000382:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000386:	605a      	str	r2, [r3, #4]
  return 0;
 8000388:	2300      	movs	r3, #0
}
 800038a:	4618      	mov	r0, r3
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr

08000396 <_isatty>:

int _isatty(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800039e:	2301      	movs	r3, #1
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003aa:	4770      	bx	lr

080003ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b085      	sub	sp, #20
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	60f8      	str	r0, [r7, #12]
 80003b4:	60b9      	str	r1, [r7, #8]
 80003b6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003b8:	2300      	movs	r3, #0
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	3714      	adds	r7, #20
 80003be:	46bd      	mov	sp, r7
 80003c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c4:	4770      	bx	lr
	...

080003c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b086      	sub	sp, #24
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d0:	4a14      	ldr	r2, [pc, #80]	; (8000424 <_sbrk+0x5c>)
 80003d2:	4b15      	ldr	r3, [pc, #84]	; (8000428 <_sbrk+0x60>)
 80003d4:	1ad3      	subs	r3, r2, r3
 80003d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003d8:	697b      	ldr	r3, [r7, #20]
 80003da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003dc:	4b13      	ldr	r3, [pc, #76]	; (800042c <_sbrk+0x64>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	2b00      	cmp	r3, #0
 80003e2:	d102      	bne.n	80003ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e4:	4b11      	ldr	r3, [pc, #68]	; (800042c <_sbrk+0x64>)
 80003e6:	4a12      	ldr	r2, [pc, #72]	; (8000430 <_sbrk+0x68>)
 80003e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ea:	4b10      	ldr	r3, [pc, #64]	; (800042c <_sbrk+0x64>)
 80003ec:	681a      	ldr	r2, [r3, #0]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4413      	add	r3, r2
 80003f2:	693a      	ldr	r2, [r7, #16]
 80003f4:	429a      	cmp	r2, r3
 80003f6:	d207      	bcs.n	8000408 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003f8:	f000 f88c 	bl	8000514 <__errno>
 80003fc:	4603      	mov	r3, r0
 80003fe:	220c      	movs	r2, #12
 8000400:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000402:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000406:	e009      	b.n	800041c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000408:	4b08      	ldr	r3, [pc, #32]	; (800042c <_sbrk+0x64>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800040e:	4b07      	ldr	r3, [pc, #28]	; (800042c <_sbrk+0x64>)
 8000410:	681a      	ldr	r2, [r3, #0]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4413      	add	r3, r2
 8000416:	4a05      	ldr	r2, [pc, #20]	; (800042c <_sbrk+0x64>)
 8000418:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800041a:	68fb      	ldr	r3, [r7, #12]
}
 800041c:	4618      	mov	r0, r3
 800041e:	3718      	adds	r7, #24
 8000420:	46bd      	mov	sp, r7
 8000422:	bd80      	pop	{r7, pc}
 8000424:	20020000 	.word	0x20020000
 8000428:	00000400 	.word	0x00000400
 800042c:	20000080 	.word	0x20000080
 8000430:	20000098 	.word	0x20000098

08000434 <tim2_1hz_init>:

#define TIM2EN       (1U<<0)
#define CR1_CEN      (1U<<0)

void tim2_1hz_init(void)
{
 8000434:	b480      	push	{r7}
 8000436:	af00      	add	r7, sp, #0
	/*Enable clock access */
	RCC->APB1ENR |= TIM2EN;
 8000438:	4b0e      	ldr	r3, [pc, #56]	; (8000474 <tim2_1hz_init+0x40>)
 800043a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800043c:	4a0d      	ldr	r2, [pc, #52]	; (8000474 <tim2_1hz_init+0x40>)
 800043e:	f043 0301 	orr.w	r3, r3, #1
 8000442:	6413      	str	r3, [r2, #64]	; 0x40
	/*Set Prescaler value*/
	TIM2->PSC = 1600 - 1; //16 000 000 / 1600 = 10 000
 8000444:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000448:	f240 623f 	movw	r2, #1599	; 0x63f
 800044c:	629a      	str	r2, [r3, #40]	; 0x28
	/*Set auto-reload value */
	TIM2->ARR = 10000 - 1; // 10000 / 10000 = 1
 800044e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000452:	f242 720f 	movw	r2, #9999	; 0x270f
 8000456:	62da      	str	r2, [r3, #44]	; 0x2c
	/*clear counter */
	TIM2->CNT = 0;
 8000458:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800045c:	2200      	movs	r2, #0
 800045e:	625a      	str	r2, [r3, #36]	; 0x24
	/*Enable Timer */
	TIM2->CR1 = CR1_CEN;
 8000460:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000464:	2201      	movs	r2, #1
 8000466:	601a      	str	r2, [r3, #0]
}
 8000468:	bf00      	nop
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr
 8000472:	bf00      	nop
 8000474:	40023800 	.word	0x40023800

08000478 <__io_putchar>:
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t Baudrate);

void uart2_write(int ch);

int __io_putchar(int ch)
{
 8000478:	b580      	push	{r7, lr}
 800047a:	b082      	sub	sp, #8
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000480:	6878      	ldr	r0, [r7, #4]
 8000482:	f000 f805 	bl	8000490 <uart2_write>
	return ch;
 8000486:	687b      	ldr	r3, [r7, #4]
}
 8000488:	4618      	mov	r0, r3
 800048a:	3708      	adds	r7, #8
 800048c:	46bd      	mov	sp, r7
 800048e:	bd80      	pop	{r7, pc}

08000490 <uart2_write>:
	/*Enable uart module*/
	 USART2->CR1 |= CR1_UE;
}

void uart2_write(int ch)
{
 8000490:	b480      	push	{r7}
 8000492:	b083      	sub	sp, #12
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	  /*Make sure the transmit data register is empty*/
		while(!(USART2->SR & SR_TXE)){}
 8000498:	bf00      	nop
 800049a:	4b08      	ldr	r3, [pc, #32]	; (80004bc <uart2_write+0x2c>)
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80004a2:	2b00      	cmp	r3, #0
 80004a4:	d0f9      	beq.n	800049a <uart2_write+0xa>

	  /*Write to transmit data register*/
		USART2->DR	=  (ch & 0xFF);
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4a04      	ldr	r2, [pc, #16]	; (80004bc <uart2_write+0x2c>)
 80004aa:	b2db      	uxtb	r3, r3
 80004ac:	6053      	str	r3, [r2, #4]
}
 80004ae:	bf00      	nop
 80004b0:	370c      	adds	r7, #12
 80004b2:	46bd      	mov	sp, r7
 80004b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b8:	4770      	bx	lr
 80004ba:	bf00      	nop
 80004bc:	40004400 	.word	0x40004400

080004c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004c0:	480d      	ldr	r0, [pc, #52]	; (80004f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004c8:	480c      	ldr	r0, [pc, #48]	; (80004fc <LoopForever+0x6>)
  ldr r1, =_edata
 80004ca:	490d      	ldr	r1, [pc, #52]	; (8000500 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004cc:	4a0d      	ldr	r2, [pc, #52]	; (8000504 <LoopForever+0xe>)
  movs r3, #0
 80004ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004d0:	e002      	b.n	80004d8 <LoopCopyDataInit>

080004d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004d6:	3304      	adds	r3, #4

080004d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004dc:	d3f9      	bcc.n	80004d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004de:	4a0a      	ldr	r2, [pc, #40]	; (8000508 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004e0:	4c0a      	ldr	r4, [pc, #40]	; (800050c <LoopForever+0x16>)
  movs r3, #0
 80004e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004e4:	e001      	b.n	80004ea <LoopFillZerobss>

080004e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004e8:	3204      	adds	r2, #4

080004ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004ec:	d3fb      	bcc.n	80004e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ee:	f000 f817 	bl	8000520 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004f2:	f7ff fec5 	bl	8000280 <main>

080004f6 <LoopForever>:

LoopForever:
  b LoopForever
 80004f6:	e7fe      	b.n	80004f6 <LoopForever>
  ldr   r0, =_estack
 80004f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000500:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000504:	08001564 	.word	0x08001564
  ldr r2, =_sbss
 8000508:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800050c:	20000094 	.word	0x20000094

08000510 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000510:	e7fe      	b.n	8000510 <ADC_IRQHandler>
	...

08000514 <__errno>:
 8000514:	4b01      	ldr	r3, [pc, #4]	; (800051c <__errno+0x8>)
 8000516:	6818      	ldr	r0, [r3, #0]
 8000518:	4770      	bx	lr
 800051a:	bf00      	nop
 800051c:	20000000 	.word	0x20000000

08000520 <__libc_init_array>:
 8000520:	b570      	push	{r4, r5, r6, lr}
 8000522:	4d0d      	ldr	r5, [pc, #52]	; (8000558 <__libc_init_array+0x38>)
 8000524:	4c0d      	ldr	r4, [pc, #52]	; (800055c <__libc_init_array+0x3c>)
 8000526:	1b64      	subs	r4, r4, r5
 8000528:	10a4      	asrs	r4, r4, #2
 800052a:	2600      	movs	r6, #0
 800052c:	42a6      	cmp	r6, r4
 800052e:	d109      	bne.n	8000544 <__libc_init_array+0x24>
 8000530:	4d0b      	ldr	r5, [pc, #44]	; (8000560 <__libc_init_array+0x40>)
 8000532:	4c0c      	ldr	r4, [pc, #48]	; (8000564 <__libc_init_array+0x44>)
 8000534:	f000 ffae 	bl	8001494 <_init>
 8000538:	1b64      	subs	r4, r4, r5
 800053a:	10a4      	asrs	r4, r4, #2
 800053c:	2600      	movs	r6, #0
 800053e:	42a6      	cmp	r6, r4
 8000540:	d105      	bne.n	800054e <__libc_init_array+0x2e>
 8000542:	bd70      	pop	{r4, r5, r6, pc}
 8000544:	f855 3b04 	ldr.w	r3, [r5], #4
 8000548:	4798      	blx	r3
 800054a:	3601      	adds	r6, #1
 800054c:	e7ee      	b.n	800052c <__libc_init_array+0xc>
 800054e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000552:	4798      	blx	r3
 8000554:	3601      	adds	r6, #1
 8000556:	e7f2      	b.n	800053e <__libc_init_array+0x1e>
 8000558:	0800155c 	.word	0x0800155c
 800055c:	0800155c 	.word	0x0800155c
 8000560:	0800155c 	.word	0x0800155c
 8000564:	08001560 	.word	0x08001560

08000568 <memset>:
 8000568:	4402      	add	r2, r0
 800056a:	4603      	mov	r3, r0
 800056c:	4293      	cmp	r3, r2
 800056e:	d100      	bne.n	8000572 <memset+0xa>
 8000570:	4770      	bx	lr
 8000572:	f803 1b01 	strb.w	r1, [r3], #1
 8000576:	e7f9      	b.n	800056c <memset+0x4>

08000578 <iprintf>:
 8000578:	b40f      	push	{r0, r1, r2, r3}
 800057a:	4b0a      	ldr	r3, [pc, #40]	; (80005a4 <iprintf+0x2c>)
 800057c:	b513      	push	{r0, r1, r4, lr}
 800057e:	681c      	ldr	r4, [r3, #0]
 8000580:	b124      	cbz	r4, 800058c <iprintf+0x14>
 8000582:	69a3      	ldr	r3, [r4, #24]
 8000584:	b913      	cbnz	r3, 800058c <iprintf+0x14>
 8000586:	4620      	mov	r0, r4
 8000588:	f000 f866 	bl	8000658 <__sinit>
 800058c:	ab05      	add	r3, sp, #20
 800058e:	9a04      	ldr	r2, [sp, #16]
 8000590:	68a1      	ldr	r1, [r4, #8]
 8000592:	9301      	str	r3, [sp, #4]
 8000594:	4620      	mov	r0, r4
 8000596:	f000 f9bd 	bl	8000914 <_vfiprintf_r>
 800059a:	b002      	add	sp, #8
 800059c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a0:	b004      	add	sp, #16
 80005a2:	4770      	bx	lr
 80005a4:	20000000 	.word	0x20000000

080005a8 <std>:
 80005a8:	2300      	movs	r3, #0
 80005aa:	b510      	push	{r4, lr}
 80005ac:	4604      	mov	r4, r0
 80005ae:	e9c0 3300 	strd	r3, r3, [r0]
 80005b2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005b6:	6083      	str	r3, [r0, #8]
 80005b8:	8181      	strh	r1, [r0, #12]
 80005ba:	6643      	str	r3, [r0, #100]	; 0x64
 80005bc:	81c2      	strh	r2, [r0, #14]
 80005be:	6183      	str	r3, [r0, #24]
 80005c0:	4619      	mov	r1, r3
 80005c2:	2208      	movs	r2, #8
 80005c4:	305c      	adds	r0, #92	; 0x5c
 80005c6:	f7ff ffcf 	bl	8000568 <memset>
 80005ca:	4b05      	ldr	r3, [pc, #20]	; (80005e0 <std+0x38>)
 80005cc:	6263      	str	r3, [r4, #36]	; 0x24
 80005ce:	4b05      	ldr	r3, [pc, #20]	; (80005e4 <std+0x3c>)
 80005d0:	62a3      	str	r3, [r4, #40]	; 0x28
 80005d2:	4b05      	ldr	r3, [pc, #20]	; (80005e8 <std+0x40>)
 80005d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005d6:	4b05      	ldr	r3, [pc, #20]	; (80005ec <std+0x44>)
 80005d8:	6224      	str	r4, [r4, #32]
 80005da:	6323      	str	r3, [r4, #48]	; 0x30
 80005dc:	bd10      	pop	{r4, pc}
 80005de:	bf00      	nop
 80005e0:	08000ebd 	.word	0x08000ebd
 80005e4:	08000edf 	.word	0x08000edf
 80005e8:	08000f17 	.word	0x08000f17
 80005ec:	08000f3b 	.word	0x08000f3b

080005f0 <_cleanup_r>:
 80005f0:	4901      	ldr	r1, [pc, #4]	; (80005f8 <_cleanup_r+0x8>)
 80005f2:	f000 b8af 	b.w	8000754 <_fwalk_reent>
 80005f6:	bf00      	nop
 80005f8:	08001215 	.word	0x08001215

080005fc <__sfmoreglue>:
 80005fc:	b570      	push	{r4, r5, r6, lr}
 80005fe:	2268      	movs	r2, #104	; 0x68
 8000600:	1e4d      	subs	r5, r1, #1
 8000602:	4355      	muls	r5, r2
 8000604:	460e      	mov	r6, r1
 8000606:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800060a:	f000 f8e5 	bl	80007d8 <_malloc_r>
 800060e:	4604      	mov	r4, r0
 8000610:	b140      	cbz	r0, 8000624 <__sfmoreglue+0x28>
 8000612:	2100      	movs	r1, #0
 8000614:	e9c0 1600 	strd	r1, r6, [r0]
 8000618:	300c      	adds	r0, #12
 800061a:	60a0      	str	r0, [r4, #8]
 800061c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000620:	f7ff ffa2 	bl	8000568 <memset>
 8000624:	4620      	mov	r0, r4
 8000626:	bd70      	pop	{r4, r5, r6, pc}

08000628 <__sfp_lock_acquire>:
 8000628:	4801      	ldr	r0, [pc, #4]	; (8000630 <__sfp_lock_acquire+0x8>)
 800062a:	f000 b8b3 	b.w	8000794 <__retarget_lock_acquire_recursive>
 800062e:	bf00      	nop
 8000630:	20000085 	.word	0x20000085

08000634 <__sfp_lock_release>:
 8000634:	4801      	ldr	r0, [pc, #4]	; (800063c <__sfp_lock_release+0x8>)
 8000636:	f000 b8ae 	b.w	8000796 <__retarget_lock_release_recursive>
 800063a:	bf00      	nop
 800063c:	20000085 	.word	0x20000085

08000640 <__sinit_lock_acquire>:
 8000640:	4801      	ldr	r0, [pc, #4]	; (8000648 <__sinit_lock_acquire+0x8>)
 8000642:	f000 b8a7 	b.w	8000794 <__retarget_lock_acquire_recursive>
 8000646:	bf00      	nop
 8000648:	20000086 	.word	0x20000086

0800064c <__sinit_lock_release>:
 800064c:	4801      	ldr	r0, [pc, #4]	; (8000654 <__sinit_lock_release+0x8>)
 800064e:	f000 b8a2 	b.w	8000796 <__retarget_lock_release_recursive>
 8000652:	bf00      	nop
 8000654:	20000086 	.word	0x20000086

08000658 <__sinit>:
 8000658:	b510      	push	{r4, lr}
 800065a:	4604      	mov	r4, r0
 800065c:	f7ff fff0 	bl	8000640 <__sinit_lock_acquire>
 8000660:	69a3      	ldr	r3, [r4, #24]
 8000662:	b11b      	cbz	r3, 800066c <__sinit+0x14>
 8000664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000668:	f7ff bff0 	b.w	800064c <__sinit_lock_release>
 800066c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000670:	6523      	str	r3, [r4, #80]	; 0x50
 8000672:	4b13      	ldr	r3, [pc, #76]	; (80006c0 <__sinit+0x68>)
 8000674:	4a13      	ldr	r2, [pc, #76]	; (80006c4 <__sinit+0x6c>)
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	62a2      	str	r2, [r4, #40]	; 0x28
 800067a:	42a3      	cmp	r3, r4
 800067c:	bf04      	itt	eq
 800067e:	2301      	moveq	r3, #1
 8000680:	61a3      	streq	r3, [r4, #24]
 8000682:	4620      	mov	r0, r4
 8000684:	f000 f820 	bl	80006c8 <__sfp>
 8000688:	6060      	str	r0, [r4, #4]
 800068a:	4620      	mov	r0, r4
 800068c:	f000 f81c 	bl	80006c8 <__sfp>
 8000690:	60a0      	str	r0, [r4, #8]
 8000692:	4620      	mov	r0, r4
 8000694:	f000 f818 	bl	80006c8 <__sfp>
 8000698:	2200      	movs	r2, #0
 800069a:	60e0      	str	r0, [r4, #12]
 800069c:	2104      	movs	r1, #4
 800069e:	6860      	ldr	r0, [r4, #4]
 80006a0:	f7ff ff82 	bl	80005a8 <std>
 80006a4:	68a0      	ldr	r0, [r4, #8]
 80006a6:	2201      	movs	r2, #1
 80006a8:	2109      	movs	r1, #9
 80006aa:	f7ff ff7d 	bl	80005a8 <std>
 80006ae:	68e0      	ldr	r0, [r4, #12]
 80006b0:	2202      	movs	r2, #2
 80006b2:	2112      	movs	r1, #18
 80006b4:	f7ff ff78 	bl	80005a8 <std>
 80006b8:	2301      	movs	r3, #1
 80006ba:	61a3      	str	r3, [r4, #24]
 80006bc:	e7d2      	b.n	8000664 <__sinit+0xc>
 80006be:	bf00      	nop
 80006c0:	080014c4 	.word	0x080014c4
 80006c4:	080005f1 	.word	0x080005f1

080006c8 <__sfp>:
 80006c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ca:	4607      	mov	r7, r0
 80006cc:	f7ff ffac 	bl	8000628 <__sfp_lock_acquire>
 80006d0:	4b1e      	ldr	r3, [pc, #120]	; (800074c <__sfp+0x84>)
 80006d2:	681e      	ldr	r6, [r3, #0]
 80006d4:	69b3      	ldr	r3, [r6, #24]
 80006d6:	b913      	cbnz	r3, 80006de <__sfp+0x16>
 80006d8:	4630      	mov	r0, r6
 80006da:	f7ff ffbd 	bl	8000658 <__sinit>
 80006de:	3648      	adds	r6, #72	; 0x48
 80006e0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80006e4:	3b01      	subs	r3, #1
 80006e6:	d503      	bpl.n	80006f0 <__sfp+0x28>
 80006e8:	6833      	ldr	r3, [r6, #0]
 80006ea:	b30b      	cbz	r3, 8000730 <__sfp+0x68>
 80006ec:	6836      	ldr	r6, [r6, #0]
 80006ee:	e7f7      	b.n	80006e0 <__sfp+0x18>
 80006f0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80006f4:	b9d5      	cbnz	r5, 800072c <__sfp+0x64>
 80006f6:	4b16      	ldr	r3, [pc, #88]	; (8000750 <__sfp+0x88>)
 80006f8:	60e3      	str	r3, [r4, #12]
 80006fa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80006fe:	6665      	str	r5, [r4, #100]	; 0x64
 8000700:	f000 f847 	bl	8000792 <__retarget_lock_init_recursive>
 8000704:	f7ff ff96 	bl	8000634 <__sfp_lock_release>
 8000708:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800070c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000710:	6025      	str	r5, [r4, #0]
 8000712:	61a5      	str	r5, [r4, #24]
 8000714:	2208      	movs	r2, #8
 8000716:	4629      	mov	r1, r5
 8000718:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800071c:	f7ff ff24 	bl	8000568 <memset>
 8000720:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000724:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000728:	4620      	mov	r0, r4
 800072a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800072c:	3468      	adds	r4, #104	; 0x68
 800072e:	e7d9      	b.n	80006e4 <__sfp+0x1c>
 8000730:	2104      	movs	r1, #4
 8000732:	4638      	mov	r0, r7
 8000734:	f7ff ff62 	bl	80005fc <__sfmoreglue>
 8000738:	4604      	mov	r4, r0
 800073a:	6030      	str	r0, [r6, #0]
 800073c:	2800      	cmp	r0, #0
 800073e:	d1d5      	bne.n	80006ec <__sfp+0x24>
 8000740:	f7ff ff78 	bl	8000634 <__sfp_lock_release>
 8000744:	230c      	movs	r3, #12
 8000746:	603b      	str	r3, [r7, #0]
 8000748:	e7ee      	b.n	8000728 <__sfp+0x60>
 800074a:	bf00      	nop
 800074c:	080014c4 	.word	0x080014c4
 8000750:	ffff0001 	.word	0xffff0001

08000754 <_fwalk_reent>:
 8000754:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000758:	4606      	mov	r6, r0
 800075a:	4688      	mov	r8, r1
 800075c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000760:	2700      	movs	r7, #0
 8000762:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000766:	f1b9 0901 	subs.w	r9, r9, #1
 800076a:	d505      	bpl.n	8000778 <_fwalk_reent+0x24>
 800076c:	6824      	ldr	r4, [r4, #0]
 800076e:	2c00      	cmp	r4, #0
 8000770:	d1f7      	bne.n	8000762 <_fwalk_reent+0xe>
 8000772:	4638      	mov	r0, r7
 8000774:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000778:	89ab      	ldrh	r3, [r5, #12]
 800077a:	2b01      	cmp	r3, #1
 800077c:	d907      	bls.n	800078e <_fwalk_reent+0x3a>
 800077e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000782:	3301      	adds	r3, #1
 8000784:	d003      	beq.n	800078e <_fwalk_reent+0x3a>
 8000786:	4629      	mov	r1, r5
 8000788:	4630      	mov	r0, r6
 800078a:	47c0      	blx	r8
 800078c:	4307      	orrs	r7, r0
 800078e:	3568      	adds	r5, #104	; 0x68
 8000790:	e7e9      	b.n	8000766 <_fwalk_reent+0x12>

08000792 <__retarget_lock_init_recursive>:
 8000792:	4770      	bx	lr

08000794 <__retarget_lock_acquire_recursive>:
 8000794:	4770      	bx	lr

08000796 <__retarget_lock_release_recursive>:
 8000796:	4770      	bx	lr

08000798 <sbrk_aligned>:
 8000798:	b570      	push	{r4, r5, r6, lr}
 800079a:	4e0e      	ldr	r6, [pc, #56]	; (80007d4 <sbrk_aligned+0x3c>)
 800079c:	460c      	mov	r4, r1
 800079e:	6831      	ldr	r1, [r6, #0]
 80007a0:	4605      	mov	r5, r0
 80007a2:	b911      	cbnz	r1, 80007aa <sbrk_aligned+0x12>
 80007a4:	f000 fb7a 	bl	8000e9c <_sbrk_r>
 80007a8:	6030      	str	r0, [r6, #0]
 80007aa:	4621      	mov	r1, r4
 80007ac:	4628      	mov	r0, r5
 80007ae:	f000 fb75 	bl	8000e9c <_sbrk_r>
 80007b2:	1c43      	adds	r3, r0, #1
 80007b4:	d00a      	beq.n	80007cc <sbrk_aligned+0x34>
 80007b6:	1cc4      	adds	r4, r0, #3
 80007b8:	f024 0403 	bic.w	r4, r4, #3
 80007bc:	42a0      	cmp	r0, r4
 80007be:	d007      	beq.n	80007d0 <sbrk_aligned+0x38>
 80007c0:	1a21      	subs	r1, r4, r0
 80007c2:	4628      	mov	r0, r5
 80007c4:	f000 fb6a 	bl	8000e9c <_sbrk_r>
 80007c8:	3001      	adds	r0, #1
 80007ca:	d101      	bne.n	80007d0 <sbrk_aligned+0x38>
 80007cc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80007d0:	4620      	mov	r0, r4
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	2000008c 	.word	0x2000008c

080007d8 <_malloc_r>:
 80007d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007dc:	1ccd      	adds	r5, r1, #3
 80007de:	f025 0503 	bic.w	r5, r5, #3
 80007e2:	3508      	adds	r5, #8
 80007e4:	2d0c      	cmp	r5, #12
 80007e6:	bf38      	it	cc
 80007e8:	250c      	movcc	r5, #12
 80007ea:	2d00      	cmp	r5, #0
 80007ec:	4607      	mov	r7, r0
 80007ee:	db01      	blt.n	80007f4 <_malloc_r+0x1c>
 80007f0:	42a9      	cmp	r1, r5
 80007f2:	d905      	bls.n	8000800 <_malloc_r+0x28>
 80007f4:	230c      	movs	r3, #12
 80007f6:	603b      	str	r3, [r7, #0]
 80007f8:	2600      	movs	r6, #0
 80007fa:	4630      	mov	r0, r6
 80007fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000800:	4e2e      	ldr	r6, [pc, #184]	; (80008bc <_malloc_r+0xe4>)
 8000802:	f000 fdbb 	bl	800137c <__malloc_lock>
 8000806:	6833      	ldr	r3, [r6, #0]
 8000808:	461c      	mov	r4, r3
 800080a:	bb34      	cbnz	r4, 800085a <_malloc_r+0x82>
 800080c:	4629      	mov	r1, r5
 800080e:	4638      	mov	r0, r7
 8000810:	f7ff ffc2 	bl	8000798 <sbrk_aligned>
 8000814:	1c43      	adds	r3, r0, #1
 8000816:	4604      	mov	r4, r0
 8000818:	d14d      	bne.n	80008b6 <_malloc_r+0xde>
 800081a:	6834      	ldr	r4, [r6, #0]
 800081c:	4626      	mov	r6, r4
 800081e:	2e00      	cmp	r6, #0
 8000820:	d140      	bne.n	80008a4 <_malloc_r+0xcc>
 8000822:	6823      	ldr	r3, [r4, #0]
 8000824:	4631      	mov	r1, r6
 8000826:	4638      	mov	r0, r7
 8000828:	eb04 0803 	add.w	r8, r4, r3
 800082c:	f000 fb36 	bl	8000e9c <_sbrk_r>
 8000830:	4580      	cmp	r8, r0
 8000832:	d13a      	bne.n	80008aa <_malloc_r+0xd2>
 8000834:	6821      	ldr	r1, [r4, #0]
 8000836:	3503      	adds	r5, #3
 8000838:	1a6d      	subs	r5, r5, r1
 800083a:	f025 0503 	bic.w	r5, r5, #3
 800083e:	3508      	adds	r5, #8
 8000840:	2d0c      	cmp	r5, #12
 8000842:	bf38      	it	cc
 8000844:	250c      	movcc	r5, #12
 8000846:	4629      	mov	r1, r5
 8000848:	4638      	mov	r0, r7
 800084a:	f7ff ffa5 	bl	8000798 <sbrk_aligned>
 800084e:	3001      	adds	r0, #1
 8000850:	d02b      	beq.n	80008aa <_malloc_r+0xd2>
 8000852:	6823      	ldr	r3, [r4, #0]
 8000854:	442b      	add	r3, r5
 8000856:	6023      	str	r3, [r4, #0]
 8000858:	e00e      	b.n	8000878 <_malloc_r+0xa0>
 800085a:	6822      	ldr	r2, [r4, #0]
 800085c:	1b52      	subs	r2, r2, r5
 800085e:	d41e      	bmi.n	800089e <_malloc_r+0xc6>
 8000860:	2a0b      	cmp	r2, #11
 8000862:	d916      	bls.n	8000892 <_malloc_r+0xba>
 8000864:	1961      	adds	r1, r4, r5
 8000866:	42a3      	cmp	r3, r4
 8000868:	6025      	str	r5, [r4, #0]
 800086a:	bf18      	it	ne
 800086c:	6059      	strne	r1, [r3, #4]
 800086e:	6863      	ldr	r3, [r4, #4]
 8000870:	bf08      	it	eq
 8000872:	6031      	streq	r1, [r6, #0]
 8000874:	5162      	str	r2, [r4, r5]
 8000876:	604b      	str	r3, [r1, #4]
 8000878:	4638      	mov	r0, r7
 800087a:	f104 060b 	add.w	r6, r4, #11
 800087e:	f000 fd83 	bl	8001388 <__malloc_unlock>
 8000882:	f026 0607 	bic.w	r6, r6, #7
 8000886:	1d23      	adds	r3, r4, #4
 8000888:	1af2      	subs	r2, r6, r3
 800088a:	d0b6      	beq.n	80007fa <_malloc_r+0x22>
 800088c:	1b9b      	subs	r3, r3, r6
 800088e:	50a3      	str	r3, [r4, r2]
 8000890:	e7b3      	b.n	80007fa <_malloc_r+0x22>
 8000892:	6862      	ldr	r2, [r4, #4]
 8000894:	42a3      	cmp	r3, r4
 8000896:	bf0c      	ite	eq
 8000898:	6032      	streq	r2, [r6, #0]
 800089a:	605a      	strne	r2, [r3, #4]
 800089c:	e7ec      	b.n	8000878 <_malloc_r+0xa0>
 800089e:	4623      	mov	r3, r4
 80008a0:	6864      	ldr	r4, [r4, #4]
 80008a2:	e7b2      	b.n	800080a <_malloc_r+0x32>
 80008a4:	4634      	mov	r4, r6
 80008a6:	6876      	ldr	r6, [r6, #4]
 80008a8:	e7b9      	b.n	800081e <_malloc_r+0x46>
 80008aa:	230c      	movs	r3, #12
 80008ac:	603b      	str	r3, [r7, #0]
 80008ae:	4638      	mov	r0, r7
 80008b0:	f000 fd6a 	bl	8001388 <__malloc_unlock>
 80008b4:	e7a1      	b.n	80007fa <_malloc_r+0x22>
 80008b6:	6025      	str	r5, [r4, #0]
 80008b8:	e7de      	b.n	8000878 <_malloc_r+0xa0>
 80008ba:	bf00      	nop
 80008bc:	20000088 	.word	0x20000088

080008c0 <__sfputc_r>:
 80008c0:	6893      	ldr	r3, [r2, #8]
 80008c2:	3b01      	subs	r3, #1
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	b410      	push	{r4}
 80008c8:	6093      	str	r3, [r2, #8]
 80008ca:	da08      	bge.n	80008de <__sfputc_r+0x1e>
 80008cc:	6994      	ldr	r4, [r2, #24]
 80008ce:	42a3      	cmp	r3, r4
 80008d0:	db01      	blt.n	80008d6 <__sfputc_r+0x16>
 80008d2:	290a      	cmp	r1, #10
 80008d4:	d103      	bne.n	80008de <__sfputc_r+0x1e>
 80008d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008da:	f000 bb33 	b.w	8000f44 <__swbuf_r>
 80008de:	6813      	ldr	r3, [r2, #0]
 80008e0:	1c58      	adds	r0, r3, #1
 80008e2:	6010      	str	r0, [r2, #0]
 80008e4:	7019      	strb	r1, [r3, #0]
 80008e6:	4608      	mov	r0, r1
 80008e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008ec:	4770      	bx	lr

080008ee <__sfputs_r>:
 80008ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f0:	4606      	mov	r6, r0
 80008f2:	460f      	mov	r7, r1
 80008f4:	4614      	mov	r4, r2
 80008f6:	18d5      	adds	r5, r2, r3
 80008f8:	42ac      	cmp	r4, r5
 80008fa:	d101      	bne.n	8000900 <__sfputs_r+0x12>
 80008fc:	2000      	movs	r0, #0
 80008fe:	e007      	b.n	8000910 <__sfputs_r+0x22>
 8000900:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000904:	463a      	mov	r2, r7
 8000906:	4630      	mov	r0, r6
 8000908:	f7ff ffda 	bl	80008c0 <__sfputc_r>
 800090c:	1c43      	adds	r3, r0, #1
 800090e:	d1f3      	bne.n	80008f8 <__sfputs_r+0xa>
 8000910:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000914 <_vfiprintf_r>:
 8000914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000918:	460d      	mov	r5, r1
 800091a:	b09d      	sub	sp, #116	; 0x74
 800091c:	4614      	mov	r4, r2
 800091e:	4698      	mov	r8, r3
 8000920:	4606      	mov	r6, r0
 8000922:	b118      	cbz	r0, 800092c <_vfiprintf_r+0x18>
 8000924:	6983      	ldr	r3, [r0, #24]
 8000926:	b90b      	cbnz	r3, 800092c <_vfiprintf_r+0x18>
 8000928:	f7ff fe96 	bl	8000658 <__sinit>
 800092c:	4b89      	ldr	r3, [pc, #548]	; (8000b54 <_vfiprintf_r+0x240>)
 800092e:	429d      	cmp	r5, r3
 8000930:	d11b      	bne.n	800096a <_vfiprintf_r+0x56>
 8000932:	6875      	ldr	r5, [r6, #4]
 8000934:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000936:	07d9      	lsls	r1, r3, #31
 8000938:	d405      	bmi.n	8000946 <_vfiprintf_r+0x32>
 800093a:	89ab      	ldrh	r3, [r5, #12]
 800093c:	059a      	lsls	r2, r3, #22
 800093e:	d402      	bmi.n	8000946 <_vfiprintf_r+0x32>
 8000940:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000942:	f7ff ff27 	bl	8000794 <__retarget_lock_acquire_recursive>
 8000946:	89ab      	ldrh	r3, [r5, #12]
 8000948:	071b      	lsls	r3, r3, #28
 800094a:	d501      	bpl.n	8000950 <_vfiprintf_r+0x3c>
 800094c:	692b      	ldr	r3, [r5, #16]
 800094e:	b9eb      	cbnz	r3, 800098c <_vfiprintf_r+0x78>
 8000950:	4629      	mov	r1, r5
 8000952:	4630      	mov	r0, r6
 8000954:	f000 fb5a 	bl	800100c <__swsetup_r>
 8000958:	b1c0      	cbz	r0, 800098c <_vfiprintf_r+0x78>
 800095a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800095c:	07dc      	lsls	r4, r3, #31
 800095e:	d50e      	bpl.n	800097e <_vfiprintf_r+0x6a>
 8000960:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000964:	b01d      	add	sp, #116	; 0x74
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	4b7b      	ldr	r3, [pc, #492]	; (8000b58 <_vfiprintf_r+0x244>)
 800096c:	429d      	cmp	r5, r3
 800096e:	d101      	bne.n	8000974 <_vfiprintf_r+0x60>
 8000970:	68b5      	ldr	r5, [r6, #8]
 8000972:	e7df      	b.n	8000934 <_vfiprintf_r+0x20>
 8000974:	4b79      	ldr	r3, [pc, #484]	; (8000b5c <_vfiprintf_r+0x248>)
 8000976:	429d      	cmp	r5, r3
 8000978:	bf08      	it	eq
 800097a:	68f5      	ldreq	r5, [r6, #12]
 800097c:	e7da      	b.n	8000934 <_vfiprintf_r+0x20>
 800097e:	89ab      	ldrh	r3, [r5, #12]
 8000980:	0598      	lsls	r0, r3, #22
 8000982:	d4ed      	bmi.n	8000960 <_vfiprintf_r+0x4c>
 8000984:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000986:	f7ff ff06 	bl	8000796 <__retarget_lock_release_recursive>
 800098a:	e7e9      	b.n	8000960 <_vfiprintf_r+0x4c>
 800098c:	2300      	movs	r3, #0
 800098e:	9309      	str	r3, [sp, #36]	; 0x24
 8000990:	2320      	movs	r3, #32
 8000992:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000996:	f8cd 800c 	str.w	r8, [sp, #12]
 800099a:	2330      	movs	r3, #48	; 0x30
 800099c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b60 <_vfiprintf_r+0x24c>
 80009a0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009a4:	f04f 0901 	mov.w	r9, #1
 80009a8:	4623      	mov	r3, r4
 80009aa:	469a      	mov	sl, r3
 80009ac:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009b0:	b10a      	cbz	r2, 80009b6 <_vfiprintf_r+0xa2>
 80009b2:	2a25      	cmp	r2, #37	; 0x25
 80009b4:	d1f9      	bne.n	80009aa <_vfiprintf_r+0x96>
 80009b6:	ebba 0b04 	subs.w	fp, sl, r4
 80009ba:	d00b      	beq.n	80009d4 <_vfiprintf_r+0xc0>
 80009bc:	465b      	mov	r3, fp
 80009be:	4622      	mov	r2, r4
 80009c0:	4629      	mov	r1, r5
 80009c2:	4630      	mov	r0, r6
 80009c4:	f7ff ff93 	bl	80008ee <__sfputs_r>
 80009c8:	3001      	adds	r0, #1
 80009ca:	f000 80aa 	beq.w	8000b22 <_vfiprintf_r+0x20e>
 80009ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80009d0:	445a      	add	r2, fp
 80009d2:	9209      	str	r2, [sp, #36]	; 0x24
 80009d4:	f89a 3000 	ldrb.w	r3, [sl]
 80009d8:	2b00      	cmp	r3, #0
 80009da:	f000 80a2 	beq.w	8000b22 <_vfiprintf_r+0x20e>
 80009de:	2300      	movs	r3, #0
 80009e0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80009e4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009e8:	f10a 0a01 	add.w	sl, sl, #1
 80009ec:	9304      	str	r3, [sp, #16]
 80009ee:	9307      	str	r3, [sp, #28]
 80009f0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80009f4:	931a      	str	r3, [sp, #104]	; 0x68
 80009f6:	4654      	mov	r4, sl
 80009f8:	2205      	movs	r2, #5
 80009fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009fe:	4858      	ldr	r0, [pc, #352]	; (8000b60 <_vfiprintf_r+0x24c>)
 8000a00:	f7ff fbee 	bl	80001e0 <memchr>
 8000a04:	9a04      	ldr	r2, [sp, #16]
 8000a06:	b9d8      	cbnz	r0, 8000a40 <_vfiprintf_r+0x12c>
 8000a08:	06d1      	lsls	r1, r2, #27
 8000a0a:	bf44      	itt	mi
 8000a0c:	2320      	movmi	r3, #32
 8000a0e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a12:	0713      	lsls	r3, r2, #28
 8000a14:	bf44      	itt	mi
 8000a16:	232b      	movmi	r3, #43	; 0x2b
 8000a18:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a1c:	f89a 3000 	ldrb.w	r3, [sl]
 8000a20:	2b2a      	cmp	r3, #42	; 0x2a
 8000a22:	d015      	beq.n	8000a50 <_vfiprintf_r+0x13c>
 8000a24:	9a07      	ldr	r2, [sp, #28]
 8000a26:	4654      	mov	r4, sl
 8000a28:	2000      	movs	r0, #0
 8000a2a:	f04f 0c0a 	mov.w	ip, #10
 8000a2e:	4621      	mov	r1, r4
 8000a30:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a34:	3b30      	subs	r3, #48	; 0x30
 8000a36:	2b09      	cmp	r3, #9
 8000a38:	d94e      	bls.n	8000ad8 <_vfiprintf_r+0x1c4>
 8000a3a:	b1b0      	cbz	r0, 8000a6a <_vfiprintf_r+0x156>
 8000a3c:	9207      	str	r2, [sp, #28]
 8000a3e:	e014      	b.n	8000a6a <_vfiprintf_r+0x156>
 8000a40:	eba0 0308 	sub.w	r3, r0, r8
 8000a44:	fa09 f303 	lsl.w	r3, r9, r3
 8000a48:	4313      	orrs	r3, r2
 8000a4a:	9304      	str	r3, [sp, #16]
 8000a4c:	46a2      	mov	sl, r4
 8000a4e:	e7d2      	b.n	80009f6 <_vfiprintf_r+0xe2>
 8000a50:	9b03      	ldr	r3, [sp, #12]
 8000a52:	1d19      	adds	r1, r3, #4
 8000a54:	681b      	ldr	r3, [r3, #0]
 8000a56:	9103      	str	r1, [sp, #12]
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	bfbb      	ittet	lt
 8000a5c:	425b      	neglt	r3, r3
 8000a5e:	f042 0202 	orrlt.w	r2, r2, #2
 8000a62:	9307      	strge	r3, [sp, #28]
 8000a64:	9307      	strlt	r3, [sp, #28]
 8000a66:	bfb8      	it	lt
 8000a68:	9204      	strlt	r2, [sp, #16]
 8000a6a:	7823      	ldrb	r3, [r4, #0]
 8000a6c:	2b2e      	cmp	r3, #46	; 0x2e
 8000a6e:	d10c      	bne.n	8000a8a <_vfiprintf_r+0x176>
 8000a70:	7863      	ldrb	r3, [r4, #1]
 8000a72:	2b2a      	cmp	r3, #42	; 0x2a
 8000a74:	d135      	bne.n	8000ae2 <_vfiprintf_r+0x1ce>
 8000a76:	9b03      	ldr	r3, [sp, #12]
 8000a78:	1d1a      	adds	r2, r3, #4
 8000a7a:	681b      	ldr	r3, [r3, #0]
 8000a7c:	9203      	str	r2, [sp, #12]
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	bfb8      	it	lt
 8000a82:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000a86:	3402      	adds	r4, #2
 8000a88:	9305      	str	r3, [sp, #20]
 8000a8a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000b70 <_vfiprintf_r+0x25c>
 8000a8e:	7821      	ldrb	r1, [r4, #0]
 8000a90:	2203      	movs	r2, #3
 8000a92:	4650      	mov	r0, sl
 8000a94:	f7ff fba4 	bl	80001e0 <memchr>
 8000a98:	b140      	cbz	r0, 8000aac <_vfiprintf_r+0x198>
 8000a9a:	2340      	movs	r3, #64	; 0x40
 8000a9c:	eba0 000a 	sub.w	r0, r0, sl
 8000aa0:	fa03 f000 	lsl.w	r0, r3, r0
 8000aa4:	9b04      	ldr	r3, [sp, #16]
 8000aa6:	4303      	orrs	r3, r0
 8000aa8:	3401      	adds	r4, #1
 8000aaa:	9304      	str	r3, [sp, #16]
 8000aac:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ab0:	482c      	ldr	r0, [pc, #176]	; (8000b64 <_vfiprintf_r+0x250>)
 8000ab2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ab6:	2206      	movs	r2, #6
 8000ab8:	f7ff fb92 	bl	80001e0 <memchr>
 8000abc:	2800      	cmp	r0, #0
 8000abe:	d03f      	beq.n	8000b40 <_vfiprintf_r+0x22c>
 8000ac0:	4b29      	ldr	r3, [pc, #164]	; (8000b68 <_vfiprintf_r+0x254>)
 8000ac2:	bb1b      	cbnz	r3, 8000b0c <_vfiprintf_r+0x1f8>
 8000ac4:	9b03      	ldr	r3, [sp, #12]
 8000ac6:	3307      	adds	r3, #7
 8000ac8:	f023 0307 	bic.w	r3, r3, #7
 8000acc:	3308      	adds	r3, #8
 8000ace:	9303      	str	r3, [sp, #12]
 8000ad0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000ad2:	443b      	add	r3, r7
 8000ad4:	9309      	str	r3, [sp, #36]	; 0x24
 8000ad6:	e767      	b.n	80009a8 <_vfiprintf_r+0x94>
 8000ad8:	fb0c 3202 	mla	r2, ip, r2, r3
 8000adc:	460c      	mov	r4, r1
 8000ade:	2001      	movs	r0, #1
 8000ae0:	e7a5      	b.n	8000a2e <_vfiprintf_r+0x11a>
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	3401      	adds	r4, #1
 8000ae6:	9305      	str	r3, [sp, #20]
 8000ae8:	4619      	mov	r1, r3
 8000aea:	f04f 0c0a 	mov.w	ip, #10
 8000aee:	4620      	mov	r0, r4
 8000af0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000af4:	3a30      	subs	r2, #48	; 0x30
 8000af6:	2a09      	cmp	r2, #9
 8000af8:	d903      	bls.n	8000b02 <_vfiprintf_r+0x1ee>
 8000afa:	2b00      	cmp	r3, #0
 8000afc:	d0c5      	beq.n	8000a8a <_vfiprintf_r+0x176>
 8000afe:	9105      	str	r1, [sp, #20]
 8000b00:	e7c3      	b.n	8000a8a <_vfiprintf_r+0x176>
 8000b02:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b06:	4604      	mov	r4, r0
 8000b08:	2301      	movs	r3, #1
 8000b0a:	e7f0      	b.n	8000aee <_vfiprintf_r+0x1da>
 8000b0c:	ab03      	add	r3, sp, #12
 8000b0e:	9300      	str	r3, [sp, #0]
 8000b10:	462a      	mov	r2, r5
 8000b12:	4b16      	ldr	r3, [pc, #88]	; (8000b6c <_vfiprintf_r+0x258>)
 8000b14:	a904      	add	r1, sp, #16
 8000b16:	4630      	mov	r0, r6
 8000b18:	f3af 8000 	nop.w
 8000b1c:	4607      	mov	r7, r0
 8000b1e:	1c78      	adds	r0, r7, #1
 8000b20:	d1d6      	bne.n	8000ad0 <_vfiprintf_r+0x1bc>
 8000b22:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b24:	07d9      	lsls	r1, r3, #31
 8000b26:	d405      	bmi.n	8000b34 <_vfiprintf_r+0x220>
 8000b28:	89ab      	ldrh	r3, [r5, #12]
 8000b2a:	059a      	lsls	r2, r3, #22
 8000b2c:	d402      	bmi.n	8000b34 <_vfiprintf_r+0x220>
 8000b2e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b30:	f7ff fe31 	bl	8000796 <__retarget_lock_release_recursive>
 8000b34:	89ab      	ldrh	r3, [r5, #12]
 8000b36:	065b      	lsls	r3, r3, #25
 8000b38:	f53f af12 	bmi.w	8000960 <_vfiprintf_r+0x4c>
 8000b3c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b3e:	e711      	b.n	8000964 <_vfiprintf_r+0x50>
 8000b40:	ab03      	add	r3, sp, #12
 8000b42:	9300      	str	r3, [sp, #0]
 8000b44:	462a      	mov	r2, r5
 8000b46:	4b09      	ldr	r3, [pc, #36]	; (8000b6c <_vfiprintf_r+0x258>)
 8000b48:	a904      	add	r1, sp, #16
 8000b4a:	4630      	mov	r0, r6
 8000b4c:	f000 f880 	bl	8000c50 <_printf_i>
 8000b50:	e7e4      	b.n	8000b1c <_vfiprintf_r+0x208>
 8000b52:	bf00      	nop
 8000b54:	080014e8 	.word	0x080014e8
 8000b58:	08001508 	.word	0x08001508
 8000b5c:	080014c8 	.word	0x080014c8
 8000b60:	08001528 	.word	0x08001528
 8000b64:	08001532 	.word	0x08001532
 8000b68:	00000000 	.word	0x00000000
 8000b6c:	080008ef 	.word	0x080008ef
 8000b70:	0800152e 	.word	0x0800152e

08000b74 <_printf_common>:
 8000b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b78:	4616      	mov	r6, r2
 8000b7a:	4699      	mov	r9, r3
 8000b7c:	688a      	ldr	r2, [r1, #8]
 8000b7e:	690b      	ldr	r3, [r1, #16]
 8000b80:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b84:	4293      	cmp	r3, r2
 8000b86:	bfb8      	it	lt
 8000b88:	4613      	movlt	r3, r2
 8000b8a:	6033      	str	r3, [r6, #0]
 8000b8c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b90:	4607      	mov	r7, r0
 8000b92:	460c      	mov	r4, r1
 8000b94:	b10a      	cbz	r2, 8000b9a <_printf_common+0x26>
 8000b96:	3301      	adds	r3, #1
 8000b98:	6033      	str	r3, [r6, #0]
 8000b9a:	6823      	ldr	r3, [r4, #0]
 8000b9c:	0699      	lsls	r1, r3, #26
 8000b9e:	bf42      	ittt	mi
 8000ba0:	6833      	ldrmi	r3, [r6, #0]
 8000ba2:	3302      	addmi	r3, #2
 8000ba4:	6033      	strmi	r3, [r6, #0]
 8000ba6:	6825      	ldr	r5, [r4, #0]
 8000ba8:	f015 0506 	ands.w	r5, r5, #6
 8000bac:	d106      	bne.n	8000bbc <_printf_common+0x48>
 8000bae:	f104 0a19 	add.w	sl, r4, #25
 8000bb2:	68e3      	ldr	r3, [r4, #12]
 8000bb4:	6832      	ldr	r2, [r6, #0]
 8000bb6:	1a9b      	subs	r3, r3, r2
 8000bb8:	42ab      	cmp	r3, r5
 8000bba:	dc26      	bgt.n	8000c0a <_printf_common+0x96>
 8000bbc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bc0:	1e13      	subs	r3, r2, #0
 8000bc2:	6822      	ldr	r2, [r4, #0]
 8000bc4:	bf18      	it	ne
 8000bc6:	2301      	movne	r3, #1
 8000bc8:	0692      	lsls	r2, r2, #26
 8000bca:	d42b      	bmi.n	8000c24 <_printf_common+0xb0>
 8000bcc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bd0:	4649      	mov	r1, r9
 8000bd2:	4638      	mov	r0, r7
 8000bd4:	47c0      	blx	r8
 8000bd6:	3001      	adds	r0, #1
 8000bd8:	d01e      	beq.n	8000c18 <_printf_common+0xa4>
 8000bda:	6823      	ldr	r3, [r4, #0]
 8000bdc:	68e5      	ldr	r5, [r4, #12]
 8000bde:	6832      	ldr	r2, [r6, #0]
 8000be0:	f003 0306 	and.w	r3, r3, #6
 8000be4:	2b04      	cmp	r3, #4
 8000be6:	bf08      	it	eq
 8000be8:	1aad      	subeq	r5, r5, r2
 8000bea:	68a3      	ldr	r3, [r4, #8]
 8000bec:	6922      	ldr	r2, [r4, #16]
 8000bee:	bf0c      	ite	eq
 8000bf0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bf4:	2500      	movne	r5, #0
 8000bf6:	4293      	cmp	r3, r2
 8000bf8:	bfc4      	itt	gt
 8000bfa:	1a9b      	subgt	r3, r3, r2
 8000bfc:	18ed      	addgt	r5, r5, r3
 8000bfe:	2600      	movs	r6, #0
 8000c00:	341a      	adds	r4, #26
 8000c02:	42b5      	cmp	r5, r6
 8000c04:	d11a      	bne.n	8000c3c <_printf_common+0xc8>
 8000c06:	2000      	movs	r0, #0
 8000c08:	e008      	b.n	8000c1c <_printf_common+0xa8>
 8000c0a:	2301      	movs	r3, #1
 8000c0c:	4652      	mov	r2, sl
 8000c0e:	4649      	mov	r1, r9
 8000c10:	4638      	mov	r0, r7
 8000c12:	47c0      	blx	r8
 8000c14:	3001      	adds	r0, #1
 8000c16:	d103      	bne.n	8000c20 <_printf_common+0xac>
 8000c18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c20:	3501      	adds	r5, #1
 8000c22:	e7c6      	b.n	8000bb2 <_printf_common+0x3e>
 8000c24:	18e1      	adds	r1, r4, r3
 8000c26:	1c5a      	adds	r2, r3, #1
 8000c28:	2030      	movs	r0, #48	; 0x30
 8000c2a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c2e:	4422      	add	r2, r4
 8000c30:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c34:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c38:	3302      	adds	r3, #2
 8000c3a:	e7c7      	b.n	8000bcc <_printf_common+0x58>
 8000c3c:	2301      	movs	r3, #1
 8000c3e:	4622      	mov	r2, r4
 8000c40:	4649      	mov	r1, r9
 8000c42:	4638      	mov	r0, r7
 8000c44:	47c0      	blx	r8
 8000c46:	3001      	adds	r0, #1
 8000c48:	d0e6      	beq.n	8000c18 <_printf_common+0xa4>
 8000c4a:	3601      	adds	r6, #1
 8000c4c:	e7d9      	b.n	8000c02 <_printf_common+0x8e>
	...

08000c50 <_printf_i>:
 8000c50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c54:	7e0f      	ldrb	r7, [r1, #24]
 8000c56:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c58:	2f78      	cmp	r7, #120	; 0x78
 8000c5a:	4691      	mov	r9, r2
 8000c5c:	4680      	mov	r8, r0
 8000c5e:	460c      	mov	r4, r1
 8000c60:	469a      	mov	sl, r3
 8000c62:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c66:	d807      	bhi.n	8000c78 <_printf_i+0x28>
 8000c68:	2f62      	cmp	r7, #98	; 0x62
 8000c6a:	d80a      	bhi.n	8000c82 <_printf_i+0x32>
 8000c6c:	2f00      	cmp	r7, #0
 8000c6e:	f000 80d8 	beq.w	8000e22 <_printf_i+0x1d2>
 8000c72:	2f58      	cmp	r7, #88	; 0x58
 8000c74:	f000 80a3 	beq.w	8000dbe <_printf_i+0x16e>
 8000c78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c7c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c80:	e03a      	b.n	8000cf8 <_printf_i+0xa8>
 8000c82:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000c86:	2b15      	cmp	r3, #21
 8000c88:	d8f6      	bhi.n	8000c78 <_printf_i+0x28>
 8000c8a:	a101      	add	r1, pc, #4	; (adr r1, 8000c90 <_printf_i+0x40>)
 8000c8c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c90:	08000ce9 	.word	0x08000ce9
 8000c94:	08000cfd 	.word	0x08000cfd
 8000c98:	08000c79 	.word	0x08000c79
 8000c9c:	08000c79 	.word	0x08000c79
 8000ca0:	08000c79 	.word	0x08000c79
 8000ca4:	08000c79 	.word	0x08000c79
 8000ca8:	08000cfd 	.word	0x08000cfd
 8000cac:	08000c79 	.word	0x08000c79
 8000cb0:	08000c79 	.word	0x08000c79
 8000cb4:	08000c79 	.word	0x08000c79
 8000cb8:	08000c79 	.word	0x08000c79
 8000cbc:	08000e09 	.word	0x08000e09
 8000cc0:	08000d2d 	.word	0x08000d2d
 8000cc4:	08000deb 	.word	0x08000deb
 8000cc8:	08000c79 	.word	0x08000c79
 8000ccc:	08000c79 	.word	0x08000c79
 8000cd0:	08000e2b 	.word	0x08000e2b
 8000cd4:	08000c79 	.word	0x08000c79
 8000cd8:	08000d2d 	.word	0x08000d2d
 8000cdc:	08000c79 	.word	0x08000c79
 8000ce0:	08000c79 	.word	0x08000c79
 8000ce4:	08000df3 	.word	0x08000df3
 8000ce8:	682b      	ldr	r3, [r5, #0]
 8000cea:	1d1a      	adds	r2, r3, #4
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	602a      	str	r2, [r5, #0]
 8000cf0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cf4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000cf8:	2301      	movs	r3, #1
 8000cfa:	e0a3      	b.n	8000e44 <_printf_i+0x1f4>
 8000cfc:	6820      	ldr	r0, [r4, #0]
 8000cfe:	6829      	ldr	r1, [r5, #0]
 8000d00:	0606      	lsls	r6, r0, #24
 8000d02:	f101 0304 	add.w	r3, r1, #4
 8000d06:	d50a      	bpl.n	8000d1e <_printf_i+0xce>
 8000d08:	680e      	ldr	r6, [r1, #0]
 8000d0a:	602b      	str	r3, [r5, #0]
 8000d0c:	2e00      	cmp	r6, #0
 8000d0e:	da03      	bge.n	8000d18 <_printf_i+0xc8>
 8000d10:	232d      	movs	r3, #45	; 0x2d
 8000d12:	4276      	negs	r6, r6
 8000d14:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d18:	485e      	ldr	r0, [pc, #376]	; (8000e94 <_printf_i+0x244>)
 8000d1a:	230a      	movs	r3, #10
 8000d1c:	e019      	b.n	8000d52 <_printf_i+0x102>
 8000d1e:	680e      	ldr	r6, [r1, #0]
 8000d20:	602b      	str	r3, [r5, #0]
 8000d22:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d26:	bf18      	it	ne
 8000d28:	b236      	sxthne	r6, r6
 8000d2a:	e7ef      	b.n	8000d0c <_printf_i+0xbc>
 8000d2c:	682b      	ldr	r3, [r5, #0]
 8000d2e:	6820      	ldr	r0, [r4, #0]
 8000d30:	1d19      	adds	r1, r3, #4
 8000d32:	6029      	str	r1, [r5, #0]
 8000d34:	0601      	lsls	r1, r0, #24
 8000d36:	d501      	bpl.n	8000d3c <_printf_i+0xec>
 8000d38:	681e      	ldr	r6, [r3, #0]
 8000d3a:	e002      	b.n	8000d42 <_printf_i+0xf2>
 8000d3c:	0646      	lsls	r6, r0, #25
 8000d3e:	d5fb      	bpl.n	8000d38 <_printf_i+0xe8>
 8000d40:	881e      	ldrh	r6, [r3, #0]
 8000d42:	4854      	ldr	r0, [pc, #336]	; (8000e94 <_printf_i+0x244>)
 8000d44:	2f6f      	cmp	r7, #111	; 0x6f
 8000d46:	bf0c      	ite	eq
 8000d48:	2308      	moveq	r3, #8
 8000d4a:	230a      	movne	r3, #10
 8000d4c:	2100      	movs	r1, #0
 8000d4e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d52:	6865      	ldr	r5, [r4, #4]
 8000d54:	60a5      	str	r5, [r4, #8]
 8000d56:	2d00      	cmp	r5, #0
 8000d58:	bfa2      	ittt	ge
 8000d5a:	6821      	ldrge	r1, [r4, #0]
 8000d5c:	f021 0104 	bicge.w	r1, r1, #4
 8000d60:	6021      	strge	r1, [r4, #0]
 8000d62:	b90e      	cbnz	r6, 8000d68 <_printf_i+0x118>
 8000d64:	2d00      	cmp	r5, #0
 8000d66:	d04d      	beq.n	8000e04 <_printf_i+0x1b4>
 8000d68:	4615      	mov	r5, r2
 8000d6a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d6e:	fb03 6711 	mls	r7, r3, r1, r6
 8000d72:	5dc7      	ldrb	r7, [r0, r7]
 8000d74:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d78:	4637      	mov	r7, r6
 8000d7a:	42bb      	cmp	r3, r7
 8000d7c:	460e      	mov	r6, r1
 8000d7e:	d9f4      	bls.n	8000d6a <_printf_i+0x11a>
 8000d80:	2b08      	cmp	r3, #8
 8000d82:	d10b      	bne.n	8000d9c <_printf_i+0x14c>
 8000d84:	6823      	ldr	r3, [r4, #0]
 8000d86:	07de      	lsls	r6, r3, #31
 8000d88:	d508      	bpl.n	8000d9c <_printf_i+0x14c>
 8000d8a:	6923      	ldr	r3, [r4, #16]
 8000d8c:	6861      	ldr	r1, [r4, #4]
 8000d8e:	4299      	cmp	r1, r3
 8000d90:	bfde      	ittt	le
 8000d92:	2330      	movle	r3, #48	; 0x30
 8000d94:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000d98:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000d9c:	1b52      	subs	r2, r2, r5
 8000d9e:	6122      	str	r2, [r4, #16]
 8000da0:	f8cd a000 	str.w	sl, [sp]
 8000da4:	464b      	mov	r3, r9
 8000da6:	aa03      	add	r2, sp, #12
 8000da8:	4621      	mov	r1, r4
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff fee2 	bl	8000b74 <_printf_common>
 8000db0:	3001      	adds	r0, #1
 8000db2:	d14c      	bne.n	8000e4e <_printf_i+0x1fe>
 8000db4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000db8:	b004      	add	sp, #16
 8000dba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dbe:	4835      	ldr	r0, [pc, #212]	; (8000e94 <_printf_i+0x244>)
 8000dc0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000dc4:	6829      	ldr	r1, [r5, #0]
 8000dc6:	6823      	ldr	r3, [r4, #0]
 8000dc8:	f851 6b04 	ldr.w	r6, [r1], #4
 8000dcc:	6029      	str	r1, [r5, #0]
 8000dce:	061d      	lsls	r5, r3, #24
 8000dd0:	d514      	bpl.n	8000dfc <_printf_i+0x1ac>
 8000dd2:	07df      	lsls	r7, r3, #31
 8000dd4:	bf44      	itt	mi
 8000dd6:	f043 0320 	orrmi.w	r3, r3, #32
 8000dda:	6023      	strmi	r3, [r4, #0]
 8000ddc:	b91e      	cbnz	r6, 8000de6 <_printf_i+0x196>
 8000dde:	6823      	ldr	r3, [r4, #0]
 8000de0:	f023 0320 	bic.w	r3, r3, #32
 8000de4:	6023      	str	r3, [r4, #0]
 8000de6:	2310      	movs	r3, #16
 8000de8:	e7b0      	b.n	8000d4c <_printf_i+0xfc>
 8000dea:	6823      	ldr	r3, [r4, #0]
 8000dec:	f043 0320 	orr.w	r3, r3, #32
 8000df0:	6023      	str	r3, [r4, #0]
 8000df2:	2378      	movs	r3, #120	; 0x78
 8000df4:	4828      	ldr	r0, [pc, #160]	; (8000e98 <_printf_i+0x248>)
 8000df6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000dfa:	e7e3      	b.n	8000dc4 <_printf_i+0x174>
 8000dfc:	0659      	lsls	r1, r3, #25
 8000dfe:	bf48      	it	mi
 8000e00:	b2b6      	uxthmi	r6, r6
 8000e02:	e7e6      	b.n	8000dd2 <_printf_i+0x182>
 8000e04:	4615      	mov	r5, r2
 8000e06:	e7bb      	b.n	8000d80 <_printf_i+0x130>
 8000e08:	682b      	ldr	r3, [r5, #0]
 8000e0a:	6826      	ldr	r6, [r4, #0]
 8000e0c:	6961      	ldr	r1, [r4, #20]
 8000e0e:	1d18      	adds	r0, r3, #4
 8000e10:	6028      	str	r0, [r5, #0]
 8000e12:	0635      	lsls	r5, r6, #24
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	d501      	bpl.n	8000e1c <_printf_i+0x1cc>
 8000e18:	6019      	str	r1, [r3, #0]
 8000e1a:	e002      	b.n	8000e22 <_printf_i+0x1d2>
 8000e1c:	0670      	lsls	r0, r6, #25
 8000e1e:	d5fb      	bpl.n	8000e18 <_printf_i+0x1c8>
 8000e20:	8019      	strh	r1, [r3, #0]
 8000e22:	2300      	movs	r3, #0
 8000e24:	6123      	str	r3, [r4, #16]
 8000e26:	4615      	mov	r5, r2
 8000e28:	e7ba      	b.n	8000da0 <_printf_i+0x150>
 8000e2a:	682b      	ldr	r3, [r5, #0]
 8000e2c:	1d1a      	adds	r2, r3, #4
 8000e2e:	602a      	str	r2, [r5, #0]
 8000e30:	681d      	ldr	r5, [r3, #0]
 8000e32:	6862      	ldr	r2, [r4, #4]
 8000e34:	2100      	movs	r1, #0
 8000e36:	4628      	mov	r0, r5
 8000e38:	f7ff f9d2 	bl	80001e0 <memchr>
 8000e3c:	b108      	cbz	r0, 8000e42 <_printf_i+0x1f2>
 8000e3e:	1b40      	subs	r0, r0, r5
 8000e40:	6060      	str	r0, [r4, #4]
 8000e42:	6863      	ldr	r3, [r4, #4]
 8000e44:	6123      	str	r3, [r4, #16]
 8000e46:	2300      	movs	r3, #0
 8000e48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e4c:	e7a8      	b.n	8000da0 <_printf_i+0x150>
 8000e4e:	6923      	ldr	r3, [r4, #16]
 8000e50:	462a      	mov	r2, r5
 8000e52:	4649      	mov	r1, r9
 8000e54:	4640      	mov	r0, r8
 8000e56:	47d0      	blx	sl
 8000e58:	3001      	adds	r0, #1
 8000e5a:	d0ab      	beq.n	8000db4 <_printf_i+0x164>
 8000e5c:	6823      	ldr	r3, [r4, #0]
 8000e5e:	079b      	lsls	r3, r3, #30
 8000e60:	d413      	bmi.n	8000e8a <_printf_i+0x23a>
 8000e62:	68e0      	ldr	r0, [r4, #12]
 8000e64:	9b03      	ldr	r3, [sp, #12]
 8000e66:	4298      	cmp	r0, r3
 8000e68:	bfb8      	it	lt
 8000e6a:	4618      	movlt	r0, r3
 8000e6c:	e7a4      	b.n	8000db8 <_printf_i+0x168>
 8000e6e:	2301      	movs	r3, #1
 8000e70:	4632      	mov	r2, r6
 8000e72:	4649      	mov	r1, r9
 8000e74:	4640      	mov	r0, r8
 8000e76:	47d0      	blx	sl
 8000e78:	3001      	adds	r0, #1
 8000e7a:	d09b      	beq.n	8000db4 <_printf_i+0x164>
 8000e7c:	3501      	adds	r5, #1
 8000e7e:	68e3      	ldr	r3, [r4, #12]
 8000e80:	9903      	ldr	r1, [sp, #12]
 8000e82:	1a5b      	subs	r3, r3, r1
 8000e84:	42ab      	cmp	r3, r5
 8000e86:	dcf2      	bgt.n	8000e6e <_printf_i+0x21e>
 8000e88:	e7eb      	b.n	8000e62 <_printf_i+0x212>
 8000e8a:	2500      	movs	r5, #0
 8000e8c:	f104 0619 	add.w	r6, r4, #25
 8000e90:	e7f5      	b.n	8000e7e <_printf_i+0x22e>
 8000e92:	bf00      	nop
 8000e94:	08001539 	.word	0x08001539
 8000e98:	0800154a 	.word	0x0800154a

08000e9c <_sbrk_r>:
 8000e9c:	b538      	push	{r3, r4, r5, lr}
 8000e9e:	4d06      	ldr	r5, [pc, #24]	; (8000eb8 <_sbrk_r+0x1c>)
 8000ea0:	2300      	movs	r3, #0
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	4608      	mov	r0, r1
 8000ea6:	602b      	str	r3, [r5, #0]
 8000ea8:	f7ff fa8e 	bl	80003c8 <_sbrk>
 8000eac:	1c43      	adds	r3, r0, #1
 8000eae:	d102      	bne.n	8000eb6 <_sbrk_r+0x1a>
 8000eb0:	682b      	ldr	r3, [r5, #0]
 8000eb2:	b103      	cbz	r3, 8000eb6 <_sbrk_r+0x1a>
 8000eb4:	6023      	str	r3, [r4, #0]
 8000eb6:	bd38      	pop	{r3, r4, r5, pc}
 8000eb8:	20000090 	.word	0x20000090

08000ebc <__sread>:
 8000ebc:	b510      	push	{r4, lr}
 8000ebe:	460c      	mov	r4, r1
 8000ec0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ec4:	f000 fab2 	bl	800142c <_read_r>
 8000ec8:	2800      	cmp	r0, #0
 8000eca:	bfab      	itete	ge
 8000ecc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000ece:	89a3      	ldrhlt	r3, [r4, #12]
 8000ed0:	181b      	addge	r3, r3, r0
 8000ed2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ed6:	bfac      	ite	ge
 8000ed8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000eda:	81a3      	strhlt	r3, [r4, #12]
 8000edc:	bd10      	pop	{r4, pc}

08000ede <__swrite>:
 8000ede:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ee2:	461f      	mov	r7, r3
 8000ee4:	898b      	ldrh	r3, [r1, #12]
 8000ee6:	05db      	lsls	r3, r3, #23
 8000ee8:	4605      	mov	r5, r0
 8000eea:	460c      	mov	r4, r1
 8000eec:	4616      	mov	r6, r2
 8000eee:	d505      	bpl.n	8000efc <__swrite+0x1e>
 8000ef0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ef4:	2302      	movs	r3, #2
 8000ef6:	2200      	movs	r2, #0
 8000ef8:	f000 f9c8 	bl	800128c <_lseek_r>
 8000efc:	89a3      	ldrh	r3, [r4, #12]
 8000efe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f02:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f06:	81a3      	strh	r3, [r4, #12]
 8000f08:	4632      	mov	r2, r6
 8000f0a:	463b      	mov	r3, r7
 8000f0c:	4628      	mov	r0, r5
 8000f0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f12:	f000 b869 	b.w	8000fe8 <_write_r>

08000f16 <__sseek>:
 8000f16:	b510      	push	{r4, lr}
 8000f18:	460c      	mov	r4, r1
 8000f1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f1e:	f000 f9b5 	bl	800128c <_lseek_r>
 8000f22:	1c43      	adds	r3, r0, #1
 8000f24:	89a3      	ldrh	r3, [r4, #12]
 8000f26:	bf15      	itete	ne
 8000f28:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f2a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f2e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f32:	81a3      	strheq	r3, [r4, #12]
 8000f34:	bf18      	it	ne
 8000f36:	81a3      	strhne	r3, [r4, #12]
 8000f38:	bd10      	pop	{r4, pc}

08000f3a <__sclose>:
 8000f3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f3e:	f000 b8d3 	b.w	80010e8 <_close_r>
	...

08000f44 <__swbuf_r>:
 8000f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f46:	460e      	mov	r6, r1
 8000f48:	4614      	mov	r4, r2
 8000f4a:	4605      	mov	r5, r0
 8000f4c:	b118      	cbz	r0, 8000f56 <__swbuf_r+0x12>
 8000f4e:	6983      	ldr	r3, [r0, #24]
 8000f50:	b90b      	cbnz	r3, 8000f56 <__swbuf_r+0x12>
 8000f52:	f7ff fb81 	bl	8000658 <__sinit>
 8000f56:	4b21      	ldr	r3, [pc, #132]	; (8000fdc <__swbuf_r+0x98>)
 8000f58:	429c      	cmp	r4, r3
 8000f5a:	d12b      	bne.n	8000fb4 <__swbuf_r+0x70>
 8000f5c:	686c      	ldr	r4, [r5, #4]
 8000f5e:	69a3      	ldr	r3, [r4, #24]
 8000f60:	60a3      	str	r3, [r4, #8]
 8000f62:	89a3      	ldrh	r3, [r4, #12]
 8000f64:	071a      	lsls	r2, r3, #28
 8000f66:	d52f      	bpl.n	8000fc8 <__swbuf_r+0x84>
 8000f68:	6923      	ldr	r3, [r4, #16]
 8000f6a:	b36b      	cbz	r3, 8000fc8 <__swbuf_r+0x84>
 8000f6c:	6923      	ldr	r3, [r4, #16]
 8000f6e:	6820      	ldr	r0, [r4, #0]
 8000f70:	1ac0      	subs	r0, r0, r3
 8000f72:	6963      	ldr	r3, [r4, #20]
 8000f74:	b2f6      	uxtb	r6, r6
 8000f76:	4283      	cmp	r3, r0
 8000f78:	4637      	mov	r7, r6
 8000f7a:	dc04      	bgt.n	8000f86 <__swbuf_r+0x42>
 8000f7c:	4621      	mov	r1, r4
 8000f7e:	4628      	mov	r0, r5
 8000f80:	f000 f948 	bl	8001214 <_fflush_r>
 8000f84:	bb30      	cbnz	r0, 8000fd4 <__swbuf_r+0x90>
 8000f86:	68a3      	ldr	r3, [r4, #8]
 8000f88:	3b01      	subs	r3, #1
 8000f8a:	60a3      	str	r3, [r4, #8]
 8000f8c:	6823      	ldr	r3, [r4, #0]
 8000f8e:	1c5a      	adds	r2, r3, #1
 8000f90:	6022      	str	r2, [r4, #0]
 8000f92:	701e      	strb	r6, [r3, #0]
 8000f94:	6963      	ldr	r3, [r4, #20]
 8000f96:	3001      	adds	r0, #1
 8000f98:	4283      	cmp	r3, r0
 8000f9a:	d004      	beq.n	8000fa6 <__swbuf_r+0x62>
 8000f9c:	89a3      	ldrh	r3, [r4, #12]
 8000f9e:	07db      	lsls	r3, r3, #31
 8000fa0:	d506      	bpl.n	8000fb0 <__swbuf_r+0x6c>
 8000fa2:	2e0a      	cmp	r6, #10
 8000fa4:	d104      	bne.n	8000fb0 <__swbuf_r+0x6c>
 8000fa6:	4621      	mov	r1, r4
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f000 f933 	bl	8001214 <_fflush_r>
 8000fae:	b988      	cbnz	r0, 8000fd4 <__swbuf_r+0x90>
 8000fb0:	4638      	mov	r0, r7
 8000fb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fb4:	4b0a      	ldr	r3, [pc, #40]	; (8000fe0 <__swbuf_r+0x9c>)
 8000fb6:	429c      	cmp	r4, r3
 8000fb8:	d101      	bne.n	8000fbe <__swbuf_r+0x7a>
 8000fba:	68ac      	ldr	r4, [r5, #8]
 8000fbc:	e7cf      	b.n	8000f5e <__swbuf_r+0x1a>
 8000fbe:	4b09      	ldr	r3, [pc, #36]	; (8000fe4 <__swbuf_r+0xa0>)
 8000fc0:	429c      	cmp	r4, r3
 8000fc2:	bf08      	it	eq
 8000fc4:	68ec      	ldreq	r4, [r5, #12]
 8000fc6:	e7ca      	b.n	8000f5e <__swbuf_r+0x1a>
 8000fc8:	4621      	mov	r1, r4
 8000fca:	4628      	mov	r0, r5
 8000fcc:	f000 f81e 	bl	800100c <__swsetup_r>
 8000fd0:	2800      	cmp	r0, #0
 8000fd2:	d0cb      	beq.n	8000f6c <__swbuf_r+0x28>
 8000fd4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000fd8:	e7ea      	b.n	8000fb0 <__swbuf_r+0x6c>
 8000fda:	bf00      	nop
 8000fdc:	080014e8 	.word	0x080014e8
 8000fe0:	08001508 	.word	0x08001508
 8000fe4:	080014c8 	.word	0x080014c8

08000fe8 <_write_r>:
 8000fe8:	b538      	push	{r3, r4, r5, lr}
 8000fea:	4d07      	ldr	r5, [pc, #28]	; (8001008 <_write_r+0x20>)
 8000fec:	4604      	mov	r4, r0
 8000fee:	4608      	mov	r0, r1
 8000ff0:	4611      	mov	r1, r2
 8000ff2:	2200      	movs	r2, #0
 8000ff4:	602a      	str	r2, [r5, #0]
 8000ff6:	461a      	mov	r2, r3
 8000ff8:	f7ff f995 	bl	8000326 <_write>
 8000ffc:	1c43      	adds	r3, r0, #1
 8000ffe:	d102      	bne.n	8001006 <_write_r+0x1e>
 8001000:	682b      	ldr	r3, [r5, #0]
 8001002:	b103      	cbz	r3, 8001006 <_write_r+0x1e>
 8001004:	6023      	str	r3, [r4, #0]
 8001006:	bd38      	pop	{r3, r4, r5, pc}
 8001008:	20000090 	.word	0x20000090

0800100c <__swsetup_r>:
 800100c:	4b32      	ldr	r3, [pc, #200]	; (80010d8 <__swsetup_r+0xcc>)
 800100e:	b570      	push	{r4, r5, r6, lr}
 8001010:	681d      	ldr	r5, [r3, #0]
 8001012:	4606      	mov	r6, r0
 8001014:	460c      	mov	r4, r1
 8001016:	b125      	cbz	r5, 8001022 <__swsetup_r+0x16>
 8001018:	69ab      	ldr	r3, [r5, #24]
 800101a:	b913      	cbnz	r3, 8001022 <__swsetup_r+0x16>
 800101c:	4628      	mov	r0, r5
 800101e:	f7ff fb1b 	bl	8000658 <__sinit>
 8001022:	4b2e      	ldr	r3, [pc, #184]	; (80010dc <__swsetup_r+0xd0>)
 8001024:	429c      	cmp	r4, r3
 8001026:	d10f      	bne.n	8001048 <__swsetup_r+0x3c>
 8001028:	686c      	ldr	r4, [r5, #4]
 800102a:	89a3      	ldrh	r3, [r4, #12]
 800102c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001030:	0719      	lsls	r1, r3, #28
 8001032:	d42c      	bmi.n	800108e <__swsetup_r+0x82>
 8001034:	06dd      	lsls	r5, r3, #27
 8001036:	d411      	bmi.n	800105c <__swsetup_r+0x50>
 8001038:	2309      	movs	r3, #9
 800103a:	6033      	str	r3, [r6, #0]
 800103c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001040:	81a3      	strh	r3, [r4, #12]
 8001042:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001046:	e03e      	b.n	80010c6 <__swsetup_r+0xba>
 8001048:	4b25      	ldr	r3, [pc, #148]	; (80010e0 <__swsetup_r+0xd4>)
 800104a:	429c      	cmp	r4, r3
 800104c:	d101      	bne.n	8001052 <__swsetup_r+0x46>
 800104e:	68ac      	ldr	r4, [r5, #8]
 8001050:	e7eb      	b.n	800102a <__swsetup_r+0x1e>
 8001052:	4b24      	ldr	r3, [pc, #144]	; (80010e4 <__swsetup_r+0xd8>)
 8001054:	429c      	cmp	r4, r3
 8001056:	bf08      	it	eq
 8001058:	68ec      	ldreq	r4, [r5, #12]
 800105a:	e7e6      	b.n	800102a <__swsetup_r+0x1e>
 800105c:	0758      	lsls	r0, r3, #29
 800105e:	d512      	bpl.n	8001086 <__swsetup_r+0x7a>
 8001060:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001062:	b141      	cbz	r1, 8001076 <__swsetup_r+0x6a>
 8001064:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001068:	4299      	cmp	r1, r3
 800106a:	d002      	beq.n	8001072 <__swsetup_r+0x66>
 800106c:	4630      	mov	r0, r6
 800106e:	f000 f991 	bl	8001394 <_free_r>
 8001072:	2300      	movs	r3, #0
 8001074:	6363      	str	r3, [r4, #52]	; 0x34
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800107c:	81a3      	strh	r3, [r4, #12]
 800107e:	2300      	movs	r3, #0
 8001080:	6063      	str	r3, [r4, #4]
 8001082:	6923      	ldr	r3, [r4, #16]
 8001084:	6023      	str	r3, [r4, #0]
 8001086:	89a3      	ldrh	r3, [r4, #12]
 8001088:	f043 0308 	orr.w	r3, r3, #8
 800108c:	81a3      	strh	r3, [r4, #12]
 800108e:	6923      	ldr	r3, [r4, #16]
 8001090:	b94b      	cbnz	r3, 80010a6 <__swsetup_r+0x9a>
 8001092:	89a3      	ldrh	r3, [r4, #12]
 8001094:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001098:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800109c:	d003      	beq.n	80010a6 <__swsetup_r+0x9a>
 800109e:	4621      	mov	r1, r4
 80010a0:	4630      	mov	r0, r6
 80010a2:	f000 f92b 	bl	80012fc <__smakebuf_r>
 80010a6:	89a0      	ldrh	r0, [r4, #12]
 80010a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010ac:	f010 0301 	ands.w	r3, r0, #1
 80010b0:	d00a      	beq.n	80010c8 <__swsetup_r+0xbc>
 80010b2:	2300      	movs	r3, #0
 80010b4:	60a3      	str	r3, [r4, #8]
 80010b6:	6963      	ldr	r3, [r4, #20]
 80010b8:	425b      	negs	r3, r3
 80010ba:	61a3      	str	r3, [r4, #24]
 80010bc:	6923      	ldr	r3, [r4, #16]
 80010be:	b943      	cbnz	r3, 80010d2 <__swsetup_r+0xc6>
 80010c0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80010c4:	d1ba      	bne.n	800103c <__swsetup_r+0x30>
 80010c6:	bd70      	pop	{r4, r5, r6, pc}
 80010c8:	0781      	lsls	r1, r0, #30
 80010ca:	bf58      	it	pl
 80010cc:	6963      	ldrpl	r3, [r4, #20]
 80010ce:	60a3      	str	r3, [r4, #8]
 80010d0:	e7f4      	b.n	80010bc <__swsetup_r+0xb0>
 80010d2:	2000      	movs	r0, #0
 80010d4:	e7f7      	b.n	80010c6 <__swsetup_r+0xba>
 80010d6:	bf00      	nop
 80010d8:	20000000 	.word	0x20000000
 80010dc:	080014e8 	.word	0x080014e8
 80010e0:	08001508 	.word	0x08001508
 80010e4:	080014c8 	.word	0x080014c8

080010e8 <_close_r>:
 80010e8:	b538      	push	{r3, r4, r5, lr}
 80010ea:	4d06      	ldr	r5, [pc, #24]	; (8001104 <_close_r+0x1c>)
 80010ec:	2300      	movs	r3, #0
 80010ee:	4604      	mov	r4, r0
 80010f0:	4608      	mov	r0, r1
 80010f2:	602b      	str	r3, [r5, #0]
 80010f4:	f7ff f933 	bl	800035e <_close>
 80010f8:	1c43      	adds	r3, r0, #1
 80010fa:	d102      	bne.n	8001102 <_close_r+0x1a>
 80010fc:	682b      	ldr	r3, [r5, #0]
 80010fe:	b103      	cbz	r3, 8001102 <_close_r+0x1a>
 8001100:	6023      	str	r3, [r4, #0]
 8001102:	bd38      	pop	{r3, r4, r5, pc}
 8001104:	20000090 	.word	0x20000090

08001108 <__sflush_r>:
 8001108:	898a      	ldrh	r2, [r1, #12]
 800110a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800110e:	4605      	mov	r5, r0
 8001110:	0710      	lsls	r0, r2, #28
 8001112:	460c      	mov	r4, r1
 8001114:	d458      	bmi.n	80011c8 <__sflush_r+0xc0>
 8001116:	684b      	ldr	r3, [r1, #4]
 8001118:	2b00      	cmp	r3, #0
 800111a:	dc05      	bgt.n	8001128 <__sflush_r+0x20>
 800111c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800111e:	2b00      	cmp	r3, #0
 8001120:	dc02      	bgt.n	8001128 <__sflush_r+0x20>
 8001122:	2000      	movs	r0, #0
 8001124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001128:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800112a:	2e00      	cmp	r6, #0
 800112c:	d0f9      	beq.n	8001122 <__sflush_r+0x1a>
 800112e:	2300      	movs	r3, #0
 8001130:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001134:	682f      	ldr	r7, [r5, #0]
 8001136:	602b      	str	r3, [r5, #0]
 8001138:	d032      	beq.n	80011a0 <__sflush_r+0x98>
 800113a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800113c:	89a3      	ldrh	r3, [r4, #12]
 800113e:	075a      	lsls	r2, r3, #29
 8001140:	d505      	bpl.n	800114e <__sflush_r+0x46>
 8001142:	6863      	ldr	r3, [r4, #4]
 8001144:	1ac0      	subs	r0, r0, r3
 8001146:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001148:	b10b      	cbz	r3, 800114e <__sflush_r+0x46>
 800114a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800114c:	1ac0      	subs	r0, r0, r3
 800114e:	2300      	movs	r3, #0
 8001150:	4602      	mov	r2, r0
 8001152:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001154:	6a21      	ldr	r1, [r4, #32]
 8001156:	4628      	mov	r0, r5
 8001158:	47b0      	blx	r6
 800115a:	1c43      	adds	r3, r0, #1
 800115c:	89a3      	ldrh	r3, [r4, #12]
 800115e:	d106      	bne.n	800116e <__sflush_r+0x66>
 8001160:	6829      	ldr	r1, [r5, #0]
 8001162:	291d      	cmp	r1, #29
 8001164:	d82c      	bhi.n	80011c0 <__sflush_r+0xb8>
 8001166:	4a2a      	ldr	r2, [pc, #168]	; (8001210 <__sflush_r+0x108>)
 8001168:	40ca      	lsrs	r2, r1
 800116a:	07d6      	lsls	r6, r2, #31
 800116c:	d528      	bpl.n	80011c0 <__sflush_r+0xb8>
 800116e:	2200      	movs	r2, #0
 8001170:	6062      	str	r2, [r4, #4]
 8001172:	04d9      	lsls	r1, r3, #19
 8001174:	6922      	ldr	r2, [r4, #16]
 8001176:	6022      	str	r2, [r4, #0]
 8001178:	d504      	bpl.n	8001184 <__sflush_r+0x7c>
 800117a:	1c42      	adds	r2, r0, #1
 800117c:	d101      	bne.n	8001182 <__sflush_r+0x7a>
 800117e:	682b      	ldr	r3, [r5, #0]
 8001180:	b903      	cbnz	r3, 8001184 <__sflush_r+0x7c>
 8001182:	6560      	str	r0, [r4, #84]	; 0x54
 8001184:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001186:	602f      	str	r7, [r5, #0]
 8001188:	2900      	cmp	r1, #0
 800118a:	d0ca      	beq.n	8001122 <__sflush_r+0x1a>
 800118c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001190:	4299      	cmp	r1, r3
 8001192:	d002      	beq.n	800119a <__sflush_r+0x92>
 8001194:	4628      	mov	r0, r5
 8001196:	f000 f8fd 	bl	8001394 <_free_r>
 800119a:	2000      	movs	r0, #0
 800119c:	6360      	str	r0, [r4, #52]	; 0x34
 800119e:	e7c1      	b.n	8001124 <__sflush_r+0x1c>
 80011a0:	6a21      	ldr	r1, [r4, #32]
 80011a2:	2301      	movs	r3, #1
 80011a4:	4628      	mov	r0, r5
 80011a6:	47b0      	blx	r6
 80011a8:	1c41      	adds	r1, r0, #1
 80011aa:	d1c7      	bne.n	800113c <__sflush_r+0x34>
 80011ac:	682b      	ldr	r3, [r5, #0]
 80011ae:	2b00      	cmp	r3, #0
 80011b0:	d0c4      	beq.n	800113c <__sflush_r+0x34>
 80011b2:	2b1d      	cmp	r3, #29
 80011b4:	d001      	beq.n	80011ba <__sflush_r+0xb2>
 80011b6:	2b16      	cmp	r3, #22
 80011b8:	d101      	bne.n	80011be <__sflush_r+0xb6>
 80011ba:	602f      	str	r7, [r5, #0]
 80011bc:	e7b1      	b.n	8001122 <__sflush_r+0x1a>
 80011be:	89a3      	ldrh	r3, [r4, #12]
 80011c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011c4:	81a3      	strh	r3, [r4, #12]
 80011c6:	e7ad      	b.n	8001124 <__sflush_r+0x1c>
 80011c8:	690f      	ldr	r7, [r1, #16]
 80011ca:	2f00      	cmp	r7, #0
 80011cc:	d0a9      	beq.n	8001122 <__sflush_r+0x1a>
 80011ce:	0793      	lsls	r3, r2, #30
 80011d0:	680e      	ldr	r6, [r1, #0]
 80011d2:	bf08      	it	eq
 80011d4:	694b      	ldreq	r3, [r1, #20]
 80011d6:	600f      	str	r7, [r1, #0]
 80011d8:	bf18      	it	ne
 80011da:	2300      	movne	r3, #0
 80011dc:	eba6 0807 	sub.w	r8, r6, r7
 80011e0:	608b      	str	r3, [r1, #8]
 80011e2:	f1b8 0f00 	cmp.w	r8, #0
 80011e6:	dd9c      	ble.n	8001122 <__sflush_r+0x1a>
 80011e8:	6a21      	ldr	r1, [r4, #32]
 80011ea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011ec:	4643      	mov	r3, r8
 80011ee:	463a      	mov	r2, r7
 80011f0:	4628      	mov	r0, r5
 80011f2:	47b0      	blx	r6
 80011f4:	2800      	cmp	r0, #0
 80011f6:	dc06      	bgt.n	8001206 <__sflush_r+0xfe>
 80011f8:	89a3      	ldrh	r3, [r4, #12]
 80011fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011fe:	81a3      	strh	r3, [r4, #12]
 8001200:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001204:	e78e      	b.n	8001124 <__sflush_r+0x1c>
 8001206:	4407      	add	r7, r0
 8001208:	eba8 0800 	sub.w	r8, r8, r0
 800120c:	e7e9      	b.n	80011e2 <__sflush_r+0xda>
 800120e:	bf00      	nop
 8001210:	20400001 	.word	0x20400001

08001214 <_fflush_r>:
 8001214:	b538      	push	{r3, r4, r5, lr}
 8001216:	690b      	ldr	r3, [r1, #16]
 8001218:	4605      	mov	r5, r0
 800121a:	460c      	mov	r4, r1
 800121c:	b913      	cbnz	r3, 8001224 <_fflush_r+0x10>
 800121e:	2500      	movs	r5, #0
 8001220:	4628      	mov	r0, r5
 8001222:	bd38      	pop	{r3, r4, r5, pc}
 8001224:	b118      	cbz	r0, 800122e <_fflush_r+0x1a>
 8001226:	6983      	ldr	r3, [r0, #24]
 8001228:	b90b      	cbnz	r3, 800122e <_fflush_r+0x1a>
 800122a:	f7ff fa15 	bl	8000658 <__sinit>
 800122e:	4b14      	ldr	r3, [pc, #80]	; (8001280 <_fflush_r+0x6c>)
 8001230:	429c      	cmp	r4, r3
 8001232:	d11b      	bne.n	800126c <_fflush_r+0x58>
 8001234:	686c      	ldr	r4, [r5, #4]
 8001236:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800123a:	2b00      	cmp	r3, #0
 800123c:	d0ef      	beq.n	800121e <_fflush_r+0xa>
 800123e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001240:	07d0      	lsls	r0, r2, #31
 8001242:	d404      	bmi.n	800124e <_fflush_r+0x3a>
 8001244:	0599      	lsls	r1, r3, #22
 8001246:	d402      	bmi.n	800124e <_fflush_r+0x3a>
 8001248:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800124a:	f7ff faa3 	bl	8000794 <__retarget_lock_acquire_recursive>
 800124e:	4628      	mov	r0, r5
 8001250:	4621      	mov	r1, r4
 8001252:	f7ff ff59 	bl	8001108 <__sflush_r>
 8001256:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001258:	07da      	lsls	r2, r3, #31
 800125a:	4605      	mov	r5, r0
 800125c:	d4e0      	bmi.n	8001220 <_fflush_r+0xc>
 800125e:	89a3      	ldrh	r3, [r4, #12]
 8001260:	059b      	lsls	r3, r3, #22
 8001262:	d4dd      	bmi.n	8001220 <_fflush_r+0xc>
 8001264:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001266:	f7ff fa96 	bl	8000796 <__retarget_lock_release_recursive>
 800126a:	e7d9      	b.n	8001220 <_fflush_r+0xc>
 800126c:	4b05      	ldr	r3, [pc, #20]	; (8001284 <_fflush_r+0x70>)
 800126e:	429c      	cmp	r4, r3
 8001270:	d101      	bne.n	8001276 <_fflush_r+0x62>
 8001272:	68ac      	ldr	r4, [r5, #8]
 8001274:	e7df      	b.n	8001236 <_fflush_r+0x22>
 8001276:	4b04      	ldr	r3, [pc, #16]	; (8001288 <_fflush_r+0x74>)
 8001278:	429c      	cmp	r4, r3
 800127a:	bf08      	it	eq
 800127c:	68ec      	ldreq	r4, [r5, #12]
 800127e:	e7da      	b.n	8001236 <_fflush_r+0x22>
 8001280:	080014e8 	.word	0x080014e8
 8001284:	08001508 	.word	0x08001508
 8001288:	080014c8 	.word	0x080014c8

0800128c <_lseek_r>:
 800128c:	b538      	push	{r3, r4, r5, lr}
 800128e:	4d07      	ldr	r5, [pc, #28]	; (80012ac <_lseek_r+0x20>)
 8001290:	4604      	mov	r4, r0
 8001292:	4608      	mov	r0, r1
 8001294:	4611      	mov	r1, r2
 8001296:	2200      	movs	r2, #0
 8001298:	602a      	str	r2, [r5, #0]
 800129a:	461a      	mov	r2, r3
 800129c:	f7ff f886 	bl	80003ac <_lseek>
 80012a0:	1c43      	adds	r3, r0, #1
 80012a2:	d102      	bne.n	80012aa <_lseek_r+0x1e>
 80012a4:	682b      	ldr	r3, [r5, #0]
 80012a6:	b103      	cbz	r3, 80012aa <_lseek_r+0x1e>
 80012a8:	6023      	str	r3, [r4, #0]
 80012aa:	bd38      	pop	{r3, r4, r5, pc}
 80012ac:	20000090 	.word	0x20000090

080012b0 <__swhatbuf_r>:
 80012b0:	b570      	push	{r4, r5, r6, lr}
 80012b2:	460e      	mov	r6, r1
 80012b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012b8:	2900      	cmp	r1, #0
 80012ba:	b096      	sub	sp, #88	; 0x58
 80012bc:	4614      	mov	r4, r2
 80012be:	461d      	mov	r5, r3
 80012c0:	da08      	bge.n	80012d4 <__swhatbuf_r+0x24>
 80012c2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80012c6:	2200      	movs	r2, #0
 80012c8:	602a      	str	r2, [r5, #0]
 80012ca:	061a      	lsls	r2, r3, #24
 80012cc:	d410      	bmi.n	80012f0 <__swhatbuf_r+0x40>
 80012ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012d2:	e00e      	b.n	80012f2 <__swhatbuf_r+0x42>
 80012d4:	466a      	mov	r2, sp
 80012d6:	f000 f8bb 	bl	8001450 <_fstat_r>
 80012da:	2800      	cmp	r0, #0
 80012dc:	dbf1      	blt.n	80012c2 <__swhatbuf_r+0x12>
 80012de:	9a01      	ldr	r2, [sp, #4]
 80012e0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80012e4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80012e8:	425a      	negs	r2, r3
 80012ea:	415a      	adcs	r2, r3
 80012ec:	602a      	str	r2, [r5, #0]
 80012ee:	e7ee      	b.n	80012ce <__swhatbuf_r+0x1e>
 80012f0:	2340      	movs	r3, #64	; 0x40
 80012f2:	2000      	movs	r0, #0
 80012f4:	6023      	str	r3, [r4, #0]
 80012f6:	b016      	add	sp, #88	; 0x58
 80012f8:	bd70      	pop	{r4, r5, r6, pc}
	...

080012fc <__smakebuf_r>:
 80012fc:	898b      	ldrh	r3, [r1, #12]
 80012fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001300:	079d      	lsls	r5, r3, #30
 8001302:	4606      	mov	r6, r0
 8001304:	460c      	mov	r4, r1
 8001306:	d507      	bpl.n	8001318 <__smakebuf_r+0x1c>
 8001308:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800130c:	6023      	str	r3, [r4, #0]
 800130e:	6123      	str	r3, [r4, #16]
 8001310:	2301      	movs	r3, #1
 8001312:	6163      	str	r3, [r4, #20]
 8001314:	b002      	add	sp, #8
 8001316:	bd70      	pop	{r4, r5, r6, pc}
 8001318:	ab01      	add	r3, sp, #4
 800131a:	466a      	mov	r2, sp
 800131c:	f7ff ffc8 	bl	80012b0 <__swhatbuf_r>
 8001320:	9900      	ldr	r1, [sp, #0]
 8001322:	4605      	mov	r5, r0
 8001324:	4630      	mov	r0, r6
 8001326:	f7ff fa57 	bl	80007d8 <_malloc_r>
 800132a:	b948      	cbnz	r0, 8001340 <__smakebuf_r+0x44>
 800132c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001330:	059a      	lsls	r2, r3, #22
 8001332:	d4ef      	bmi.n	8001314 <__smakebuf_r+0x18>
 8001334:	f023 0303 	bic.w	r3, r3, #3
 8001338:	f043 0302 	orr.w	r3, r3, #2
 800133c:	81a3      	strh	r3, [r4, #12]
 800133e:	e7e3      	b.n	8001308 <__smakebuf_r+0xc>
 8001340:	4b0d      	ldr	r3, [pc, #52]	; (8001378 <__smakebuf_r+0x7c>)
 8001342:	62b3      	str	r3, [r6, #40]	; 0x28
 8001344:	89a3      	ldrh	r3, [r4, #12]
 8001346:	6020      	str	r0, [r4, #0]
 8001348:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800134c:	81a3      	strh	r3, [r4, #12]
 800134e:	9b00      	ldr	r3, [sp, #0]
 8001350:	6163      	str	r3, [r4, #20]
 8001352:	9b01      	ldr	r3, [sp, #4]
 8001354:	6120      	str	r0, [r4, #16]
 8001356:	b15b      	cbz	r3, 8001370 <__smakebuf_r+0x74>
 8001358:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800135c:	4630      	mov	r0, r6
 800135e:	f000 f889 	bl	8001474 <_isatty_r>
 8001362:	b128      	cbz	r0, 8001370 <__smakebuf_r+0x74>
 8001364:	89a3      	ldrh	r3, [r4, #12]
 8001366:	f023 0303 	bic.w	r3, r3, #3
 800136a:	f043 0301 	orr.w	r3, r3, #1
 800136e:	81a3      	strh	r3, [r4, #12]
 8001370:	89a0      	ldrh	r0, [r4, #12]
 8001372:	4305      	orrs	r5, r0
 8001374:	81a5      	strh	r5, [r4, #12]
 8001376:	e7cd      	b.n	8001314 <__smakebuf_r+0x18>
 8001378:	080005f1 	.word	0x080005f1

0800137c <__malloc_lock>:
 800137c:	4801      	ldr	r0, [pc, #4]	; (8001384 <__malloc_lock+0x8>)
 800137e:	f7ff ba09 	b.w	8000794 <__retarget_lock_acquire_recursive>
 8001382:	bf00      	nop
 8001384:	20000084 	.word	0x20000084

08001388 <__malloc_unlock>:
 8001388:	4801      	ldr	r0, [pc, #4]	; (8001390 <__malloc_unlock+0x8>)
 800138a:	f7ff ba04 	b.w	8000796 <__retarget_lock_release_recursive>
 800138e:	bf00      	nop
 8001390:	20000084 	.word	0x20000084

08001394 <_free_r>:
 8001394:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001396:	2900      	cmp	r1, #0
 8001398:	d044      	beq.n	8001424 <_free_r+0x90>
 800139a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800139e:	9001      	str	r0, [sp, #4]
 80013a0:	2b00      	cmp	r3, #0
 80013a2:	f1a1 0404 	sub.w	r4, r1, #4
 80013a6:	bfb8      	it	lt
 80013a8:	18e4      	addlt	r4, r4, r3
 80013aa:	f7ff ffe7 	bl	800137c <__malloc_lock>
 80013ae:	4a1e      	ldr	r2, [pc, #120]	; (8001428 <_free_r+0x94>)
 80013b0:	9801      	ldr	r0, [sp, #4]
 80013b2:	6813      	ldr	r3, [r2, #0]
 80013b4:	b933      	cbnz	r3, 80013c4 <_free_r+0x30>
 80013b6:	6063      	str	r3, [r4, #4]
 80013b8:	6014      	str	r4, [r2, #0]
 80013ba:	b003      	add	sp, #12
 80013bc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013c0:	f7ff bfe2 	b.w	8001388 <__malloc_unlock>
 80013c4:	42a3      	cmp	r3, r4
 80013c6:	d908      	bls.n	80013da <_free_r+0x46>
 80013c8:	6825      	ldr	r5, [r4, #0]
 80013ca:	1961      	adds	r1, r4, r5
 80013cc:	428b      	cmp	r3, r1
 80013ce:	bf01      	itttt	eq
 80013d0:	6819      	ldreq	r1, [r3, #0]
 80013d2:	685b      	ldreq	r3, [r3, #4]
 80013d4:	1949      	addeq	r1, r1, r5
 80013d6:	6021      	streq	r1, [r4, #0]
 80013d8:	e7ed      	b.n	80013b6 <_free_r+0x22>
 80013da:	461a      	mov	r2, r3
 80013dc:	685b      	ldr	r3, [r3, #4]
 80013de:	b10b      	cbz	r3, 80013e4 <_free_r+0x50>
 80013e0:	42a3      	cmp	r3, r4
 80013e2:	d9fa      	bls.n	80013da <_free_r+0x46>
 80013e4:	6811      	ldr	r1, [r2, #0]
 80013e6:	1855      	adds	r5, r2, r1
 80013e8:	42a5      	cmp	r5, r4
 80013ea:	d10b      	bne.n	8001404 <_free_r+0x70>
 80013ec:	6824      	ldr	r4, [r4, #0]
 80013ee:	4421      	add	r1, r4
 80013f0:	1854      	adds	r4, r2, r1
 80013f2:	42a3      	cmp	r3, r4
 80013f4:	6011      	str	r1, [r2, #0]
 80013f6:	d1e0      	bne.n	80013ba <_free_r+0x26>
 80013f8:	681c      	ldr	r4, [r3, #0]
 80013fa:	685b      	ldr	r3, [r3, #4]
 80013fc:	6053      	str	r3, [r2, #4]
 80013fe:	4421      	add	r1, r4
 8001400:	6011      	str	r1, [r2, #0]
 8001402:	e7da      	b.n	80013ba <_free_r+0x26>
 8001404:	d902      	bls.n	800140c <_free_r+0x78>
 8001406:	230c      	movs	r3, #12
 8001408:	6003      	str	r3, [r0, #0]
 800140a:	e7d6      	b.n	80013ba <_free_r+0x26>
 800140c:	6825      	ldr	r5, [r4, #0]
 800140e:	1961      	adds	r1, r4, r5
 8001410:	428b      	cmp	r3, r1
 8001412:	bf04      	itt	eq
 8001414:	6819      	ldreq	r1, [r3, #0]
 8001416:	685b      	ldreq	r3, [r3, #4]
 8001418:	6063      	str	r3, [r4, #4]
 800141a:	bf04      	itt	eq
 800141c:	1949      	addeq	r1, r1, r5
 800141e:	6021      	streq	r1, [r4, #0]
 8001420:	6054      	str	r4, [r2, #4]
 8001422:	e7ca      	b.n	80013ba <_free_r+0x26>
 8001424:	b003      	add	sp, #12
 8001426:	bd30      	pop	{r4, r5, pc}
 8001428:	20000088 	.word	0x20000088

0800142c <_read_r>:
 800142c:	b538      	push	{r3, r4, r5, lr}
 800142e:	4d07      	ldr	r5, [pc, #28]	; (800144c <_read_r+0x20>)
 8001430:	4604      	mov	r4, r0
 8001432:	4608      	mov	r0, r1
 8001434:	4611      	mov	r1, r2
 8001436:	2200      	movs	r2, #0
 8001438:	602a      	str	r2, [r5, #0]
 800143a:	461a      	mov	r2, r3
 800143c:	f7fe ff56 	bl	80002ec <_read>
 8001440:	1c43      	adds	r3, r0, #1
 8001442:	d102      	bne.n	800144a <_read_r+0x1e>
 8001444:	682b      	ldr	r3, [r5, #0]
 8001446:	b103      	cbz	r3, 800144a <_read_r+0x1e>
 8001448:	6023      	str	r3, [r4, #0]
 800144a:	bd38      	pop	{r3, r4, r5, pc}
 800144c:	20000090 	.word	0x20000090

08001450 <_fstat_r>:
 8001450:	b538      	push	{r3, r4, r5, lr}
 8001452:	4d07      	ldr	r5, [pc, #28]	; (8001470 <_fstat_r+0x20>)
 8001454:	2300      	movs	r3, #0
 8001456:	4604      	mov	r4, r0
 8001458:	4608      	mov	r0, r1
 800145a:	4611      	mov	r1, r2
 800145c:	602b      	str	r3, [r5, #0]
 800145e:	f7fe ff8a 	bl	8000376 <_fstat>
 8001462:	1c43      	adds	r3, r0, #1
 8001464:	d102      	bne.n	800146c <_fstat_r+0x1c>
 8001466:	682b      	ldr	r3, [r5, #0]
 8001468:	b103      	cbz	r3, 800146c <_fstat_r+0x1c>
 800146a:	6023      	str	r3, [r4, #0]
 800146c:	bd38      	pop	{r3, r4, r5, pc}
 800146e:	bf00      	nop
 8001470:	20000090 	.word	0x20000090

08001474 <_isatty_r>:
 8001474:	b538      	push	{r3, r4, r5, lr}
 8001476:	4d06      	ldr	r5, [pc, #24]	; (8001490 <_isatty_r+0x1c>)
 8001478:	2300      	movs	r3, #0
 800147a:	4604      	mov	r4, r0
 800147c:	4608      	mov	r0, r1
 800147e:	602b      	str	r3, [r5, #0]
 8001480:	f7fe ff89 	bl	8000396 <_isatty>
 8001484:	1c43      	adds	r3, r0, #1
 8001486:	d102      	bne.n	800148e <_isatty_r+0x1a>
 8001488:	682b      	ldr	r3, [r5, #0]
 800148a:	b103      	cbz	r3, 800148e <_isatty_r+0x1a>
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	bd38      	pop	{r3, r4, r5, pc}
 8001490:	20000090 	.word	0x20000090

08001494 <_init>:
 8001494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001496:	bf00      	nop
 8001498:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800149a:	bc08      	pop	{r3}
 800149c:	469e      	mov	lr, r3
 800149e:	4770      	bx	lr

080014a0 <_fini>:
 80014a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014a2:	bf00      	nop
 80014a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014a6:	bc08      	pop	{r3}
 80014a8:	469e      	mov	lr, r3
 80014aa:	4770      	bx	lr
