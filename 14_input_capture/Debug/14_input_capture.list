
14_input_capture.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002d4  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800046c  08000474  00010474  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800046c  0800046c  00010474  2**0
                  CONTENTS
  4 .ARM          00000000  0800046c  0800046c  00010474  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800046c  08000474  00010474  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800046c  0800046c  0001046c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000470  08000470  00010470  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010474  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000474  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000474  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010474  2**0
                  CONTENTS, READONLY
 12 .debug_info   000006d2  00000000  00000000  000104a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000186  00000000  00000000  00010b76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00010d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  00010d78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000106c  00000000  00000000  00010dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ca5  00000000  00000000  00011e34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00053749  00000000  00000000  00012ad9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00066222  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000c8  00000000  00000000  00066274  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000454 	.word	0x08000454

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000454 	.word	0x08000454

080001d8 <main>:
#include "tim.h"

int timestamp = 0;

int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0

	tim4_pd12_output_compare();
 80001dc:	f000 f814 	bl	8000208 <tim4_pd12_output_compare>
	tim3_pa6_input_capture();
 80001e0:	f000 f8b2 	bl	8000348 <tim3_pa6_input_capture>

	while(1)
	{
		/*Wait until edge is captured*/
		while(! (TIM3->SR & SR_CC1IF)) { }
 80001e4:	bf00      	nop
 80001e6:	4b06      	ldr	r3, [pc, #24]	; (8000200 <main+0x28>)
 80001e8:	691b      	ldr	r3, [r3, #16]
 80001ea:	f003 0302 	and.w	r3, r3, #2
 80001ee:	2b00      	cmp	r3, #0
 80001f0:	d0f9      	beq.n	80001e6 <main+0xe>
		/*Read captured Value */
		timestamp = TIM3->CCR1;
 80001f2:	4b03      	ldr	r3, [pc, #12]	; (8000200 <main+0x28>)
 80001f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80001f6:	461a      	mov	r2, r3
 80001f8:	4b02      	ldr	r3, [pc, #8]	; (8000204 <main+0x2c>)
 80001fa:	601a      	str	r2, [r3, #0]
		while(! (TIM3->SR & SR_CC1IF)) { }
 80001fc:	e7f2      	b.n	80001e4 <main+0xc>
 80001fe:	bf00      	nop
 8000200:	40000400 	.word	0x40000400
 8000204:	2000001c 	.word	0x2000001c

08000208 <tim4_pd12_output_compare>:
	/*Enable Timer */
	TIM4->CR1 = CR1_CEN;
}

void tim4_pd12_output_compare(void)
{
 8000208:	b480      	push	{r7}
 800020a:	af00      	add	r7, sp, #0
	/* Enable clock access to GPIOD */
	RCC->AHB1ENR |= GPIODEN;
 800020c:	4b4b      	ldr	r3, [pc, #300]	; (800033c <tim4_pd12_output_compare+0x134>)
 800020e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000210:	4a4a      	ldr	r2, [pc, #296]	; (800033c <tim4_pd12_output_compare+0x134>)
 8000212:	f043 0308 	orr.w	r3, r3, #8
 8000216:	6313      	str	r3, [r2, #48]	; 0x30
	/*Set GPIOD pins 12 - 15 to alternate mode */
	GPIOD->MODER &=~ (1U<<24);
 8000218:	4b49      	ldr	r3, [pc, #292]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	4a48      	ldr	r2, [pc, #288]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800021e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000222:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<25);
 8000224:	4b46      	ldr	r3, [pc, #280]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	4a45      	ldr	r2, [pc, #276]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800022a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800022e:	6013      	str	r3, [r2, #0]

	GPIOD->MODER &=~ (1U<<26);
 8000230:	4b43      	ldr	r3, [pc, #268]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	4a42      	ldr	r2, [pc, #264]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000236:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800023a:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<27);
 800023c:	4b40      	ldr	r3, [pc, #256]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	4a3f      	ldr	r2, [pc, #252]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000242:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8000246:	6013      	str	r3, [r2, #0]

	GPIOD->MODER &=~ (1U<<28);
 8000248:	4b3d      	ldr	r3, [pc, #244]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	4a3c      	ldr	r2, [pc, #240]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800024e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000252:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<29);
 8000254:	4b3a      	ldr	r3, [pc, #232]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a39      	ldr	r2, [pc, #228]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800025a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800025e:	6013      	str	r3, [r2, #0]

	GPIOD->MODER &=~ (1U<<30);
 8000260:	4b37      	ldr	r3, [pc, #220]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	4a36      	ldr	r2, [pc, #216]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000266:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800026a:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<31);
 800026c:	4b34      	ldr	r3, [pc, #208]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	4a33      	ldr	r2, [pc, #204]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000272:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000276:	6013      	str	r3, [r2, #0]

	/* Set alternate function to AF2 (TIM4) */
	GPIOD->AFR[1] |= (1U<<17);
 8000278:	4b31      	ldr	r3, [pc, #196]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800027a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800027c:	4a30      	ldr	r2, [pc, #192]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800027e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000282:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |= (1U<<21);
 8000284:	4b2e      	ldr	r3, [pc, #184]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000286:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000288:	4a2d      	ldr	r2, [pc, #180]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800028a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800028e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |= (1U<<25);
 8000290:	4b2b      	ldr	r3, [pc, #172]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000292:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000294:	4a2a      	ldr	r2, [pc, #168]	; (8000340 <tim4_pd12_output_compare+0x138>)
 8000296:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800029a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |= (1U<<29);
 800029c:	4b28      	ldr	r3, [pc, #160]	; (8000340 <tim4_pd12_output_compare+0x138>)
 800029e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80002a0:	4a27      	ldr	r2, [pc, #156]	; (8000340 <tim4_pd12_output_compare+0x138>)
 80002a2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80002a6:	6253      	str	r3, [r2, #36]	; 0x24

	/*Enable clock access */
	RCC->APB1ENR |= TIM4EN;
 80002a8:	4b24      	ldr	r3, [pc, #144]	; (800033c <tim4_pd12_output_compare+0x134>)
 80002aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002ac:	4a23      	ldr	r2, [pc, #140]	; (800033c <tim4_pd12_output_compare+0x134>)
 80002ae:	f043 0304 	orr.w	r3, r3, #4
 80002b2:	6413      	str	r3, [r2, #64]	; 0x40
	/*Set Prescaler value*/
	TIM4->PSC = 1600 - 1; //16 000 000 / 1600 = 10 000
 80002b4:	4b23      	ldr	r3, [pc, #140]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002b6:	f240 623f 	movw	r2, #1599	; 0x63f
 80002ba:	629a      	str	r2, [r3, #40]	; 0x28
	/*Set auto-reload value */
	TIM4->ARR = 10000 - 1; // 10000 / 10000 = 1
 80002bc:	4b21      	ldr	r3, [pc, #132]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002be:	f242 720f 	movw	r2, #9999	; 0x270f
 80002c2:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Set output compare toggle mode	 */
	TIM4->CCMR1 |= OC_TOGGLE;
 80002c4:	4b1f      	ldr	r3, [pc, #124]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002c6:	699b      	ldr	r3, [r3, #24]
 80002c8:	4a1e      	ldr	r2, [pc, #120]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002ca:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 80002ce:	6193      	str	r3, [r2, #24]
	TIM4->CCMR1 |= OC_TOGGLE2;
 80002d0:	4b1c      	ldr	r3, [pc, #112]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002d2:	699b      	ldr	r3, [r3, #24]
 80002d4:	4a1b      	ldr	r2, [pc, #108]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002d6:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 80002da:	6193      	str	r3, [r2, #24]
	TIM4->CCMR2 |= OC_TOGGLE;
 80002dc:	4b19      	ldr	r3, [pc, #100]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002de:	69db      	ldr	r3, [r3, #28]
 80002e0:	4a18      	ldr	r2, [pc, #96]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002e2:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 80002e6:	61d3      	str	r3, [r2, #28]
	TIM4->CCMR2 |= OC_TOGGLE2;
 80002e8:	4b16      	ldr	r3, [pc, #88]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002ea:	69db      	ldr	r3, [r3, #28]
 80002ec:	4a15      	ldr	r2, [pc, #84]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002ee:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 80002f2:	61d3      	str	r3, [r2, #28]
	/*Enable tim4 ch1 in compare mode */
	TIM4->CCER |= CCER_CCR1E;
 80002f4:	4b13      	ldr	r3, [pc, #76]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002f6:	6a1b      	ldr	r3, [r3, #32]
 80002f8:	4a12      	ldr	r2, [pc, #72]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 80002fa:	f043 0301 	orr.w	r3, r3, #1
 80002fe:	6213      	str	r3, [r2, #32]
	TIM4->CCER |= CCER_CCR2E;
 8000300:	4b10      	ldr	r3, [pc, #64]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 8000302:	6a1b      	ldr	r3, [r3, #32]
 8000304:	4a0f      	ldr	r2, [pc, #60]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 8000306:	f043 0310 	orr.w	r3, r3, #16
 800030a:	6213      	str	r3, [r2, #32]
	TIM4->CCER |= CCER_CCR3E;
 800030c:	4b0d      	ldr	r3, [pc, #52]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 800030e:	6a1b      	ldr	r3, [r3, #32]
 8000310:	4a0c      	ldr	r2, [pc, #48]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 8000312:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000316:	6213      	str	r3, [r2, #32]
	TIM4->CCER |= CCER_CCR4E;
 8000318:	4b0a      	ldr	r3, [pc, #40]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 800031a:	6a1b      	ldr	r3, [r3, #32]
 800031c:	4a09      	ldr	r2, [pc, #36]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 800031e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000322:	6213      	str	r3, [r2, #32]

	/*clear counter */
	TIM4->CNT = 0;
 8000324:	4b07      	ldr	r3, [pc, #28]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 8000326:	2200      	movs	r2, #0
 8000328:	625a      	str	r2, [r3, #36]	; 0x24
	/*Enable Timer */
	TIM4->CR1 = CR1_CEN;
 800032a:	4b06      	ldr	r3, [pc, #24]	; (8000344 <tim4_pd12_output_compare+0x13c>)
 800032c:	2201      	movs	r2, #1
 800032e:	601a      	str	r2, [r3, #0]
}
 8000330:	bf00      	nop
 8000332:	46bd      	mov	sp, r7
 8000334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000338:	4770      	bx	lr
 800033a:	bf00      	nop
 800033c:	40023800 	.word	0x40023800
 8000340:	40020c00 	.word	0x40020c00
 8000344:	40000800 	.word	0x40000800

08000348 <tim3_pa6_input_capture>:

void tim3_pa6_input_capture(void)
{
 8000348:	b480      	push	{r7}
 800034a:	af00      	add	r7, sp, #0
	/* Enable clock access to GPIOA */
	RCC->AHB1ENR |= GPIOAEN;
 800034c:	4b17      	ldr	r3, [pc, #92]	; (80003ac <tim3_pa6_input_capture+0x64>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a16      	ldr	r2, [pc, #88]	; (80003ac <tim3_pa6_input_capture+0x64>)
 8000352:	f043 0301 	orr.w	r3, r3, #1
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
	/* Set PA6 mode to alternate function */
	GPIOA->MODER &=~ (1U<<12);
 8000358:	4b15      	ldr	r3, [pc, #84]	; (80003b0 <tim3_pa6_input_capture+0x68>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <tim3_pa6_input_capture+0x68>)
 800035e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000362:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<13);
 8000364:	4b12      	ldr	r3, [pc, #72]	; (80003b0 <tim3_pa6_input_capture+0x68>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4a11      	ldr	r2, [pc, #68]	; (80003b0 <tim3_pa6_input_capture+0x68>)
 800036a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800036e:	6013      	str	r3, [r2, #0]
	/* Set PA6 alternate function type to TIM3_CH1(AF01) */
	GPIOA->AFR[0] |= (1U<<25);
 8000370:	4b0f      	ldr	r3, [pc, #60]	; (80003b0 <tim3_pa6_input_capture+0x68>)
 8000372:	6a1b      	ldr	r3, [r3, #32]
 8000374:	4a0e      	ldr	r2, [pc, #56]	; (80003b0 <tim3_pa6_input_capture+0x68>)
 8000376:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800037a:	6213      	str	r3, [r2, #32]
	/* Enable clock access to tim3 */
	RCC->APB1ENR |= TIM3EN;
 800037c:	4b0b      	ldr	r3, [pc, #44]	; (80003ac <tim3_pa6_input_capture+0x64>)
 800037e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000380:	4a0a      	ldr	r2, [pc, #40]	; (80003ac <tim3_pa6_input_capture+0x64>)
 8000382:	f043 0302 	orr.w	r3, r3, #2
 8000386:	6413      	str	r3, [r2, #64]	; 0x40
	/* Set prescaler */
	TIM3->PSC = 16000 - 1;
 8000388:	4b0a      	ldr	r3, [pc, #40]	; (80003b4 <tim3_pa6_input_capture+0x6c>)
 800038a:	f643 627f 	movw	r2, #15999	; 0x3e7f
 800038e:	629a      	str	r2, [r3, #40]	; 0x28
	/* Set CH1 to input capture */
	TIM3->CCMR1 = CCER_CC1S;
 8000390:	4b08      	ldr	r3, [pc, #32]	; (80003b4 <tim3_pa6_input_capture+0x6c>)
 8000392:	2201      	movs	r2, #1
 8000394:	619a      	str	r2, [r3, #24]
	/* Set CH1 to capture at rising edge */
	TIM3->CCER = CCER_CCR1E;
 8000396:	4b07      	ldr	r3, [pc, #28]	; (80003b4 <tim3_pa6_input_capture+0x6c>)
 8000398:	2201      	movs	r2, #1
 800039a:	621a      	str	r2, [r3, #32]
	/* Enable TIM3 */
	TIM3->CR1 = CR1_CEN;
 800039c:	4b05      	ldr	r3, [pc, #20]	; (80003b4 <tim3_pa6_input_capture+0x6c>)
 800039e:	2201      	movs	r2, #1
 80003a0:	601a      	str	r2, [r3, #0]
}
 80003a2:	bf00      	nop
 80003a4:	46bd      	mov	sp, r7
 80003a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003aa:	4770      	bx	lr
 80003ac:	40023800 	.word	0x40023800
 80003b0:	40020000 	.word	0x40020000
 80003b4:	40000400 	.word	0x40000400

080003b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003b8:	480d      	ldr	r0, [pc, #52]	; (80003f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003ba:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003c0:	480c      	ldr	r0, [pc, #48]	; (80003f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80003c2:	490d      	ldr	r1, [pc, #52]	; (80003f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003c4:	4a0d      	ldr	r2, [pc, #52]	; (80003fc <LoopForever+0xe>)
  movs r3, #0
 80003c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003c8:	e002      	b.n	80003d0 <LoopCopyDataInit>

080003ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ce:	3304      	adds	r3, #4

080003d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003d4:	d3f9      	bcc.n	80003ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003d6:	4a0a      	ldr	r2, [pc, #40]	; (8000400 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003d8:	4c0a      	ldr	r4, [pc, #40]	; (8000404 <LoopForever+0x16>)
  movs r3, #0
 80003da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003dc:	e001      	b.n	80003e2 <LoopFillZerobss>

080003de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003e0:	3204      	adds	r2, #4

080003e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003e4:	d3fb      	bcc.n	80003de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003e6:	f000 f811 	bl	800040c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ea:	f7ff fef5 	bl	80001d8 <main>

080003ee <LoopForever>:

LoopForever:
  b LoopForever
 80003ee:	e7fe      	b.n	80003ee <LoopForever>
  ldr   r0, =_estack
 80003f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003f8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003fc:	08000474 	.word	0x08000474
  ldr r2, =_sbss
 8000400:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000404:	20000020 	.word	0x20000020

08000408 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000408:	e7fe      	b.n	8000408 <ADC_IRQHandler>
	...

0800040c <__libc_init_array>:
 800040c:	b570      	push	{r4, r5, r6, lr}
 800040e:	4d0d      	ldr	r5, [pc, #52]	; (8000444 <__libc_init_array+0x38>)
 8000410:	4c0d      	ldr	r4, [pc, #52]	; (8000448 <__libc_init_array+0x3c>)
 8000412:	1b64      	subs	r4, r4, r5
 8000414:	10a4      	asrs	r4, r4, #2
 8000416:	2600      	movs	r6, #0
 8000418:	42a6      	cmp	r6, r4
 800041a:	d109      	bne.n	8000430 <__libc_init_array+0x24>
 800041c:	4d0b      	ldr	r5, [pc, #44]	; (800044c <__libc_init_array+0x40>)
 800041e:	4c0c      	ldr	r4, [pc, #48]	; (8000450 <__libc_init_array+0x44>)
 8000420:	f000 f818 	bl	8000454 <_init>
 8000424:	1b64      	subs	r4, r4, r5
 8000426:	10a4      	asrs	r4, r4, #2
 8000428:	2600      	movs	r6, #0
 800042a:	42a6      	cmp	r6, r4
 800042c:	d105      	bne.n	800043a <__libc_init_array+0x2e>
 800042e:	bd70      	pop	{r4, r5, r6, pc}
 8000430:	f855 3b04 	ldr.w	r3, [r5], #4
 8000434:	4798      	blx	r3
 8000436:	3601      	adds	r6, #1
 8000438:	e7ee      	b.n	8000418 <__libc_init_array+0xc>
 800043a:	f855 3b04 	ldr.w	r3, [r5], #4
 800043e:	4798      	blx	r3
 8000440:	3601      	adds	r6, #1
 8000442:	e7f2      	b.n	800042a <__libc_init_array+0x1e>
 8000444:	0800046c 	.word	0x0800046c
 8000448:	0800046c 	.word	0x0800046c
 800044c:	0800046c 	.word	0x0800046c
 8000450:	08000470 	.word	0x08000470

08000454 <_init>:
 8000454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000456:	bf00      	nop
 8000458:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800045a:	bc08      	pop	{r3}
 800045c:	469e      	mov	lr, r3
 800045e:	4770      	bx	lr

08000460 <_fini>:
 8000460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000462:	bf00      	nop
 8000464:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000466:	bc08      	pop	{r3}
 8000468:	469e      	mov	lr, r3
 800046a:	4770      	bx	lr
